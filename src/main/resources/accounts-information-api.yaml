openapi: 3.0.1
info:
  title: Песочница открытых банковских API
  description: Песочница открытых банковских API
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: apiteam@st.by
  version: '1'
servers:
  - url: 'https://paymentapi.st.by:8243/open-banking/v1.0'
  - url: 'http://paymentapi.st.by:8280/open-banking/v1.0'
tags:
  - name: AccountConsents
    description: Согласие на доступ к счету
  - name: Accounts
    description: Счета
  - name: Balances
    description: Баланс
  - name: Transactions
    description: Транзакции
  - name: Statements
    description: Выписки
paths:
  /accounts:
    get:
      tags:
        - Accounts
      summary: Accounts info
      description: Получение списка счетов и информации по ним
      operationId: getAccounts
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-accountConsentId'
      responses:
        '200':
          $ref: '#/components/responses/200GetAccounts'
        '400':
          $ref: '#/components/responses/400Error'
        '401':
          $ref: '#/components/responses/401Error'
        '403':
          $ref: '#/components/responses/403Error'
        '405':
          $ref: '#/components/responses/405Error'
        '406':
          $ref: '#/components/responses/406Error'
        '415':
          $ref: '#/components/responses/415Error'
        '429':
          $ref: '#/components/responses/429Error'
        '500':
          $ref: '#/components/responses/500Error'
      security:
        - default: [ ]
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  '/accounts/{accountId}':
    get:
      tags:
        - Accounts
      summary: Account info by ID
      description: Получение информации по счету
      operationId: getAccountById
      parameters:
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-accountConsentId'
      responses:
        '200':
          $ref: '#/components/responses/200AccountById'
        '400':
          $ref: '#/components/responses/400Error'
        '401':
          $ref: '#/components/responses/401Error'
        '403':
          $ref: '#/components/responses/403Error'
        '405':
          $ref: '#/components/responses/405Error'
        '406':
          $ref: '#/components/responses/406Error'
        '415':
          $ref: '#/components/responses/415Error'
        '429':
          $ref: '#/components/responses/429Error'
        '500':
          $ref: '#/components/responses/500Error'
      security:
        - default: [ ]
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  /accountConsents:
    post:
      tags:
        - AccountConsents
      summary: Create Account Access Consents
      description: Создание согласия на доступ к информации по счету
      operationId: createConsent
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/x-api-key'
      requestBody:
        description: Default
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Consent'
        required: true
      responses:
        '201':
          $ref: '#/components/responses/201AccountAccessConsentsCreated'
        '400':
          $ref: '#/components/responses/400Error'
        '401':
          $ref: '#/components/responses/401Error'
        '403':
          $ref: '#/components/responses/403Error'
        '405':
          $ref: '#/components/responses/405Error'
        '406':
          $ref: '#/components/responses/406Error'
        '415':
          $ref: '#/components/responses/415Error'
        '429':
          $ref: '#/components/responses/429Error'
        '500':
          $ref: '#/components/responses/500Error'
      security:
        - default: [ ]
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  '/accountConsents/authorize':
    post:
      tags:
        - AccountConsents
      summary: Authorize Account Access Consents
      description: Авторизация согласия
      operationId: authorizeConsent
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-accountConsentId'
      responses:
        '200':
          $ref: '#/components/responses/AccountConsentsAuthorized'
        '400':
          $ref: '#/components/responses/400Error'
        '401':
          $ref: '#/components/responses/401Error'
        '403':
          $ref: '#/components/responses/403Error'
        '405':
          $ref: '#/components/responses/405Error'
        '406':
          $ref: '#/components/responses/406Error'
        '415':
          $ref: '#/components/responses/415Error'
        '429':
          $ref: '#/components/responses/429Error'
        '500':
          $ref: '#/components/responses/500Error'
      security:
        - default: [ ]
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  '/accountConsents/reject':
    post:
      tags:
        - AccountConsents
      summary: Reject Account Access Consents
      description: Отклонение согласия
      operationId: rejectConsent
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-accountConsentId'
      responses:
        '200':
          $ref: '#/components/responses/AccountConsentsRejected'
        '400':
          $ref: '#/components/responses/400Error'
        '401':
          $ref: '#/components/responses/401Error'
        '403':
          $ref: '#/components/responses/403Error'
        '405':
          $ref: '#/components/responses/405Error'
        '406':
          $ref: '#/components/responses/406Error'
        '415':
          $ref: '#/components/responses/415Error'
        '429':
          $ref: '#/components/responses/429Error'
        '500':
          $ref: '#/components/responses/500Error'
      security:
        - default: [ ]
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  '/accountConsents/{accountConsentId}':
    get:
      tags:
        - AccountConsents
      summary: Get Account Access Consents
      description: Получение статуса и параметров согласия на доступ к информации по счету
      operationId: getConsentById
      parameters:
        - $ref: '#/components/parameters/accountConsentId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/x-api-key'
      responses:
        '200':
          $ref: '#/components/responses/200AccountAccessConsentsConsentIdRead'
        '400':
          $ref: '#/components/responses/400Error'
        '401':
          $ref: '#/components/responses/401Error'
        '403':
          $ref: '#/components/responses/403Error'
        '405':
          $ref: '#/components/responses/405Error'
        '406':
          $ref: '#/components/responses/406Error'
        '429':
          $ref: '#/components/responses/429Error'
        '500':
          $ref: '#/components/responses/500Error'
      security:
        - default: [ ]
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
    delete:
      tags:
        - AccountConsents
      summary: Delete Account Access Consents
      description: Удаление (отзыв) согласия на доступ к информации по счету
      operationId: revokeConsent
      parameters:
        - $ref: '#/components/parameters/accountConsentId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/x-api-key'
      responses:
        '204':
          $ref: '#/components/responses/204AccountAccessConsentsConsentIdDeleted'
        '400':
          $ref: '#/components/responses/400Error'
        '401':
          $ref: '#/components/responses/401Error'
        '403':
          $ref: '#/components/responses/403Error'
        '405':
          $ref: '#/components/responses/405Error'
        '406':
          $ref: '#/components/responses/406Error'
        '429':
          $ref: '#/components/responses/429Error'
        '500':
          $ref: '#/components/responses/500Error'
      security:
        - default: [ ]
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  '/accounts/{accountId}/balances':
    get:
      tags:
        - Balances
      summary: Get Balances
      description: Получение баланса по счету
      operationId: getAccountBalanceById
      parameters:
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-accountConsentId'
      responses:
        '200':
          $ref: '#/components/responses/200AccountsAccountIdBalancesRead'
        '400':
          $ref: '#/components/responses/400Error'
        '401':
          $ref: '#/components/responses/401Error'
        '403':
          $ref: '#/components/responses/403Error'
        '405':
          $ref: '#/components/responses/405Error'
        '406':
          $ref: '#/components/responses/406Error'
        '429':
          $ref: '#/components/responses/429Error'
        '500':
          $ref: '#/components/responses/500Error'
      security:
        - default: [ ]
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  /balances:
    get:
      tags:
        - Balances
      summary: Get Balances
      description: Получение баланса по всем счетам
      operationId: GetBalances
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-accountConsentId'
      responses:
        '200':
          $ref: '#/components/responses/200BalancesRead'
        '400':
          $ref: '#/components/responses/400Error'
        '401':
          $ref: '#/components/responses/401Error'
        '403':
          $ref: '#/components/responses/403Error'
        '404':
          $ref: '#/components/responses/404Error'
        '405':
          $ref: '#/components/responses/405Error'
        '406':
          $ref: '#/components/responses/406Error'
        '429':
          $ref: '#/components/responses/429Error'
        '500':
          $ref: '#/components/responses/500Error'
      security:
        - default: [ ]
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  '/accounts/{accountId}/statements/{statementId}':
    get:
      tags:
        - Statements
      summary: Get Statements
      description: Получение выписки по счету по созданному идентификатору выписки
      operationId: GetAccountsAccountIdStatementsStatementId
      parameters:
        - $ref: '#/components/parameters/statementId'
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-accountConsentId'
      responses:
        '200':
          $ref: '#/components/responses/200AccountsAccountIdStatementsStatementIdRead'
        '400':
          $ref: '#/components/responses/400Error'
        '401':
          $ref: '#/components/responses/401Error'
        '403':
          $ref: '#/components/responses/403Error'
        '404':
          $ref: '#/components/responses/404Error'
        '405':
          $ref: '#/components/responses/405Error'
        '406':
          $ref: '#/components/responses/406Error'
        '429':
          $ref: '#/components/responses/429Error'
        '500':
          $ref: '#/components/responses/500Error'
      security:
        - default: [ ]
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  '/statements/{accountId}':
    post:
      tags:
        - Statements
      summary: Set Statements
      description: Создание выписки по счету
      operationId: SetStatement
      parameters:
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-accountConsentId'
      requestBody:
        description: Default
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OBSetStatement'
        required: true
      responses:
        '201':
          $ref: '#/components/responses/201AccountsAccountIdStatementsStatementIdRead'
        '400':
          $ref: '#/components/responses/400Error'
        '401':
          $ref: '#/components/responses/401Error'
        '403':
          $ref: '#/components/responses/403Error'
        '404':
          $ref: '#/components/responses/404Error'
        '405':
          $ref: '#/components/responses/405Error'
        '406':
          $ref: '#/components/responses/406Error'
        '429':
          $ref: '#/components/responses/429Error'
        '500':
          $ref: '#/components/responses/500Error'
      security:
        - default: [ ]
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  '/accounts/{accountId}/transactions/{transactionListId}':
    get:
      tags:
        - Transactions
      summary: Get Transactions
      description: >-
        Получение перечня транзакций по счету по созданному идентификатору
        списка транзакций
      operationId: GetAccountsAccountIdTransactions
      parameters:
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/transactionListId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-accountConsentId'
      responses:
        '200':
          $ref: '#/components/responses/200AccountsAccountIdTransactionsRead'
        '400':
          $ref: '#/components/responses/400Error'
        '401':
          $ref: '#/components/responses/401Error'
        '403':
          $ref: '#/components/responses/403Error'
        '405':
          $ref: '#/components/responses/405Error'
        '406':
          $ref: '#/components/responses/406Error'
        '429':
          $ref: '#/components/responses/429Error'
        '500':
          $ref: '#/components/responses/500Error'
      security:
        - default: [ ]
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  '/accounts/{accountId}/transactions':
    post:
      tags:
        - Transactions
      summary: Set Transactions
      description: Создание перечня транзакций по счету
      operationId: SetTransaction
      parameters:
        - $ref: '#/components/parameters/accountId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/x-accountConsentId'
      requestBody:
        description: Default
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OBSetTransaction'
        required: true
      responses:
        '201':
          $ref: '#/components/responses/200SetAccountsTransaction'
        '400':
          $ref: '#/components/responses/400Error'
        '401':
          $ref: '#/components/responses/401Error'
        '403':
          $ref: '#/components/responses/403Error'
        '404':
          $ref: '#/components/responses/404Error'
        '405':
          $ref: '#/components/responses/405Error'
        '406':
          $ref: '#/components/responses/406Error'
        '429':
          $ref: '#/components/responses/429Error'
        '500':
          $ref: '#/components/responses/500Error'
      security:
        - default: [ ]
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
components:
  schemas:
    OBSetStatement:
      required:
        - Data
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBSetStatementData'
        Risk:
          $ref: '#/components/schemas/Risk'
    OBSetStatementData:
      type: object
      properties:
        statement:
          $ref: '#/components/schemas/OBReadSetDataStatement'
    OBReadSetDataStatement:
      type: object
      properties:
        fromBookingDate:
          $ref: '#/components/schemas/fromBookingDate'
        toBookingDate:
          $ref: '#/components/schemas/toBookingDate'
    fromBookingDate:
      type: string
      format: date
      example: '2021-04-16'
    toBookingDate:
      type: string
      format: date
      example: '2021-04-17'
    OBSetTransaction:
      required:
        - Data
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBReadDataTransaction'
        Links:
          $ref: '#/components/schemas/LinksPostTransaction'
        Meta:
          $ref: '#/components/schemas/MetaTransaction'
    MetaTransaction:
      type: object
      properties:
        total_pages:
          type: integer
          nullable: true
          example: 1
        firstAvailableDateTime:
          type: string
          format: date-time
          nullable: true
          example: '2021-02-16T22:00:00+03:00'
        lastAvailableDateTime:
          type: string
          format: date-time
          nullable: true
          example: '2021-04-17T23:00:00+03:00'
    LinksPostTransaction:
      required:
        - self
      type: object
      properties:
        self:
          type: string
          example: >-
            https://api.bank.by/oapi-channel/open-banking/v1.0/accounts/99365/transactions/987654321
        last:
          type: string
          nullable: true
        first:
          type: string
          nullable: true
        next:
          type: string
          nullable: true
    OBReadDataTransaction:
      type: object
      properties:
        Transaction:
          type: array
          items:
            $ref: '#/components/schemas/OBReadSetDataTransaction'
    OBReadSetDataTransaction:
      type: object
      properties:
        fromBookingDateTime:
          $ref: '#/components/schemas/fromBookingDateTime'
        toBookingDateTime:
          $ref: '#/components/schemas/toBookingDateTime'
    Risk:
      type: object
    OBSetAccountsTransaction:
      required:
        - Data
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBSetAccountsTransactionData'
        Links:
          $ref: '#/components/schemas/Links'
        Meta:
          $ref: '#/components/schemas/Meta'
    OBSetAccountsTransactionData:
      type: object
      properties:
        transaction:
          type: array
          items:
            $ref: '#/components/schemas/OBSetAccountsTransAction1'
    OBSetAccountsTransAction1:
      type: object
      properties:
        transactionListId:
          $ref: '#/components/schemas/transactionListId'
        accountId:
          $ref: '#/components/schemas/AccountId'
        fromBookingDateTime:
          $ref: '#/components/schemas/fromBookingDateTime'
        toBookingDateTime:
          $ref: '#/components/schemas/toBookingDateTime'
      description: Создать список транзакций.
    fromBookingDateTime:
      type: string
      format: date-time
      example: '2021-04-16T09:00:07+03:00'
    toBookingDateTime:
      type: string
      format: date-time
      example: '2021-04-17T09:00:07+03:00'
    OBReadTransaction6:
      required:
        - Data
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBReadDataTransaction6'
        Links:
          $ref: '#/components/schemas/LinkGetTransaction'
        Meta:
          $ref: '#/components/schemas/MetaGetTransaction'
    MetaGetTransaction:
      type: object
      properties:
        total_pages:
          type: integer
          nullable: true
          example: 9
        firstAvailableDateTime:
          type: string
          format: date-time
          nullable: true
          example: '2021-02-16T22:00:00+03:00'
        lastAvailableDateTime:
          type: string
          format: date-time
          nullable: true
          example: '2021-04-17T23:00:00+03:00'
      additionalProperties: false
    LinkGetTransaction:
      required:
        - self
      type: object
      properties:
        self:
          type: string
          example: 'https://api.bank.by/oapi-channel/open-banking/v1.0/transactions?pg=9'
        last:
          type: string
          nullable: true
          example: >-
            'https://api.bank.by/oapi-channel/open-banking/v1.0/transactions/987654321?pg=9'
        first:
          type: string
          nullable: true
          example: >-
            https://api.bank.by/oapi-channel/open-banking/v1.0/transactions/987654321
        next:
          type: string
          nullable: true
    OBReadStatement2:
      required:
        - Data
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBReadDataStatement2'
        Links:
          $ref: '#/components/schemas/LinksStatementGet'
        Meta:
          $ref: '#/components/schemas/Meta'
      additionalProperties: false
    LinksStatementGet:
      required:
        - Self
      type: object
      properties:
        Self:
          type: string
          format: uri
          example: >-
            https://api.bank.by/oapi-channel/open-banking/v1.0/accounts/99365/statements/8sfhke-sifhkeuf-97813
        First:
          type: string
          format: uri
        Prev:
          type: string
          format: uri
        Next:
          type: string
          format: uri
        Last:
          type: string
          format: uri
      additionalProperties: false
      description: 'Ссылки, относящиеся к полезной нагрузке.'
    OBReadStatement2Post:
      required:
        - Data
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBReadDataStatement2Post'
        Links:
          $ref: '#/components/schemas/LinksStatementPost'
        Meta:
          $ref: '#/components/schemas/Meta'
    LinksStatementPost:
      required:
        - Self
      type: object
      properties:
        Self:
          type: string
          format: uri
          example: >-
            https://api.bank.by/oapi-channel/open-banking/v1.0/accounts/99365/statement/8sfhke-sifhkeuf-97813
        First:
          type: string
          format: uri
        Prev:
          type: string
          format: uri
        Next:
          type: string
          format: uri
        Last:
          type: string
          format: uri
      additionalProperties: false
      description: 'Ссылки, относящиеся к полезной нагрузке.'
    transactionListId:
      maxLength: 35
      minLength: 1
      type: string
      example: '987654321'
    OBReadDataTransaction6:
      type: object
      properties:
        transactionListId:
          $ref: '#/components/schemas/transactionListId'
        transaction:
          type: array
          items:
            $ref: '#/components/schemas/OBTransaction6'
      additionalProperties: false
    OBTransaction6:
      required:
        - accountId
        - amount
        - bookingDateTime
        - creditDebitIndicator
        - currency
        - status
      type: object
      properties:
        accountId:
          $ref: '#/components/schemas/AccountId'
        transactionId:
          $ref: '#/components/schemas/TransactionId'
        transactionReference:
          $ref: '#/components/schemas/TransactionReference'
        creditDebitIndicator:
          $ref: '#/components/schemas/OBCreditDebitCode_1'
        status:
          $ref: '#/components/schemas/OBEntryStatus1Code'
        bookingDateTime:
          $ref: '#/components/schemas/bookingDateTime'
        valueDate:
          $ref: '#/components/schemas/valueDate'
        transactionDetails:
          $ref: '#/components/schemas/transactionDetails'
        addressLine:
          $ref: '#/components/schemas/addressLine'
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        chargeAmount:
          $ref: '#/components/schemas/OBActiveChargeAmount'
        currencyExchange:
          $ref: '#/components/schemas/OBCurrencyExchange5'
        bankTransactionCode:
          $ref: '#/components/schemas/OBBankTransactionCodeStructure1'
        proprietaryBankTransactionCode:
          $ref: '#/components/schemas/ProprietaryBankTransactionCodeStructure1'
        balance:
          $ref: '#/components/schemas/OBTransactionCashBalance'
        merchantDetails:
          $ref: '#/components/schemas/OBMerchantDetails1'
        debtor:
          $ref: '#/components/schemas/OBDebtor'
        creditor:
          $ref: '#/components/schemas/OBCreditor'
        cardInstrument:
          $ref: '#/components/schemas/OBTransactionCardInstrument1'
      additionalProperties: false
      description: Дополнительные сведения о записи в отчете.
    OBDebtor:
      required:
        - name
        - taxIdentification
      type: object
      properties:
        taxIdentification:
          $ref: '#/components/schemas/OBDebtorTaxIdentification'
        name:
          $ref: '#/components/schemas/OBDebtorName'
        debtorAccount:
          $ref: '#/components/schemas/OBDebtorAccount'
        debtorAgent:
          $ref: '#/components/schemas/OBDebtorAgent'
    OBDebtorTaxIdentification:
      maxLength: 35
      minLength: 1
      pattern: '^[A-Z]{3}[A-Z0-9]{9}$'
      required:
        - taxIdentification
      type: string
      description: Налоговый идентификационный номер плательщика
      example: INP511111111
    OBDebtorName:
      maxLength: 140
      minLength: 1
      type: string
      description: Наименование плательщика
      example: Иванов Иван Иванович
    OBDebtorAccount:
      type: object
      properties:
        schemeName:
          $ref: '#/components/schemas/OBDebtorAccountSchemeName'
        identification:
          $ref: '#/components/schemas/OBdebtorAccountIdentification'
        name:
          $ref: '#/components/schemas/OBDebtorAccountName'
    OBDebtorAgent:
      type: object
      properties:
        identification:
          $ref: '#/components/schemas/OBdebtorAgentIdentification'
        name:
          $ref: '#/components/schemas/OBDebtorAgentName'
    OBdebtorAgentIdentification:
      pattern: '^[A-Z0-9]{4}[AZ]{2}[A-Z0-9]{2}([A-Z0-9]{3}){0,1}$'
      required:
        - identification
      type: string
      description: >-
        Код, присвоенный финансовому учреждению органом, присваивающим коды в
        соответствии со стандартом ISO 9362 (SWIFT) ”Банковское дело. Банковские
        телекоммуникационные сообщения. Идентификационные коды банков (BIC)“
      example: BAPBBY2X
    OBDebtorAgentName:
      maxLength: 140
      minLength: 1
      type: string
      description: 'Наименование финансового учреждения, обслуживающего плательщика'
      example: ОАО Белагропромбанк
    OBDebtorAccountSchemeName:
      required:
        - schemeName
      type: string
      example: BY.NBRB.IBAN
    OBdebtorAccountIdentification:
      pattern: '^[A-Z]{2}[0-9]{2}[A-Z]{4}[0-9]{4}[A-Z0-9]{16}$'
      required:
        - identification
      type: string
      example: BY28BAPB30141111100110000000
    OBDebtorAccountName:
      maxLength: 140
      minLength: 1
      type: string
      example: Карт-счет физического лица
    OBCreditor:
      required:
        - name
        - taxIdentification
      type: object
      properties:
        taxIdentification:
          $ref: '#/components/schemas/OBCreditorTaxIdentification'
        name:
          $ref: '#/components/schemas/OBCreditorName'
        creditorAccount:
          $ref: '#/components/schemas/OBCreditorAccount'
        creditorAgent:
          $ref: '#/components/schemas/OBCreditorAgent'
    OBCreditorTaxIdentification:
      maxLength: 35
      minLength: 1
      pattern: '^[A-Z]{3}[A-Z0-9]{9}$'
      required:
        - taxIdentification
      type: string
      description: Налоговый идентификационный номера получателя
      example: INN200025739
    OBCreditorName:
      maxLength: 140
      minLength: 1
      type: string
      description: Наименование получателя
      example: ОАО "Березовский мясокомбинат
    OBCreditorAccount:
      type: object
      properties:
        schemeName:
          $ref: '#/components/schemas/OBCreditorAccountSchemeName'
        identification:
          $ref: '#/components/schemas/OBCreditorAccountIdentification'
        name:
          $ref: '#/components/schemas/OBCreditorAccountName'
    OBCreditorAgent:
      type: object
      properties:
        identification:
          $ref: '#/components/schemas/OBCreditorAgentIdentification'
        name:
          $ref: '#/components/schemas/OBCreditorAgentName'
    OBCreditorAgentIdentification:
      pattern: '^[A-Z0-9]{4}[AZ]{2}[A-Z0-9]{2}([A-Z0-9]{3}){0,1}$'
      required:
        - identification
      type: string
      description: >-
        Код, присвоенный финансовому учреждению органом, присваивающим коды в
        соответствии со стандартом ISO 9362 (SWIFT) ”Банковское дело. Банковские
        телекоммуникационные сообщения. Идентификационные коды банков (BIC)“
      example: BAPBBY2X
    OBCreditorAgentName:
      maxLength: 140
      minLength: 1
      type: string
      description: 'Наименование финансового учреждения, обслуживающего плательщика'
      example: ОАО "Белагропромбанк
    OBCreditorAccountSchemeName:
      required:
        - schemeName
      type: string
      example: BY.NBRB.IBAN
    OBCreditorAccountIdentification:
      pattern: '^[A-Z]{2}[0-9]{2}[A-Z]{4}[0-9]{4}[A-Z0-9]{16}$'
      required:
        - identification
      type: string
      example: BY28BAPB30124232900110000000
    OBCreditorAccountName:
      maxLength: 140
      minLength: 1
      type: string
      example: Текущий расчетный счет
    OBTransactionCardInstrument1:
      required:
        - schemeName
      type: object
      properties:
        schemeName:
          type: string
          description: Наименование схемы.
          enum:
            - MasterCard
            - AmericanExpress
            - BelCard
            - Discover
            - VISA
            - Mir
        authorisationType:
          type: string
          description: Тип авторизации карты.
          enum:
            - ConsumerDevice
            - Contactless
            - None
            - PIN
        name:
          maxLength: 140
          minLength: 1
          type: string
          description: Наименование владельца карты.
        identification:
          maxLength: 35
          minLength: 1
          type: string
          description: Идентификационный номер карты.
      additionalProperties: false
      description: 'Детальное описание карточного инструмента, использованного в транзакции.'
    OBMerchantDetails1:
      type: object
      properties:
        MerchantName:
          maxLength: 140
          minLength: 1
          type: string
          description: Наименование продавца.
        MerchantCategoryCode:
          maxLength: 4
          minLength: 3
          type: string
          description: >-
            Код категории относится к типу услуг или товаров, которые продавец
            предоставляет.
      description: 'Реквизиты продавца, участвующего в транзакции.'
    OBTransactionCashBalance:
      required:
        - balanceAmount
        - creditDebitIndicator
        - currency
        - type
      type: object
      properties:
        CreditDebitIndicator:
          $ref: '#/components/schemas/OBCreditDebitCode_2'
        Type:
          $ref: '#/components/schemas/BalanceType'
        balanceAmount:
          pattern: '^d{1,13}$|^d{1,13}.d{1,5}$'
          type: string
          description: Итоговая сумма по балансу для всех дебетовых и кредитовых записей
          example: '300.00000'
        currency:
          pattern: '^[A-Z]{3,3}$'
          type: string
          description: Валюта суммы баланса.
          example: BYN
      additionalProperties: false
      description: Определение баланса по счету после проведения транзакции.
    ProprietaryBankTransactionCodeStructure1:
      required:
        - Code
      type: object
      properties:
        code:
          maxLength: 35
          minLength: 1
          type: string
          description: Собственный банковский код транзакции.
          example: Transfer
        issuer:
          maxLength: 35
          minLength: 1
          type: string
          description: Идентификация эмитента собственного банковского кода транзакции.
          example: Bank
      additionalProperties: false
      description: >-
        Код банковской транзакции в собственной форме, определенный
        организацией, выдавшей данный код.
    OBBankTransactionCodeStructure1:
      required:
        - code
        - subCode
      type: object
      properties:
        code:
          maxLength: 35
          minLength: 1
          type: string
          description: Множество внутри домена.
          example: ReceivedCreditTransfer
        subCode:
          maxLength: 35
          minLength: 1
          type: string
          description: Подмножество внутри множества.
          example: DomesticCreditTransfer
      description: >-
        Множество элементов, используемых для идентификации типа транзакции.
        Подробная информация для полной идентификации транзакции.
    OBCurrencyExchange5:
      required:
        - exchangeRate
        - sourceCurrency
      type: object
      properties:
        sourceCurrency:
          pattern: '^[A-Z]{3,3}$'
          type: string
          description: >-
            Валюта, из которой сумма должна быть конвертирована при конверсии
            валюты.
        targetCurrency:
          pattern: '^[A-Z]{3,3}$'
          type: string
          description: >-
            Валюта, в которую сумма должна быть конвертирована при конверсии
            валюты.
        unitCurrency:
          pattern: '^[A-Z]{3,3}$'
          type: string
          description: 'Валюта, в которой выражается обменный курс при обмене валюты.'
        exchangeRate:
          pattern: '^d{1,11}$|^d{1,11}.d{1,10}$'
          type: number
          description: >-
            Обменный курс. Коэффициент, используемый для конвертации суммы из
            одной валюты в другую. Он отражает цену, по которой одна валюта
            куплена за другую валюту.

            Usage: exchangeRate = unitCurrency/quotedCurrency.
        contractIdentification:
          maxLength: 35
          minLength: 1
          type: string
          description: >-
            Уникальный идентификатор валютного контракта, согласованного между
            инициирующей стороной/бенефициаром и агентом плательщика.
        quotationDateTime:
          type: string
          description: |-
            Дата и время установления котировки обменного курса.
            Все поля даты и времени должны включать часовой пояс:
            2017-04-05T10:43:07+03:00
          format: date-time
          example: '2021-04-17T23:00:00+03:00'
        instructedAmount:
          required:
            - amount
            - currency
          type: object
          properties:
            amount:
              $ref: '#/components/schemas/OBActiveCurrencyAndAmount_SimpleType'
            currency:
              $ref: '#/components/schemas/ActiveOrHistoricCurrencyCode_1'
          description: >-
            Сумма денежных средств, подлежащая переводу между плательщиком и
            получателем средств до вычета расходов, выраженная в валюте,
            обозначенной инициирующей стороной.
      description: >-
        Набор элементов, используемых для предоставления информации об обмене
        валюты.
    OBActiveChargeAmount:
      required:
        - amount
        - currency
      type: object
      properties:
        amount:
          pattern: '^d{1,13}$|^d{1,13}.d{1,5}$'
          type: string
          description: Сумма комиссионного вознаграждения за проведение транзакции
          example: '0.50000'
        currency:
          pattern: '^[A-Z]{3,3}$'
          type: string
          description: Валюта счета.
          example: BYN
      description: Комиссионное вознаграждение за проведение транзакции.
    amount:
      pattern: '^d{1,13}$|^d{1,13}.d{1,5}$'
      type: string
      description: Сумма транзакции
      example: '5.00000'
    currency:
      pattern: '^[A-Z]{3,3}$'
      type: string
      description: 'Валюта, в которую сумма должна быть конвертирована при конверсии валюты.'
      example: BYN
    transactionDetails:
      maximum: 512
      minimum: 1
      type: string
      description: >-
        Информация о транзакции, назначение перевода денежных средств,
        представляющее собой неструктурированный текст.
      example: Денежный перевод от Иванова Ивана Ивановича
    addressLine:
      maxLength: 70
      minLength: 1
      type: string
      description: >-
        Информация, которая находит и идентифицирует конкретный адрес для записи
        транзакции, который представлен в тексте в произвольном формате.
      example: Шлюзовая
    valueDate:
      type: string
      description: >-
        Дата валютирования, когда актив становится доступным владельцу счета в
        случае кредитовой транзакции или становится недоступным владельцу счета
        в случае дебетовой транзакции.

        Usage: Необходима для расчетов с иностранной валютой во избежание
        отсутствия корректной информации о курсе валют). Если статус транзакции
        – ”ожидает отражения“ и присутствует дата валютирования, тогда дата
        валютирования указывает на ожидаемую/ запрашиваемую дату валютирования.
        Пример:

        2017-04-05
      format: date
      example: '2021-04-16'
    bookingDateTime:
      type: string
      description: >-
        Дата и время отражения транзакции по счету на балансе банка.

        Usage: Дата и время отражения являются ожидаемыми, однако если статус –
        ”отражаемая“, дата и время является фактическими..

        Дата и время должны включать часовой пояс:

        2017-04-05T10:43:07+00:00
      format: date-time
      example: '2021-04-16T09:03:00+03:00'
    OBEntryStatus1Code:
      type: string
      description: 'Статус записи о транзакции, отраженный по счету.'
      enum:
        - Booked
        - Pending
    OBCreditDebitCode_1:
      type: string
      description: 'Указывает, является транзакция кредитовой или дебетовой.'
      enum:
        - Credit
        - Debit
    TransactionId:
      maxLength: 35
      minLength: 1
      type: string
      description: Уникальный идентификатор транзакции.
      example: '111'
    TransactionReference:
      maxLength: 35
      minLength: 1
      type: string
      description: Уникальный референс для транзакции. (Уникальная ссылка на сделку).
      example: Ref 1
    OBReadDataStatement2:
      type: object
      properties:
        Statement:
          type: array
          items:
            $ref: '#/components/schemas/OBStatement2'
      additionalProperties: false
    OBReadDataStatement2Post:
      type: object
      properties:
        Statement:
          type: array
          items:
            $ref: '#/components/schemas/OBStatement2Post'
      additionalProperties: false
    StatementId:
      maxLength: 35
      minLength: 1
      type: string
      description: Уникальный идентификатор выписки
      example: 8sfhke-sifhkeuf-97813
    OBStatement2:
      required:
        - creationDateTime
        - fromBookingDate
        - statementId
        - toBookingDate
      type: object
      properties:
        accountId:
          $ref: '#/components/schemas/AccountId'
        statementId:
          $ref: '#/components/schemas/StatementId'
        fromBookingDate:
          $ref: '#/components/schemas/fromBookingDate'
        toBookingDate:
          $ref: '#/components/schemas/toBookingDate'
        creationDateTime:
          $ref: '#/components/schemas/CreationDateTime'
        opavBalance:
          $ref: '#/components/schemas/OpavBalance'
        clavBalance:
          $ref: '#/components/schemas/ClavBalance'
        transaction:
          type: array
          additionalProperties: false
          items:
            $ref: '#/components/schemas/OBTransaction1'
    OpavBalance:
      required:
        - amount
        - creditDebitIndicator
        - currency
      type: object
      properties:
        creditDebitIndicator:
          $ref: '#/components/schemas/OBCreditDebitCode_1'
        amount:
          $ref: '#/components/schemas/amountOpav'
        currency:
          $ref: '#/components/schemas/currencyOpav'
        equivalentAmount:
          $ref: '#/components/schemas/equivalentAmountOpav'
    currencyOpav:
      pattern: '[A-Z]{3}'
      type: string
      example: BYN
    amountOpav:
      pattern: '^d{1,13}$|^d{1,13}.d{1,5}$'
      type: string
      description: Сумма входящего остатка по счету
      example: '10.00000'
    equivalentAmountOpav:
      pattern: '^d{1,13}$|^d{1,13}.d{1,2}$'
      type: string
      description: Сумма транзакции
      example: '10.00'
    ClavBalance:
      required:
        - amount
        - creditDebitIndicator
        - currency
      type: object
      properties:
        creditDebitIndicator:
          $ref: '#/components/schemas/OBCreditDebitCode_1'
        amount:
          $ref: '#/components/schemas/amountClav'
        currency:
          $ref: '#/components/schemas/currencyClav'
        equivalentAmount:
          $ref: '#/components/schemas/equivalentAmountClav'
    currencyClav:
      pattern: '[A-Z]{3}'
      type: string
      example: BYN
    amountClav:
      pattern: '^d{1,13}$|^d{1,13}.d{1,5}$'
      type: string
      description: Сумма входящего остатка по счету
      example: '5.00000'
    equivalentAmountClav:
      pattern: '^d{1,13}$|^d{1,13}.d{1,2}$'
      type: string
      description: 'Сумма транзакции    '
      example: '5.00'
    OBTransaction1:
      required:
        - amount
        - bookingDateTime
        - creditDebitIndicator
        - currency
        - status
      type: object
      properties:
        transactionId:
          $ref: '#/components/schemas/TransactionId'
        creditDebitIndicator:
          $ref: '#/components/schemas/OBCreditDebitCode_1'
        status:
          $ref: '#/components/schemas/OBEntryStatus1Code'
        number:
          $ref: '#/components/schemas/number'
        bookingDateTime:
          $ref: '#/components/schemas/bookingDateTime'
        valueDate:
          $ref: '#/components/schemas/valueDate'
        transactionDetails:
          $ref: '#/components/schemas/transactionDetailsStat'
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        equivalentAmount:
          $ref: '#/components/schemas/equivalentAmount'
        debtor:
          $ref: '#/components/schemas/OBDebtor1'
        creditor:
          $ref: '#/components/schemas/OBCreditor1'
      additionalProperties: false
      description: Предоставляет дополнительные сведения о выписке.
    transactionDetailsStat:
      maxLength: 512
      minLength: 1
      type: string
      description: >-
        Информация о транзакции, назначение перевода денежных средств,
        представляющее собой неструктурированный текст.
      example: Оплата услуг связи
    number:
      maxLength: 35
      minLength: 1
      type: string
      description: Номер платежного документа
      example: '1234567'
    equivalentAmount:
      pattern: '^d{1,13}$|^d{1,13}.d{1,2}$'
      type: string
      description: Сумма транзакции
      example: '5.00'
    OBDebtor1:
      required:
        - name
        - taxIdentification
      type: object
      properties:
        taxIdentification:
          $ref: '#/components/schemas/OBDebtorTaxIdentification1'
        name:
          $ref: '#/components/schemas/OBDebtorName1'
        debtorAccount:
          $ref: '#/components/schemas/OBDebtorAccount1'
        debtorAgent:
          $ref: '#/components/schemas/OBDebtorAgent1'
    OBDebtorTaxIdentification1:
      maximum: 35
      minimum: 1
      pattern: '^[A-Z]{3}[A-Z0-9]{9}$'
      required:
        - taxIdentification
      type: string
      description: Налоговый идентификационный номер плательщика
      example: INP511111111
    OBDebtorName1:
      maxLength: 140
      minLength: 1
      type: string
      description: Наименование плательщика
      example: Иванов Иван Иванович
    OBDebtorAccount1:
      type: object
      properties:
        schemeName:
          $ref: '#/components/schemas/OBDebtorAccountSchemeName1'
        identification:
          $ref: '#/components/schemas/OBdebtorAccountIdentification1'
        name:
          $ref: '#/components/schemas/OBDebtorAccountName1'
    OBDebtorAgent1:
      type: object
      properties:
        identification:
          $ref: '#/components/schemas/OBdebtorAgentIdentification1'
        name:
          $ref: '#/components/schemas/OBDebtorAgentName1'
    OBdebtorAgentIdentification1:
      pattern: '^[A-Z0-9]{4}[AZ]{2}[A-Z0-9]{2}([A-Z0-9]{3}){0,1}$'
      required:
        - identification
      type: string
      description: >-
        Код, присвоенный финансовому учреждению органом, присваивающим коды в
        соответствии со стандартом ISO 9362 (SWIFT) ”Банковское дело. Банковские
        телекоммуникационные сообщения. Идентификационные коды банков (BIC)“
      example: BAPBBY2X
    OBDebtorAgentName1:
      maxLength: 140
      minLength: 1
      type: string
      description: 'Наименование финансового учреждения, обслуживающего плательщика'
      example: ОАО Белагропромбанк
    OBDebtorAccountSchemeName1:
      required:
        - schemeName
      type: string
      example: BY.NBRB.IBAN
    OBdebtorAccountIdentification1:
      pattern: '^[A-Z]{2}[0-9]{2}[A-Z]{4}[0-9]{4}[A-Z0-9]{16}$'
      required:
        - identification
      type: string
      example: BY28BAPB30141111100110000000
    OBDebtorAccountName1:
      maxLength: 140
      minLength: 1
      type: string
      example: Карт-счет физического лица
    OBCreditor1:
      required:
        - name
        - taxIdentification
      type: object
      properties:
        taxIdentification:
          $ref: '#/components/schemas/OBCreditorTaxIdentification1'
        name:
          $ref: '#/components/schemas/OBCreditorName1'
        creditorAccount:
          $ref: '#/components/schemas/OBCreditorAccount1'
        creditorAgent:
          $ref: '#/components/schemas/OBCreditorAgent1'
    OBCreditorTaxIdentification1:
      maxLength: 35
      minLength: 1
      pattern: '^[A-Z]{3}[A-Z0-9]{9}$'
      required:
        - taxIdentification
      type: string
      description: Налоговый идентификационный номера получателя
      example: INN800013732
    OBCreditorName1:
      maxLength: 140
      minLength: 1
      type: string
      description: Наименование получателя
      example: COOO "Мобильные ТелеСистемы
    OBCreditorAccount1:
      type: object
      properties:
        schemeName:
          $ref: '#/components/schemas/OBCreditorAccountSchemeName1'
        identification:
          $ref: '#/components/schemas/OBCreditorAccountIdentification1'
        name:
          $ref: '#/components/schemas/OBCreditorAccountName1'
    OBCreditorAgent1:
      type: object
      properties:
        identification:
          $ref: '#/components/schemas/OBCreditorAgentIdentification1'
        name:
          $ref: '#/components/schemas/OBCreditorAgentName1'
    OBCreditorAgentIdentification1:
      pattern: '^[A-Z0-9]{4}[AZ]{2}[A-Z0-9]{2}([A-Z0-9]{3}){0,1}$'
      required:
        - identification
      type: string
      description: >-
        Код, присвоенный финансовому учреждению органом, присваивающим коды в
        соответствии со стандартом ISO 9362 (SWIFT) ”Банковское дело. Банковские
        телекоммуникационные сообщения. Идентификационные коды банков (BIC)“
      example: MMBNBY22
    OBCreditorAgentName1:
      maxLength: 140
      minLength: 1
      type: string
      description: 'Наименование финансового учреждения, обслуживающего плательщика'
      example: ОАО Дабрабыт
    OBCreditorAccountSchemeName1:
      required:
        - schemeName
      type: string
      example: BY.NBRB.IBAN
    OBCreditorAccountIdentification1:
      pattern: '^[A-Z]{2}[0-9]{2}[A-Z]{4}[0-9]{4}[A-Z0-9]{16}$'
      required:
        - identification
      type: string
      example: BY10MMBN30123164200100000000
    OBCreditorAccountName1:
      maxLength: 140
      minLength: 1
      type: string
      example: Текущий расчетный  счет для оплаты услуг связи
    OBStatement2Post:
      required:
        - accountId
        - fromBookingDate
        - statementId
        - toBookingDate
      type: object
      properties:
        accountId:
          $ref: '#/components/schemas/AccountId'
        statementId:
          $ref: '#/components/schemas/StatementId'
        fromBookingDate:
          $ref: '#/components/schemas/fromBookingDate'
        toBookingDate:
          $ref: '#/components/schemas/toBookingDate'
    AccountId:
      maxLength: 35
      minLength: 1
      type: string
      description: Уникальный и неизменный идентификатор счета.
      example: '99365'
    OBCreditDebitCode_2:
      type: string
      description: |-
        Определение баланса дебетовым или кредитовым.
        Usage: Нулевой баланс считается кредитовым балансом.
      enum:
        - Credit
        - Debit
    AccountConsentsStatus:
      maxLength: 35
      minLength: 1
      type: string
      description: Статусы  согласия на доступ к информации о счете
      example: Authorised
      enum:
        - AwaitingAuthorisation
        - Authorised
        - Rejected
        - Revoked
        - Expired
    Permission:
      type: string
      description: >-
        Список разрешений к данным Клиента, к которым имеет доступ Пользователь
        API. Разрешения должны быть запрошены для авторизации на стороне
        Поставщика API и одобрены Клиентом.
      enum:
        - ReadAccountsBasic
        - ReadAccountsDetail
        - ReadBalances
        - ReadStatementsBasic
        - ReadStatementsDetail
        - ReadTransactionsBasic
        - ReadTransactionsCredits
        - ReadTransactionsDebits
        - ReadTransactionsDetail
    BalanceType:
      type: string
      description: 'Тип баланса, заполняется согласно ISO 20022.'
      enum:
        - ClosingAvailable
        - ClosingBooked
        - ForwardAvailable
        - Information
        - InterimAvailable
        - InterimBooked
        - OpeningAvailable
        - OpeningBooked
        - ExpectClosedBooked
        - PreviouslyClosedBooked
    OBActiveCurrencyAndAmount_SimpleType:
      pattern: '^d{1,13}$|^d{1,13}.d{1,5}$'
      type: string
      description: Сумма денежных средств в валюте
    ActiveOrHistoricCurrencyCode_1:
      pattern: '^[A-Z]{3,3}$'
      type: string
      description: >-
        Код, присвоенный валюте, в соответствии с международным стандартом ISO
        4217".
    AccountResponseData:
      properties:
        Account:
          type: array
          description: Информация о счете.
          items:
            $ref: '#/components/schemas/Account'
    AccountResponse:
      required:
        - Data
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/AccountResponseData'
        Links:
          $ref: '#/components/schemas/Link'
        Meta:
          $ref: '#/components/schemas/Meta'
      additionalProperties: false
    Balance:
      required:
        - accountId
        - balanceAmount
        - creditDebitIndicator
        - currency
        - dateTime
        - type
      type: object
      properties:
        accountId:
          $ref: '#/components/schemas/AccountId'
        creditDebitIndicator:
          $ref: '#/components/schemas/OBCreditDebitCode_2'
        type:
          $ref: '#/components/schemas/BalanceType'
        dateTime:
          type: string
          description: |-
            Дата и время суммы остатка на счете (баланса) .
            Все поля даты и времени должны включать часовой пояс:
            2017-04-05T10:43:07+03:00
          format: date-time
          example: '2021-04-18T10:43:07+03:00'
        balanceAmount:
          pattern: '^d{1,18}$|^d{1,18}.d{1,5}$'
          type: string
          example: '100.00000'
        currency:
          pattern: '[A-Z]{3}'
          type: string
          example: BYN
        balanceEquivalentAmount:
          pattern: '^d{1,18}$|^d{1,18}.d{1,2}$'
          type: string
          example: '100.00'
        creditLine:
          type: array
          items:
            required:
              - creditLineAmount
              - currency
              - included
            type: object
            properties:
              included:
                type: boolean
                description: >-
                  Указывает, включена ли кредитная линия в баланс
                  счета

                  Usage: Если нет, кредитная линия не учитывается в
                  размере остатка на счете.
              type:
                type: string
                description: Тип кредитной линии
                enum:
                  - Revolving
                  - Non-revolving
              creditLineamount:
                pattern: '^d{1,13}$|^d{1,13}.d{1,5}$'
                type: string
                description: Сумма кредитной линии.
                example: '50.00000'
              currency:
                pattern: '[A-Z]{3}'
                type: string
                example: BYN
            description: >-
              Набор элементов, используемых для предоставления
              сведений о кредитной линии.
      description: >-
        Набор элементов используемых для предоставления сведений о
        деталях баланса.
    BalanceResponseData:
      required:
        - Balance
      type: object
      properties:
        Balance:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Balance'
    BalanceResponse:
      required:
        - Data
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/BalanceResponseData'
        Links:
          $ref: '#/components/schemas/LinksBalance'
        Meta:
          $ref: '#/components/schemas/Meta'
      additionalProperties: false
    CreationDateTime:
      type: string
      description: >-
        Дата и время создания ресурса. Представлена в формате даты и времени ISO
        8601.  Все поля даты и времени должны включать часовой пояс:

        2017-04-05T10:43:07+00:00
      format: date-time
      example: '2021-04-18T09:03:00+03:00'
    Links:
      required:
        - Self
      type: object
      properties:
        Self:
          type: string
          format: uri
          example: >-
            https://api.bank.by/oapi-channel/open-banking/v1.0/accounts/12345TEST/
        First:
          type: string
          format: uri
        Prev:
          type: string
          format: uri
        Next:
          type: string
          format: uri
        Last:
          type: string
          format: uri
      additionalProperties: false
      description: 'Ссылки, относящиеся к полезной нагрузке.'
    LinksBalance:
      required:
        - Self
      type: object
      properties:
        Self:
          type: string
          format: uri
          example: >-
            https://api.bank.by/oapi-channel/open-banking/v1.0/accounts/99365/balances/
        First:
          type: string
          format: uri
        Prev:
          type: string
          format: uri
        Next:
          type: string
          format: uri
        Last:
          type: string
          format: uri
      additionalProperties: false
      description: 'Ссылки, относящиеся к полезной нагрузке.'
    OBError1:
      minProperties: 1
      required:
        - ErrorCode
        - Message
      type: object
      properties:
        ErrorCode:
          type: string
          description: Низкоуровневый код ошибки
        Message:
          maxLength: 500
          minLength: 1
          type: string
          description: Описание ошибки
        Path:
          maxLength: 500
          minLength: 1
          type: string
          description: >-
            Рекомендуемая, но не обязательная ссылка на на JSON-путь поля с
            ошибкой.
        Url:
          type: string
          description: >-
            URL-адрес, предоставляющий дополнительную информацию для решения
            проблемы.
      additionalProperties: false
    OBErrorResponse1:
      required:
        - Code
        - Errors
        - Message
      type: object
      properties:
        Code:
          maxLength: 35
          minLength: 1
          type: string
          description: >-
            Высокоуровневый текстовый код ошибки, который помогает ее
            классифицировать.
        Id:
          maxLength: 35
          minLength: 1
          type: string
          description: >-
            Уникальная ссылка на ошибку для целей аудита в случае
            неизвестной/несекретной ошибки.
        Message:
          maxLength: 500
          minLength: 1
          type: string
          description: Краткое сообщение об ошибке
        Errors:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/OBError1'
      additionalProperties: false
      description: >-
        Массив подробных кодов ошибок, сообщений и URL-адресов для
        документирования.
    OBRisk2:
      type: object
      properties: { }
      additionalProperties: false
      description: >-
        Раздел «Риск» отправляется инициирующей стороной. Используется для
        указания дополнительных сведений для оценки рисков для информации об
        учетной записи.
    Account:
      required:
        - accountSubType
        - accountType
        - accountid
        - creationDateTime
        - currency
      properties:
        accountid:
          maxLength: 35
          minLength: 1
          type: string
          example: 12345TEST
        status:
          maxLength: 35
          minLength: 1
          type: string
          nullable: true
          example: Pending
          enum:
            - Enabled
            - Disabled
            - Deleted
            - Pending
        statusUpdateTime:
          pattern: '^d{4}(0[1-9]|1[012])(0[1-9]|[12][0-9]|3[01])$'
          type: string
          format: date-time
          nullable: true
          example: '2021-02-01T06:06:06+03:00'
        currency:
          pattern: '[A-Z]{3}'
          type: string
          example: BYN
        accountType:
          maxLength: 35
          minLength: 1
          type: string
          example: Business
        accountSubType:
          maxLength: 35
          minLength: 1
          type: string
          example: CurrentAccount
          enum:
            - CreditCard
            - CurrentAccount
            - Loan
            - Mortgage
            - Installment
            - Savings
        creationDataTime:
          type: string
          format: date-time
          example: '2021-01-01T00:00:00+03:00'
        accountDescription:
          maxLength: 2048
          minLength: 1
          type: string
          nullable: true
          example: Текущий расчетный счет.
        accountDetails:
          $ref: '#/components/schemas/AccountDetails'
        servicer:
          $ref: '#/components/schemas/Servicer'
    AccountDetails:
      required:
        - identification
        - name
        - schemeName
      properties:
        schemeName:
          type: string
          example: Схема для осуществления платежа по номеру счета.
        identification:
          pattern: '[A-Z]{2}[0-9]{2}[A-Z]{4}[0-9]{4}[A-Z0-9]{16}'
          type: string
          example: BY01UNBS30120000000000000933
        name:
          maxLength: 140
          minLength: 1
          type: string
          example: Текущий расчетный счет
        substatus:
          maxLength: 35
          minLength: 1
          type: string
          example: Arrested
        reason:
          maxLength: 520
          minLength: 1
          type: string
          example: Арестован согласно Постановления СК
    Servicer:
      required:
        - identification
        - name
      properties:
        name:
          maxLength: 35
          minLength: 1
          type: string
          example: ЗАО "БСБ Банк"
        identification:
          pattern: '[A-Z0-9]{4}[A-Z]{2}[A-Z0-9]{2}([A-Z0-9]{3})'
          type: string
          example: UNBSBY2X
    Link:
      required:
        - self
      type: object
      properties:
        self:
          type: string
          example: 'https://api.bank.by/oapi-channel/open-banking/v1.0/accounts/'
        last:
          type: string
          nullable: true
        first:
          type: string
          nullable: true
        next:
          type: string
          nullable: true
    Meta:
      type: object
      properties:
        total_pages:
          type: integer
          nullable: true
          example: 1
        firstAvailableDateTime:
          type: string
          format: date-time
          nullable: true
          example: '2021-02-06T00:00:00+03:00'
        lastAvailableDateTime:
          type: string
          format: date-time
          nullable: true
          example: '2021-04-17T23:00:00+03:00'
    Consent:
      required:
        - Data
        - Risk
      type: object
      properties:
        Data:
          required:
            - Permissions
          type: object
          properties:
            Permissions:
              minItems: 1
              type: array
              items:
                $ref: '#/components/schemas/Permission'
            ExpirationDate:
              type: string
              description: |-
                Дата окончания срока действия согласия
                Пример:
                2021-08-17
              format: date
              example: '2021-08-17'
            TransactionFromDate:
              type: string
              description: >-
                Дата начала периода, с которого можно получить транзакции
                Клиента на стороне Поставщика API. Если он не указан, данные
                будут возвращены с самой первой из доступных транзакций.

                Пример:

                2021-04-20
              format: date
              example: '2021-04-20'
            TransactionToDate:
              type: string
              description: >-
                Дата окончания периода, после которого нельзя получить
                транзакции Клиента на стороне Поставщика API. Если он не указан,
                данные будут возвращены до самой последней доступной транзакции.

                Пример:

                2021-04-22
              format: date
              example: '2021-04-22'
        Risk:
          $ref: '#/components/schemas/OBRisk2'
      additionalProperties: false
    ConsentResponse:
      required:
        - Data
        - Risk
      type: object
      properties:
        Data:
          required:
            - accountConsentId
            - creationDateTime
            - permissions
            - status
            - statusUpdateDateTime
          type: object
          properties:
            accountConsentId:
              maxLength: 35
              minLength: 1
              type: string
              description: Идентификатор согласия
              example: 3cgfc598-r5gh-9758-b358-587a5479610s
            status:
              $ref: '#/components/schemas/AccountConsentsStatus'
            link:
              $ref: '#/components/schemas/LinkConsents'
            statusUpdateDateTime:
              $ref: '#/components/schemas/StatusUpdateDateTimeConsent'
            creationDateTime:
              $ref: '#/components/schemas/CreationDateTimeConsent'
            permissions:
              minItems: 1
              type: array
              items:
                $ref: '#/components/schemas/Permission'
            expirationDate:
              type: string
              description: Дата окончания срока действия согласия
              format: date
              example: '2021-08-17'
            transactionFromDate:
              type: string
              description: >-
                Дата начала периода запроса транзакции. Если он не указан,
                данные будут возвращены с самой первой из доступных транзакций.
              format: date
              example: '2021-04-20'
            transactionToDate:
              type: string
              description: >-
                Дата окончания периода запроса транзакции. Если он не указан,
                данные будут возвращены до самой последней доступной транзакции.
              format: date
              example: '2021-04-22'
        Risk:
          $ref: '#/components/schemas/OBRisk2'
        Links:
          $ref: '#/components/schemas/LinksConsentPost'
        Meta:
          $ref: '#/components/schemas/Meta'
    StatusUpdateDateTimeConsent:
      type: string
      format: date-time
      example: '2021-04-16T09:00:07+03:00'
    CreationDateTimeConsent:
      type: string
      format: date-time
      example: '2021-04-15T09:00:07+03:00'
    LinkConsents:
      type: string
      format: url
    LinksConsentPost:
      required:
        - Self
      type: object
      properties:
        Self:
          type: string
          format: uri
          example: >-
            https://api.bank.by/oapi-channel/open-banking/v1.0/account-consents/3cgfc598-r5gh-9758-b358-587a5479610s
        First:
          type: string
          format: uri
        Prev:
          type: string
          format: uri
        Next:
          type: string
          format: uri
        Last:
          type: string
          format: uri
      additionalProperties: false
      description: 'Ссылки, относящиеся к полезной нагрузке.'
  responses:
    200SetAccountsTransaction:
      description: Set Transaction
      headers:
        x-fapi-interaction-id:
          style: simple
          explode: false
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OBSetAccountsTransaction'
    200BalancesRead:
      description: Balances Read
      headers:
        x-fapi-interaction-id:
          description: 'RFC4122 UID, используемый в качестве идентификатора корреляции'
          style: simple
          explode: false
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BalanceResponse'
    200GetAccounts:
      description: OK
      headers:
        x-fapi-interaction-id:
          style: simple
          explode: false
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccountResponse'
      links:
        getAccounts:
          operationId: getAccounts
          parameters:
            accountId: |
              $response.body#/AccountId
          description: >
            > Параметр **AccountId** полученный в *response body* может
            использоваться в следующих API:

            >

            > 1. **GET /accounts/{AccountID}**

            > 2. **GET /accounts/{accountId}/balances**

            > 3. **GET /accounts/{accountId}/transactions/{transactionListId}**

            > 4. **GET /accounts/{accountId}/statements/{statementId}**

            > 5. **POST /statements/{accountId}**

            > 6. **POST /accounts/{accountId}/transactions**


            >

            >     $response.body#/AccountId
    200AccountsAccountIdTransactionsRead:
      description: Transactions Read
      headers:
        x-fapi-interaction-id:
          description: 'RFC4122 UID, используемый в качестве идентификатора корреляции'
          style: simple
          explode: false
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OBReadTransaction6'
    200AccountsAccountIdStatementsStatementIdRead:
      description: Statements Read
      headers:
        x-fapi-interaction-id:
          description: 'RFC4122 UID, используемый в качестве идентификатора корреляции'
          style: simple
          explode: false
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OBReadStatement2'
    201AccountsAccountIdStatementsStatementIdRead:
      description: Statements Read
      headers:
        x-fapi-interaction-id:
          description: 'RFC4122 UID, используемый в качестве идентификатора корреляции'
          style: simple
          explode: false
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OBReadStatement2Post'
    200AccountAccessConsentsConsentIdRead:
      description: Account Access Consents Read
      headers:
        x-fapi-interaction-id:
          description: 'RFC4122 UID, используемый в качестве идентификатора корреляции'
          style: simple
          explode: false
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConsentResponse'
    200AccountsAccountIdStatementsStatementIdTransactionsRead:
      description: Transactions Read
      headers:
        x-fapi-interaction-id:
          description: 'RFC4122 UID, используемый в качестве идентификатора корреляции'
          style: simple
          explode: false
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OBReadTransaction6'
    200AccountsAccountIdBalancesRead:
      description: Balances Read
      headers:
        x-fapi-interaction-id:
          description: 'RFC4122 UID, используемый в качестве идентификатора корреляции'
          style: simple
          explode: false
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BalanceResponse'
    200AccountById:
      description: OK
      headers:
        x-fapi-interaction-id:
          description: 'RFC4122 UID, используемый в качестве идентификатора корреляции'
          style: simple
          explode: false
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccountResponse'
    201AccountAccessConsentsCreated:
      description: Account Access Consents Created
      headers:
        x-fapi-interaction-id:
          description: 'RFC4122 UID, используемый в качестве идентификатора корреляции'
          style: simple
          explode: false
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConsentResponse'
    AccountConsentsAuthorized:
      description: Account Access Consents Authorized
      headers:
        x-fapi-interaction-id:
          description: 'RFC4122 UID, используемый в качестве идентификатора корреляции'
          style: simple
          explode: false
          schema:
            type: string
    AccountConsentsRejected:
      description: Account Access Consents Rejected
      headers:
        x-fapi-interaction-id:
          description: 'RFC4122 UID, используемый в качестве идентификатора корреляции'
          style: simple
          explode: false
          schema:
            type: string
    204AccountAccessConsentsConsentIdDeleted:
      description: Account Access Consents Deleted
      headers:
        x-fapi-interaction-id:
          description: 'RFC4122 UID, используемый в качестве идентификатора корреляции'
          style: simple
          explode: false
          schema:
            type: string
    400Error:
      description: Bad request
      headers:
        x-fapi-interaction-id:
          description: 'RFC4122 UID, используемый в качестве идентификатора корреляции'
          style: simple
          explode: false
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OBErrorResponse1'
    401Error:
      description: Unauthorized
      headers:
        x-fapi-interaction-id:
          description: 'RFC4122 UID, используемый в качестве идентификатора корреляции'
          style: simple
          explode: false
          schema:
            type: string
    403Error:
      description: Forbidden
      headers:
        x-fapi-interaction-id:
          description: 'RFC4122 UID, используемый в качестве идентификатора корреляции'
          style: simple
          explode: false
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OBErrorResponse1'
    404Error:
      description: Not found
      headers:
        x-fapi-interaction-id:
          description: 'RFC4122 UID, используемый в качестве идентификатора корреляции'
          style: simple
          explode: false
          schema:
            type: string
    405Error:
      description: Method Not Allowed
      headers:
        x-fapi-interaction-id:
          description: 'RFC4122 UID, используемый в качестве идентификатора корреляции'
          style: simple
          explode: false
          schema:
            type: string
    406Error:
      description: Not Acceptable
      headers:
        x-fapi-interaction-id:
          description: 'RFC4122 UID, используемый в качестве идентификатора корреляции'
          style: simple
          explode: false
          schema:
            type: string
    415Error:
      description: Unsupported Media Type
      headers:
        x-fapi-interaction-id:
          description: 'RFC4122 UID, используемый в качестве идентификатора корреляции'
          style: simple
          explode: false
          schema:
            type: string
    429Error:
      description: Too Many Requests
      headers:
        Retry-After:
          description: Время ожидания в секундах
          style: simple
          explode: false
          schema:
            type: integer
        x-fapi-interaction-id:
          description: 'RFC4122 UID, используемый в качестве идентификатора корреляции'
          style: simple
          explode: false
          schema:
            type: string
    500Error:
      description: Internal Server Error
      headers:
        x-fapi-interaction-id:
          description: 'RFC4122 UID, используемый в качестве идентификатора корреляции'
          style: simple
          explode: false
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OBErrorResponse1'
  parameters:
    permissions:
      name: Permissions
      in: query
      description: >-
        Список разрешений к данным Клиента, к которым имеет доступ Пользователь
        API. Разрешения должны быть запрошены для авторизации на стороне
        Поставщика API и одобрены Клиентом.
      required: true
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          description: Указание списка данных для доступа к счетам Клиента.
          enum:
            - ReadAccountsBasic
            - ReadAccountsDetail
            - ReadBalances
            - ReadStatementsBasic
            - ReadStatementsDetail
            - ReadTransactionsBasic
            - ReadTransactionsDetail
            - ReadTransactionsCredits
            - ReadTransactionsDebits
    expirationDate:
      name: ExpirationDate
      in: query
      description: |-
        Дата окончания срока действия согласия
        Пример:
        2021-08-17
      required: false
      style: form
      explode: false
      schema:
        type: string
        format: date
    transactionFromDate:
      name: TransactionFromDate
      in: query
      description: >-
        Дата начала периода, с которого можно получить транзакции Клиента на
        стороне Поставщика API. Если он не указан, данные будут возвращены с
        самой первой из доступных транзакций.
      required: false
      style: form
      explode: false
      schema:
        type: string
        format: date
    transactionToDate:
      name: TransactionToDate
      in: query
      description: >-
        Дата окончания периода, после которого нельзя получить транзакции
        Клиента на стороне Поставщика API. Если он не указан, данные будут
        возвращены до самой последней доступной транзакции.

        Пример:

        2017-04-05
      required: false
      style: form
      explode: false
      schema:
        type: string
        format: date
    fromBookingDateTime:
      name: fromBookingDateTime
      in: query
      description: Дата и время начала фильтрации списка транзакций.
      required: true
      style: form
      explode: true
      schema:
        type: string
        format: date-time
    toBookingDateTime:
      name: toBookingDateTime
      in: query
      description: Дата и время окончания фильтрации списка транзакций.
      required: true
      style: form
      explode: true
      schema:
        type: string
        format: date-time
    transactionListId:
      name: transactionListId
      in: path
      description: Идентификатор списка транзакций
      required: true
      style: simple
      explode: false
      schema:
        maxLength: 35
        minLength: 1
        type: string
    accountConsentId:
      name: accountConsentId
      in: path
      description: Идентификатор согласия на предоставление информации по счету
      required: true
      style: simple
      explode: false
      schema:
        maxLength: 35
        minLength: 1
        type: string
    accountId:
      name: accountId
      in: path
      description: Идентификатор счета
      required: true
      style: simple
      explode: false
      schema:
        maxLength: 35
        minLength: 1
        type: string
    statementId:
      name: statementId
      in: path
      description: Идентификатор выписки
      required: true
      style: simple
      explode: false
      schema:
        maxLength: 35
        minLength: 1
        type: string
    fromBookingDate:
      name: fromBookingDate
      in: query
      description: Дата начала выписки
      required: true
      style: form
      explode: false
      schema:
        type: string
        format: date
    toBookingDate:
      name: toBookingDate
      in: query
      description: Дата окончания выписки
      required: true
      style: form
      explode: false
      schema:
        type: string
        format: date
    x-fapi-customer-ip-address:
      name: x-fapi-customer-ip-address
      in: header
      description: 'IP-адрес Клиента, если Клиент вошел в систему с помощью TPP'
      required: false
      style: simple
      explode: false
      schema:
        type: string
    x-fapi-auth-date:
      name: x-fapi-auth-date
      in: header
      description: >-
        Время, когда Клиент последний раз входил в систему через TPP. Значение
        времени предоставляется в формате RFC7231. пример: Sun, 10 Sep 2017
        19:43:31 UTC
      required: false
      style: simple
      explode: false
      schema:
        pattern: >-
          ^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), d{2}
          (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) d{4} d{2}:d{2}:d{2}
          (GMT|UTC)$
        type: string
    x-fapi-interaction-id:
      name: x-fapi-interaction-id
      in: header
      description: 'RFC4122 UID, используемый в качестве идентификатора корреляции'
      required: false
      style: simple
      explode: false
      schema:
        type: string
    x-idempotency-key:
      name: x-idempotency-key
      in: header
      description: >
        Уникальный идентификатор запроса для поддержки
        идемпотентности.Используется для решения проблем потери связи и отправки
        повторного запроса.
      required: true
      style: simple
      explode: false
      schema:
        maxLength: 40
        pattern: ^(?!s)(.*)(S)$
        type: string
    Authorization:
      name: authorization
      in: header
      description: >-
        Стандартный заголовок, который позволяет предоставлять учетные данные
        серверу авторизации и (или) серверу ресурсов в зависимости от типа
        запрашиваемого ресурса
      required: false
      style: simple
      explode: false
      schema:
        type: string
    x-accountConsentId:
      name: x-accountConsentId
      in: header
      description: >-
        Идентификатор, сгенерированный СДБО и переданный программному
        обеспечению (приложению) Пользователя API первого типа, при успешной
        идентификации и аутентификации Пользователя API первого типа, а также
        авторизации им своего программного обеспечения (приложения) на
        выполнение действий в СДБО от своего имени.
      required: false
      style: simple
      explode: false
      schema:
        type: string
    x-api-key:
      name: x-api-key
      in: header
      description: >-
        Идентификатор, сгенерированный СДБО и переданный программному
        обеспечению (приложению) Пользователя API первого типа, при успешной
        идентификации и аутентификации Пользователя API первого типа, а также
        авторизации им своего программного обеспечения (приложения) на
        выполнение действий в СДБО от своего имени.
      required: false
      style: simple
      explode: false
      schema:
        type: string
    x-customer-user-agent:
      name: x-customer-user-agent
      in: header
      description: 'Указывается тип устройства (user-agent), который использует Клиент'
      required: false
      style: simple
      explode: false
      schema:
        type: string
  securitySchemes:
    default:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: ''
          scopes: { }
x-wso2-auth-header: Authorization
x-wso2-cors:
  corsConfigurationEnabled: true
  accessControlAllowOrigins:
    - '*'
  accessControlAllowCredentials: true
  accessControlAllowHeaders:
    - authorization
    - Access-Control-Allow-Origin
    - Content-Type
    - SOAPAction
    - testKey
    - x-fapi-customer-ip-address
    - x-fapi-interaction-id
    - x-fapi-auth-date
    - apikey
    - xApikey
  accessControlAllowMethods:
    - GET
    - PUT
    - POST
    - DELETE
    - PATCH
    - OPTIONS
x-wso2-production-endpoints:
  urls:
    - 'http://localhost:8077'
  type: http
x-wso2-sandbox-endpoints:
  urls:
    - 'http://localhost:8088'
  type: http
x-wso2-basePath: /accountConsents-service/v1.0
x-wso2-transports:
  - http
  - https
x-wso2-response-cache:
  enabled: false
  cacheTimeoutInSeconds: 300
