openapi: 3.0.1
info:
  title: Песочница открытых банковских API
  description: Песочница открытых банковских API
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: apiteam@st.by
  version: '1'
servers:
  - url: 'https://paymentapi.st.by:8243/open-banking/v1.0'
  - url: 'http://paymentapi.st.by:8280/open-banking/v1.0'
tags:
  - name: DomesticConsents
    description: Платежное указание на инициирование платежного поручения
  - name: DomesticPayments
    description: Платежное поручение
  - name : DomesticTaxConsents
    description: Платежное указание на инициирование налогового платежа
  - name: DomesticTaxes
    description: Налоговый платеж
  - name: ListAccountsConsents
    description: Платежное указание на инициирование платежного поручения со списком счетов физических лиц
  - name: ListAccounts
    description: Платежное поручение со списком счетов физических лиц
  - name: ListPassportsConsents
    description: Платежное указание на инициирование платежного поручения со списком без открытия счетов физических лиц
  - name: ListPassports
    description: Платежное поручение со списком без открытия счетов физических лиц
  - name: RequirementConsents
    description: Платежное указание на выставление платежного требования
  - name: Requirements
    description: Платежное требование
  - name: TaxRequirementConsents
    description: Платежное указание на выставление платежного требования на уплату налогов (других платежей в бюджет)
  - name: TaxRequirements
    description: Платежное требование на уплату налогов (других платежей в бюджет)
  - name: VRPConsents
    description: Платежное указание на инициирование рекуррентного платежа
  - name: VRP
    description: Рекуррентный платеж
paths:
  /domesticConsents:
    post:
      tags:
        - DomesticConsents
      summary: "Создание платежного указания на инициирование платежного поручения"
      operationId: "CreatePaymentConsents"
      parameters:
        - $ref: "#/components/parameters/x-fapi-auth-date"
        - $ref: "#/components/parameters/x-fapi-customer-ip-address"
        - $ref: "#/components/parameters/x-fapi-interaction-id"
        - $ref: "#/components/parameters/Authorization"
        - $ref: "#/components/parameters/x-idempotency-key"
        - $ref: "#/components/parameters/x-jws-signature"
        - $ref: "#/components/parameters/x-customer-user-agent"
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: "#/components/schemas/OBDomesticConsent"
          application/json:
            schema:
              $ref: "#/components/schemas/OBDomesticConsent"
          application/jose+jwe:
            schema:
              $ref: "#/components/schemas/OBDomesticConsent"
        description: "Default"
        required: true
      responses:
        201:
          $ref: "#/components/responses/201PaymentConsents"
        400:
          $ref: "#/components/responses/400Error"
        401:
          $ref: "#/components/responses/401Error"
        403:
          $ref: "#/components/responses/403Error"
        405:
          $ref: "#/components/responses/405Error"
        406:
          $ref: "#/components/responses/406Error"
        415:
          $ref: "#/components/responses/415Error"
        429:
          $ref: "#/components/responses/429Error"
        500:
          $ref: "#/components/responses/500Error"
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  /domesticConsents/{domesticConsentId}:
    get:
      tags:
        - DomesticConsents
      summary: "Получение статуса платежного указания на инициирование платежного поручения"
      operationId: "GetPaymentConsentsByPaymentConsentId"
      parameters:
        - $ref: "#/components/parameters/DomesticConsentId"
        - $ref: "#/components/parameters/x-fapi-auth-date"
        - $ref: "#/components/parameters/x-fapi-customer-ip-address"
        - $ref: "#/components/parameters/x-fapi-interaction-id"
        - $ref: "#/components/parameters/Authorization"
        - $ref: "#/components/parameters/x-customer-user-agent"
      responses:
        200:
          $ref: "#/components/responses/200PaymentConsents"
        400:
          $ref: "#/components/responses/400Error"
        401:
          $ref: "#/components/responses/401Error"
        403:
          $ref: "#/components/responses/403Error"
        405:
          $ref: "#/components/responses/405Error"
        406:
          $ref: "#/components/responses/406Error"
        429:
          $ref: "#/components/responses/429Error"
        500:
          $ref: "#/components/responses/500Error"
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  /domesticPayments:
    post:
      tags:
        - DomesticPayments
      summary: "Создание платежного поручения"
      operationId: "CreateDomesticPayment"
      parameters:
        - $ref: "#/components/parameters/domesticConsentIdHeader"
        - $ref: "#/components/parameters/x-fapi-auth-date"
        - $ref: "#/components/parameters/x-fapi-customer-ip-address"
        - $ref: "#/components/parameters/x-fapi-interaction-id"
        - $ref: "#/components/parameters/Authorization"
        - $ref: "#/components/parameters/x-idempotency-key"
        - $ref: "#/components/parameters/x-jws-signature"
        - $ref: "#/components/parameters/x-customer-user-agent"
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: "#/components/schemas/OBDomesticPayment"
          application/json:
            schema:
              $ref: "#/components/schemas/OBDomesticPayment"
          application/jose+jwe:
            schema:
              $ref: "#/components/schemas/OBDomesticPayment"
        description: "Default"
        required: true
      responses:
        201:
          $ref: "#/components/responses/201OBPayment1"
        400:
          $ref: "#/components/responses/400Error"
        401:
          $ref: "#/components/responses/401Error"
        403:
          $ref: "#/components/responses/403Error"
        405:
          $ref: "#/components/responses/405Error"
        406:
          $ref: "#/components/responses/406Error"
        415:
          $ref: "#/components/responses/415Error"
        429:
          $ref: "#/components/responses/429Error"
        500:
          $ref: "#/components/responses/500Error"
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  /domestic/{domesticId}:
    get:
      tags:
        - DomesticPayments
      summary: "Получение статуса платежного поручения"
      operationId: "GetDomesticPaymentByDomesticId"
      parameters:
        - $ref: "#/components/parameters/domesticId"
        - $ref: "#/components/parameters/domesticConsentIdHeader"
        - $ref: "#/components/parameters/x-fapi-auth-date"
        - $ref: "#/components/parameters/x-fapi-customer-ip-address"
        - $ref: "#/components/parameters/x-fapi-interaction-id"
        - $ref: "#/components/parameters/Authorization"
        - $ref: "#/components/parameters/x-customer-user-agent"
      responses:
        200:
          $ref: "#/components/responses/200OBPayment2"
        400:
          $ref: "#/components/responses/400Error"
        401:
          $ref: "#/components/responses/401Error"
        403:
          $ref: "#/components/responses/403Error"
        405:
          $ref: "#/components/responses/405Error"
        406:
          $ref: "#/components/responses/406Error"
        429:
          $ref: "#/components/responses/429Error"
        500:
          $ref: "#/components/responses/500Error"
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  /paymentConsents/domesticTax:
    post:
      tags:
        - DomesticTaxConsents
      summary: "  Создание платежного указания на инициирование налогового платежа"
      operationId: "CreateDomesticTaxConsents"
      parameters:
        - $ref: "#/components/parameters/x-fapi-auth-date"
        - $ref: "#/components/parameters/x-fapi-customer-ip-address"
        - $ref: "#/components/parameters/x-fapi-interaction-id"
        - $ref: "#/components/parameters/Authorization"
        - $ref: "#/components/parameters/x-idempotency-key"
        - $ref: "#/components/parameters/x-jws-signature"
        - $ref: "#/components/parameters/x-customer-user-agent"
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: "#/components/schemas/OBPaymentConsentTax"
          application/json:
            schema:
              $ref: "#/components/schemas/OBPaymentConsentTax"
          application/jose+jwe:
            schema:
              $ref: "#/components/schemas/OBPaymentConsentTax"
        description: "Default"
        required: true
      responses:
        201:
          $ref: "#/components/responses/201PaymentConsentsTax"
        400:
          $ref: "#/components/responses/400Error"
        401:
          $ref: "#/components/responses/401Error"
        403:
          $ref: "#/components/responses/403Error"
        405:
          $ref: "#/components/responses/405Error"
        406:
          $ref: "#/components/responses/406Error"
        415:
          $ref: "#/components/responses/415Error"
        429:
          $ref: "#/components/responses/429Error"
        500:
          $ref: "#/components/responses/500Error"
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  /paymentConsents/domesticTax/{domesticTaxConsentId}:
    get:
      tags:
        - DomesticTaxConsents
      summary: "Получение статуса платежного указания на инициирование налогового платежа"
      operationId: "GetPaymentConsentsDomesticTaxByPaymentConsentId"
      parameters:
        - $ref: "#/components/parameters/domesticTaxConsentId"
        - $ref: "#/components/parameters/x-fapi-auth-date"
        - $ref: "#/components/parameters/x-fapi-customer-ip-address"
        - $ref: "#/components/parameters/x-fapi-interaction-id"
        - $ref: "#/components/parameters/Authorization"
        - $ref: "#/components/parameters/x-customer-user-agent"
      responses:
        200:
          $ref: "#/components/responses/200PaymentConsentsTax"
        400:
          $ref: "#/components/responses/400Error"
        401:
          $ref: "#/components/responses/401Error"
        403:
          $ref: "#/components/responses/403Error"
        405:
          $ref: "#/components/responses/405Error"
        406:
          $ref: "#/components/responses/406Error"
        429:
          $ref: "#/components/responses/429Error"
        500:
          $ref: "#/components/responses/500Error"
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  /payments/domesticTax:
    post:
      tags:
        - DomesticTaxes
      summary: "Создание налогового платежа"
      operationId: "CreateDomesticTaxPayment"
      parameters:
        - $ref: "#/components/parameters/domesticTaxConsentIdHeader"
        - $ref: "#/components/parameters/x-fapi-auth-date"
        - $ref: "#/components/parameters/x-fapi-customer-ip-address"
        - $ref: "#/components/parameters/x-fapi-interaction-id"
        - $ref: "#/components/parameters/Authorization"
        - $ref: "#/components/parameters/x-idempotency-key"
        - $ref: "#/components/parameters/x-jws-signature"
        - $ref: "#/components/parameters/x-customer-user-agent"
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: "#/components/schemas/OBDomesticTaxPayment"
          application/json:
            schema:
              $ref: "#/components/schemas/OBDomesticTaxPayment"
          application/jose+jwe:
            schema:
              $ref: "#/components/schemas/OBDomesticTaxPayment"
        description: "Default"
        required: true
      responses:
        201:
          $ref: "#/components/responses/201OBTaxPayment1"
        400:
          $ref: "#/components/responses/400Error"
        401:
          $ref: "#/components/responses/401Error"
        403:
          $ref: "#/components/responses/403Error"
        405:
          $ref: "#/components/responses/405Error"
        406:
          $ref: "#/components/responses/406Error"
        415:
          $ref: "#/components/responses/415Error"
        429:
          $ref: "#/components/responses/429Error"
        500:
          $ref: "#/components/responses/500Error"
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  /payments/domesticTax/{domesticTaxId}:
    get:
      tags:
        - DomesticTaxes
      summary: "Получение статуса налогового платежа"
      operationId: "GetDomesticTaxByDomesticTaxId"
      parameters:
        - $ref: "#/components/parameters/domesticTaxId"
        - $ref: "#/components/parameters/domesticTaxConsentIdHeader"
        - $ref: "#/components/parameters/x-fapi-auth-date"
        - $ref: "#/components/parameters/x-fapi-customer-ip-address"
        - $ref: "#/components/parameters/x-fapi-interaction-id"
        - $ref: "#/components/parameters/Authorization"
        - $ref: "#/components/parameters/x-customer-user-agent"
      responses:
        200:
          $ref: "#/components/responses/200OBTaxPayment2"
        400:
          $ref: "#/components/responses/400Error"
        401:
          $ref: "#/components/responses/401Error"
        403:
          $ref: "#/components/responses/403Error"
        405:
          $ref: "#/components/responses/405Error"
        406:
          $ref: "#/components/responses/406Error"
        429:
          $ref: "#/components/responses/429Error"
        500:
          $ref: "#/components/responses/500Error"
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  /paymentConsents/listAccounts:
    post:
      tags:
        - ListAccountsConsents
      summary: "Создание платежного указания на инициирование платежного поручения со списком счетов физических лиц"
      operationId: "SetPaymentsConsentsOfListAccounts"
      parameters:
        - $ref: "#/components/parameters/x-fapi-auth-date"
        - $ref: "#/components/parameters/x-fapi-customer-ip-address"
        - $ref: "#/components/parameters/x-fapi-interaction-id"
        - $ref: "#/components/parameters/Authorization"
        - $ref: "#/components/parameters/x-idempotency-key"
        - $ref: "#/components/parameters/x-jws-signature"
        - $ref: "#/components/parameters/x-customer-user-agent"
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: "#/components/schemas/OBListAccountsConsent"
          application/json:
            schema:
              $ref: "#/components/schemas/OBListAccountsConsent"
          application/jose+jwe:
            schema:
              $ref: "#/components/schemas/OBListAccountsConsent"
        description: "Default"
        required: true
      responses:
        201:
          $ref: "#/components/responses/201PaymentConsentsListAccounts"
        400:
          $ref: "#/components/responses/400Error"
        401:
          $ref: "#/components/responses/401Error"
        403:
          $ref: "#/components/responses/403Error"
        405:
          $ref: "#/components/responses/405Error"
        406:
          $ref: "#/components/responses/406Error"
        415:
          $ref: "#/components/responses/415Error"
        429:
          $ref: "#/components/responses/429Error"
        500:
          $ref: "#/components/responses/500Error"
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  /paymentConsents/listAccounts/{listAccountsConsentId}:
    get:
      tags:
        - ListAccountsConsents
      summary: "Получение статуса платежного указания на инициирование платежного поручения со списком счетов физических лиц"
      operationId: "GetPaymentsConsentsOfListAccountsByListAccountsConsentId"
      parameters:
        - $ref: "#/components/parameters/listAccountsConsentId"
        - $ref: "#/components/parameters/x-fapi-auth-date"
        - $ref: "#/components/parameters/x-fapi-customer-ip-address"
        - $ref: "#/components/parameters/x-fapi-interaction-id"
        - $ref: "#/components/parameters/Authorization"
        - $ref: "#/components/parameters/x-customer-user-agent"
      responses:
        200:
          $ref: "#/components/responses/200PaymentConsentsListAccounts"
        400:
          $ref: "#/components/responses/400Error"
        401:
          $ref: "#/components/responses/401Error"
        403:
          $ref: "#/components/responses/403Error"
        405:
          $ref: "#/components/responses/405Error"
        406:
          $ref: "#/components/responses/406Error"
        429:
          $ref: "#/components/responses/429Error"
        500:
          $ref: "#/components/responses/500Error"
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  /payments/listAccounts:
    post:
      tags:
        - ListAccounts
      summary: "Создание платежного поручения со списком счетов физических лиц"
      operationId: "SetPaymentsListAccounts"
      parameters:
        - $ref: "#/components/parameters/listAccountsConsentIdHeader"
        - $ref: "#/components/parameters/x-fapi-auth-date"
        - $ref: "#/components/parameters/x-fapi-customer-ip-address"
        - $ref: "#/components/parameters/x-fapi-interaction-id"
        - $ref: "#/components/parameters/Authorization"
        - $ref: "#/components/parameters/x-idempotency-key"
        - $ref: "#/components/parameters/x-jws-signature"
        - $ref: "#/components/parameters/x-customer-user-agent"
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: "#/components/schemas/OBListAccountsPayment"
          application/json:
            schema:
              $ref: "#/components/schemas/OBListAccountsPayment"
          application/jose+jwe:
            schema:
              $ref: "#/components/schemas/OBListAccountsPayment"
        description: "Default"
        required: true
      responses:
        201:
          $ref: "#/components/responses/201OBPaymentListAccounts1"
        400:
          $ref: "#/components/responses/400Error"
        401:
          $ref: "#/components/responses/401Error"
        403:
          $ref: "#/components/responses/403Error"
        405:
          $ref: "#/components/responses/405Error"
        406:
          $ref: "#/components/responses/406Error"
        415:
          $ref: "#/components/responses/415Error"
        429:
          $ref: "#/components/responses/429Error"
        500:
          $ref: "#/components/responses/500Error"
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  /payments/listAccounts/{listAccountsId}:
    get:
      tags:
        - ListAccounts
      summary: "Получение статуса платежного поручения со списком счетов физических лиц"
      operationId: "GetPaymentsListAccountsByListAccountsId"
      parameters:
        - $ref: "#/components/parameters/listAccountsId"
        - $ref: "#/components/parameters/listAccountsConsentIdHeader"
        - $ref: "#/components/parameters/x-fapi-auth-date"
        - $ref: "#/components/parameters/x-fapi-customer-ip-address"
        - $ref: "#/components/parameters/x-fapi-interaction-id"
        - $ref: "#/components/parameters/Authorization"
        - $ref: "#/components/parameters/x-customer-user-agent"
      responses:
        200:
          $ref: "#/components/responses/200OBPaymentListAccounts2"
        400:
          $ref: "#/components/responses/400Error"
        401:
          $ref: "#/components/responses/401Error"
        403:
          $ref: "#/components/responses/403Error"
        405:
          $ref: "#/components/responses/405Error"
        406:
          $ref: "#/components/responses/406Error"
        429:
          $ref: "#/components/responses/429Error"
        500:
          $ref: "#/components/responses/500Error"
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  /paymentConsents/listPassports:
    post:
      tags:
        - ListPassportsConsents
      summary: "Создание платежного указания на инициирование платежного поручения со списком без открытия счетов физических лиц"
      operationId: "SetPaymentConsentsByListPassports"
      parameters:
        - $ref: "#/components/parameters/x-fapi-auth-date"
        - $ref: "#/components/parameters/x-fapi-customer-ip-address"
        - $ref: "#/components/parameters/x-fapi-interaction-id"
        - $ref: "#/components/parameters/Authorization"
        - $ref: "#/components/parameters/x-idempotency-key"
        - $ref: "#/components/parameters/x-jws-signature"
        - $ref: "#/components/parameters/x-customer-user-agent"
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: "#/components/schemas/OBListPassportsConsent"
          application/json:
            schema:
              $ref: "#/components/schemas/OBListPassportsConsent"
          application/jose+jwe:
            schema:
              $ref: "#/components/schemas/OBListPassportsConsent"
        description: "Default"
        required: true
      responses:
        201:
          $ref: "#/components/responses/201PaymentConsentsListPassports"
        400:
          $ref: "#/components/responses/400Error"
        401:
          $ref: "#/components/responses/401Error"
        403:
          $ref: "#/components/responses/403Error"
        405:
          $ref: "#/components/responses/405Error"
        406:
          $ref: "#/components/responses/406Error"
        415:
          $ref: "#/components/responses/415Error"
        429:
          $ref: "#/components/responses/429Error"
        500:
          $ref: "#/components/responses/500Error"
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  /paymentConsents/listPassports/{listPassportsConsentId}:
    get:
      tags:
        - ListPassportsConsents
      summary: "Получение статуса платежного указания на инициирование платежного поручения со списком без открытия счетов физических лиц"
      operationId: "GetPaymentConsentsOfListPassportsByListPassportsConsentId"
      parameters:
        - $ref: "#/components/parameters/listPassportsConsentId"
        - $ref: "#/components/parameters/x-fapi-auth-date"
        - $ref: "#/components/parameters/x-fapi-customer-ip-address"
        - $ref: "#/components/parameters/x-fapi-interaction-id"
        - $ref: "#/components/parameters/Authorization"
        - $ref: "#/components/parameters/x-customer-user-agent"
      responses:
        200:
          $ref: "#/components/responses/200PaymentConsentsListPassports"
        400:
          $ref: "#/components/responses/400Error"
        401:
          $ref: "#/components/responses/401Error"
        403:
          $ref: "#/components/responses/403Error"
        405:
          $ref: "#/components/responses/405Error"
        406:
          $ref: "#/components/responses/406Error"
        429:
          $ref: "#/components/responses/429Error"
        500:
          $ref: "#/components/responses/500Error"
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  /payments/listPassports:
    post:
      tags:
        - ListPassports
      summary: "Создание платежного поручения со списком без открытия счетов физических лиц"
      operationId: "SetPaymentsByListPassports"
      parameters:
        - $ref: "#/components/parameters/listPassportsConsentIdHeader"
        - $ref: "#/components/parameters/x-fapi-auth-date"
        - $ref: "#/components/parameters/x-fapi-customer-ip-address"
        - $ref: "#/components/parameters/x-fapi-interaction-id"
        - $ref: "#/components/parameters/Authorization"
        - $ref: "#/components/parameters/x-idempotency-key"
        - $ref: "#/components/parameters/x-jws-signature"
        - $ref: "#/components/parameters/x-customer-user-agent"
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: "#/components/schemas/OBListPassportsPayment"
          application/json:
            schema:
              $ref: "#/components/schemas/OBListPassportsPayment"
          application/jose+jwe:
            schema:
              $ref: "#/components/schemas/OBListPassportsPayment"
        description: "Default"
        required: true
      responses:
        201:
          $ref: "#/components/responses/201OBPaymentListPassports1"
        400:
          $ref: "#/components/responses/400Error"
        401:
          $ref: "#/components/responses/401Error"
        403:
          $ref: "#/components/responses/403Error"
        405:
          $ref: "#/components/responses/405Error"
        406:
          $ref: "#/components/responses/406Error"
        415:
          $ref: "#/components/responses/415Error"
        429:
          $ref: "#/components/responses/429Error"
        500:
          $ref: "#/components/responses/500Error"
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  /payments/listPassports/{listPassportsId}:
    get:
      tags:
        - ListPassports
      summary: "Получение статуса платежного поручения со списком без открытия счетов физических лиц"
      operationId: "GetPaymentsByListPassportsId"
      parameters:
        - $ref: "#/components/parameters/listPassportsId"
        - $ref: "#/components/parameters/listPassportsConsentIdHeader"
        - $ref: "#/components/parameters/x-fapi-auth-date"
        - $ref: "#/components/parameters/x-fapi-customer-ip-address"
        - $ref: "#/components/parameters/x-fapi-interaction-id"
        - $ref: "#/components/parameters/Authorization"
        - $ref: "#/components/parameters/x-customer-user-agent"
      responses:
        200:
          $ref: "#/components/responses/200OBPaymentListPassports2"
        400:
          $ref: "#/components/responses/400Error"
        401:
          $ref: "#/components/responses/401Error"
        403:
          $ref: "#/components/responses/403Error"
        405:
          $ref: "#/components/responses/405Error"
        406:
          $ref: "#/components/responses/406Error"
        429:
          $ref: "#/components/responses/429Error"
        500:
          $ref: "#/components/responses/500Error"
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  /paymentConsents/Requirement:
    post:
      tags:
        - RequirementConsents
      summary: "Создание платежного указания на выставление платежного требования"
      operationId: "SetPaymentConsentsRequrement"
      parameters:
        - $ref: "#/components/parameters/x-fapi-auth-date"
        - $ref: "#/components/parameters/x-fapi-customer-ip-address"
        - $ref: "#/components/parameters/x-fapi-interaction-id"
        - $ref: "#/components/parameters/Authorization"
        - $ref: "#/components/parameters/x-idempotency-key"
        - $ref: "#/components/parameters/x-jws-signature"
        - $ref: "#/components/parameters/x-customer-user-agent"
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: "#/components/schemas/OBReqConsent"
          application/json:
            schema:
              $ref: "#/components/schemas/OBReqConsent"
          application/jose+jwe:
            schema:
              $ref: "#/components/schemas/OBReqConsent"
        description: "Default"
        required: true
      responses:
        201:
          $ref: "#/components/responses/201ReqConsents"
        400:
          $ref: "#/components/responses/400Error"
        401:
          $ref: "#/components/responses/401Error"
        403:
          $ref: "#/components/responses/403Error"
        405:
          $ref: "#/components/responses/405Error"
        406:
          $ref: "#/components/responses/406Error"
        415:
          $ref: "#/components/responses/415Error"
        429:
          $ref: "#/components/responses/429Error"
        500:
          $ref: "#/components/responses/500Error"
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  /paymentConsents/Requirement/{requirementConsentId}:
    get:
      tags:
        - RequirementConsents
      summary: "Получение статуса платежного указания на выставление платежного требования"
      operationId: "GetPaymentsByRequirementId"
      parameters:
        - $ref: "#/components/parameters/requirementConsentId"
        - $ref: "#/components/parameters/x-fapi-auth-date"
        - $ref: "#/components/parameters/x-fapi-customer-ip-address"
        - $ref: "#/components/parameters/x-fapi-interaction-id"
        - $ref: "#/components/parameters/Authorization"
        - $ref: "#/components/parameters/x-customer-user-agent"
      responses:
        200:
          $ref: "#/components/responses/200ReqConsents"
        400:
          $ref: "#/components/responses/400Error"
        401:
          $ref: "#/components/responses/401Error"
        403:
          $ref: "#/components/responses/403Error"
        405:
          $ref: "#/components/responses/405Error"
        406:
          $ref: "#/components/responses/406Error"
        429:
          $ref: "#/components/responses/429Error"
        500:
          $ref: "#/components/responses/500Error"
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  /payments/Requirements:
    post:
      tags:
        - Requirements
      summary: "Создание платежного требования"
      operationId: "SetPaymentsRequirements"
      parameters:
        - $ref: "#/components/parameters/requirementConsentIdHeader"
        - $ref: "#/components/parameters/x-fapi-auth-date"
        - $ref: "#/components/parameters/x-fapi-customer-ip-address"
        - $ref: "#/components/parameters/x-fapi-interaction-id"
        - $ref: "#/components/parameters/Authorization"
        - $ref: "#/components/parameters/x-idempotency-key"
        - $ref: "#/components/parameters/x-jws-signature"
        - $ref: "#/components/parameters/x-customer-user-agent"
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: "#/components/schemas/OBReqPayment"
          application/json:
            schema:
              $ref: "#/components/schemas/OBReqPayment"
          application/jose+jwe:
            schema:
              $ref: "#/components/schemas/OBReqPayment"
        description: "Default"
        required: true
      responses:
        201:
          $ref: "#/components/responses/201OBPaymentReq1"
        400:
          $ref: "#/components/responses/400Error"
        401:
          $ref: "#/components/responses/401Error"
        403:
          $ref: "#/components/responses/403Error"
        405:
          $ref: "#/components/responses/405Error"
        406:
          $ref: "#/components/responses/406Error"
        415:
          $ref: "#/components/responses/415Error"
        429:
          $ref: "#/components/responses/429Error"
        500:
          $ref: "#/components/responses/500Error"
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  /payments/Requirements/{requirementId}:
    get:
      tags:
        - Requirements
      summary: "Получение статуса платежного требования"
      operationId: "GetPaymentsRequirimentsByRequirementId"
      parameters:
        - $ref: "#/components/parameters/requirementId"
        - $ref: "#/components/parameters/requirementConsentIdHeader"
        - $ref: "#/components/parameters/x-fapi-auth-date"
        - $ref: "#/components/parameters/x-fapi-customer-ip-address"
        - $ref: "#/components/parameters/x-fapi-interaction-id"
        - $ref: "#/components/parameters/Authorization"
        - $ref: "#/components/parameters/x-customer-user-agent"
      responses:
        200:
          $ref: "#/components/responses/200OBPaymentReq2"
        400:
          $ref: "#/components/responses/400Error"
        401:
          $ref: "#/components/responses/401Error"
        403:
          $ref: "#/components/responses/403Error"
        405:
          $ref: "#/components/responses/405Error"
        406:
          $ref: "#/components/responses/406Error"
        429:
          $ref: "#/components/responses/429Error"
        500:
          $ref: "#/components/responses/500Error"
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  /paymentConsents/TaxRequirement:
    post:
      tags:
        - TaxRequirementConsents
      summary: "Создание платежное указание на выставление платежного требования на уплату налогов (других платежей в бюджет)"
      operationId: "SetPaymentConsentsTaxRequirement"
      parameters:
        - $ref: "#/components/parameters/x-fapi-auth-date"
        - $ref: "#/components/parameters/x-fapi-customer-ip-address"
        - $ref: "#/components/parameters/x-fapi-interaction-id"
        - $ref: "#/components/parameters/Authorization"
        - $ref: "#/components/parameters/x-idempotency-key"
        - $ref: "#/components/parameters/x-jws-signature"
        - $ref: "#/components/parameters/x-customer-user-agent"
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: "#/components/schemas/OBPaymentConsentTaxReq"
          application/json:
            schema:
              $ref: "#/components/schemas/OBPaymentConsentTaxReq"
          application/jose+jwe:
            schema:
              $ref: "#/components/schemas/OBPaymentConsentTaxReq"
        description: "Default"
        required: true
      responses:
        201:
          $ref: "#/components/responses/201PaymentConsentsTaxReq"
        400:
          $ref: "#/components/responses/400Error"
        401:
          $ref: "#/components/responses/401Error"
        403:
          $ref: "#/components/responses/403Error"
        405:
          $ref: "#/components/responses/405Error"
        406:
          $ref: "#/components/responses/406Error"
        415:
          $ref: "#/components/responses/415Error"
        429:
          $ref: "#/components/responses/429Error"
        500:
          $ref: "#/components/responses/500Error"
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  /paymentConsents/TaxRequirement/{taxRequirementConsentId}:
    get:
      tags:
        - TaxRequirementConsents
      summary: "Получение статуса платежного указания на выставление платежного требования на уплату налогов (других платежей в бюджет)"
      operationId: "GetPaymentConsentsTaxRequirementByTaxRequirementConsentId"
      parameters:
        - $ref: "#/components/parameters/taxRequirementConsentId"
        - $ref: "#/components/parameters/x-fapi-auth-date"
        - $ref: "#/components/parameters/x-fapi-customer-ip-address"
        - $ref: "#/components/parameters/x-fapi-interaction-id"
        - $ref: "#/components/parameters/Authorization"
        - $ref: "#/components/parameters/x-customer-user-agent"
      responses:
        200:
          $ref: "#/components/responses/200PaymentConsentsTaxReq"
        400:
          $ref: "#/components/responses/400Error"
        401:
          $ref: "#/components/responses/401Error"
        403:
          $ref: "#/components/responses/403Error"
        405:
          $ref: "#/components/responses/405Error"
        406:
          $ref: "#/components/responses/406Error"
        429:
          $ref: "#/components/responses/429Error"
        500:
          $ref: "#/components/responses/500Error"
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  /payments/TaxRequirements:
    post:
      tags:
        - TaxRequirements
      summary: "Создание платежного требования на уплату налогов (других платежей в бюджет)"
      operationId: "SetPaymentsTaxRequirements"
      parameters:
        - $ref: "#/components/parameters/taxRequirementConsentIdHeader"
        - $ref: "#/components/parameters/x-fapi-auth-date"
        - $ref: "#/components/parameters/x-fapi-customer-ip-address"
        - $ref: "#/components/parameters/x-fapi-interaction-id"
        - $ref: "#/components/parameters/Authorization"
        - $ref: "#/components/parameters/x-idempotency-key"
        - $ref: "#/components/parameters/x-jws-signature"
        - $ref: "#/components/parameters/x-customer-user-agent"
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: "#/components/schemas/OBReqTaxPayment"
          application/json:
            schema:
              $ref: "#/components/schemas/OBReqTaxPayment"
          application/jose+jwe:
            schema:
              $ref: "#/components/schemas/OBReqTaxPayment"
        description: "Default"
        required: true
      responses:
        201:
          $ref: "#/components/responses/201OBTaxPaymentReq1"
        400:
          $ref: "#/components/responses/400Error"
        401:
          $ref: "#/components/responses/401Error"
        403:
          $ref: "#/components/responses/403Error"
        405:
          $ref: "#/components/responses/405Error"
        406:
          $ref: "#/components/responses/406Error"
        415:
          $ref: "#/components/responses/415Error"
        429:
          $ref: "#/components/responses/429Error"
        500:
          $ref: "#/components/responses/500Error"
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  /payments/TaxRequirements/{taxRequirementId}:
    get:
      tags:
        - TaxRequirements
      summary: "Получение статуса платежного требования на уплату налогов (других платежей в бюджет)"
      operationId: "GetPaymentsTaxRequirementsByTaxRequirementId"
      parameters:
        - $ref: "#/components/parameters/taxRequirementId"
        - $ref: "#/components/parameters/taxRequirementConsentIdHeader"
        - $ref: "#/components/parameters/x-fapi-auth-date"
        - $ref: "#/components/parameters/x-fapi-customer-ip-address"
        - $ref: "#/components/parameters/x-fapi-interaction-id"
        - $ref: "#/components/parameters/Authorization"
        - $ref: "#/components/parameters/x-customer-user-agent"
      responses:
        200:
          $ref: "#/components/responses/200OBTaxPaymentReq2"
        400:
          $ref: "#/components/responses/400Error"
        401:
          $ref: "#/components/responses/401Error"
        403:
          $ref: "#/components/responses/403Error"
        405:
          $ref: "#/components/responses/405Error"
        406:
          $ref: "#/components/responses/406Error"
        429:
          $ref: "#/components/responses/429Error"
        500:
          $ref: "#/components/responses/500Error"
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  /paymentConsents/VRP:
    post:
      tags:
        - VRPConsents
      summary: "Создание платежного указания на инициирование рекуррентного платежа"
      operationId: "SetPaymentConsentsVRP"
      parameters:
        - $ref: "#/components/parameters/x-fapi-auth-date"
        - $ref: "#/components/parameters/x-fapi-customer-ip-address"
        - $ref: "#/components/parameters/x-fapi-interaction-id"
        - $ref: "#/components/parameters/Authorization"
        - $ref: "#/components/parameters/x-idempotency-key"
        - $ref: "#/components/parameters/x-jws-signature"
        - $ref: "#/components/parameters/x-customer-user-agent"
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: "#/components/schemas/OBVRPConsent"
          application/json:
            schema:
              $ref: "#/components/schemas/OBVRPConsent"
          application/jose+jwe:
            schema:
              $ref: "#/components/schemas/OBVRPConsent"
        description: "Default"
        required: true
      responses:
        201:
          $ref: "#/components/responses/201VRPConsents"
        400:
          $ref: "#/components/responses/400Error"
        401:
          $ref: "#/components/responses/401Error"
        403:
          $ref: "#/components/responses/403Error"
        405:
          $ref: "#/components/responses/405Error"
        406:
          $ref: "#/components/responses/406Error"
        415:
          $ref: "#/components/responses/415Error"
        429:
          $ref: "#/components/responses/429Error"
        500:
          $ref: "#/components/responses/500Error"
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  /paymentConsents/VRP/{VRPConsentId}:
    get:
      tags:
        - VRPConsents
      summary: "Получение статуса платежного указания на инициирование рекуррентного платежа"
      operationId: "GetPaymentConsentsVPRByVRPConsentId"
      parameters:
        - $ref: "#/components/parameters/VRPConsentId"
        - $ref: "#/components/parameters/x-fapi-auth-date"
        - $ref: "#/components/parameters/x-fapi-customer-ip-address"
        - $ref: "#/components/parameters/x-fapi-interaction-id"
        - $ref: "#/components/parameters/Authorization"
        - $ref: "#/components/parameters/x-customer-user-agent"
      responses:
        200:
          $ref: "#/components/responses/200VRPConsents"
        400:
          $ref: "#/components/responses/400Error"
        401:
          $ref: "#/components/responses/401Error"
        403:
          $ref: "#/components/responses/403Error"
        405:
          $ref: "#/components/responses/405Error"
        406:
          $ref: "#/components/responses/406Error"
        429:
          $ref: "#/components/responses/429Error"
        500:
          $ref: "#/components/responses/500Error"
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
    delete:
      tags:
        - VRPConsents
      summary: "Удаление (отзыв) платежного указания на инициирование рекуррентного платежа"
      operationId: "DeletePaymentConsentsVPRByVPRConsentId"
      parameters:
        - $ref: "#/components/parameters/VRPConsentId"
        - $ref: "#/components/parameters/x-fapi-auth-date"
        - $ref: "#/components/parameters/x-fapi-customer-ip-address"
        - $ref: "#/components/parameters/x-fapi-interaction-id"
        - $ref: "#/components/parameters/Authorization"
        - $ref: "#/components/parameters/x-customer-user-agent"
      responses:
        '204':
          $ref: '#/components/responses/204PaymentConsentIdDeleted'
        '400':
          $ref: '#/components/responses/400Error'
        '401':
          $ref: '#/components/responses/401Error'
        '403':
          $ref: '#/components/responses/403Error'
        '405':
          $ref: '#/components/responses/405Error'
        '406':
          $ref: '#/components/responses/406Error'
        '429':
          $ref: '#/components/responses/429Error'
        '500':
          $ref: '#/components/responses/500Error'
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  /payments/VRP:
    post:
      tags:
        - VRP
      summary: "Создание рекуррентного платежа"
      operationId: "SetPaymentsVRP"
      parameters:
        - $ref: "#/components/parameters/VRPConsentIdHeader"
        - $ref: "#/components/parameters/x-fapi-auth-date"
        - $ref: "#/components/parameters/x-fapi-customer-ip-address"
        - $ref: "#/components/parameters/x-fapi-interaction-id"
        - $ref: "#/components/parameters/Authorization"
        - $ref: "#/components/parameters/x-idempotency-key"
        - $ref: "#/components/parameters/x-jws-signature"
        - $ref: "#/components/parameters/x-customer-user-agent"
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: "#/components/schemas/OBVRPPayment"
          application/json:
            schema:
              $ref: "#/components/schemas/OBVRPPayment"
          application/jose+jwe:
            schema:
              $ref: "#/components/schemas/OBVRPPayment"
        description: "Default"
        required: true
      responses:
        201:
          $ref: "#/components/responses/201OBVRP1"
        400:
          $ref: "#/components/responses/400Error"
        401:
          $ref: "#/components/responses/401Error"
        403:
          $ref: "#/components/responses/403Error"
        405:
          $ref: "#/components/responses/405Error"
        406:
          $ref: "#/components/responses/406Error"
        415:
          $ref: "#/components/responses/415Error"
        429:
          $ref: "#/components/responses/429Error"
        500:
          $ref: "#/components/responses/500Error"
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  /payments/VRP/{VRPId}:
    get:
      tags:
        - VRP
      summary: "Получение статуса рекуррентного платежа"
      operationId: "GetPaymentsVRPbyVRPid"
      parameters:
        - $ref: "#/components/parameters/VRPId"
        - $ref: "#/components/parameters/VRPConsentIdHeader"
        - $ref: "#/components/parameters/x-fapi-auth-date"
        - $ref: "#/components/parameters/x-fapi-customer-ip-address"
        - $ref: "#/components/parameters/x-fapi-interaction-id"
        - $ref: "#/components/parameters/Authorization"
        - $ref: "#/components/parameters/x-customer-user-agent"
      responses:
        200:
          $ref: "#/components/responses/200OBVRP2"
        400:
          $ref: "#/components/responses/400Error"
        401:
          $ref: "#/components/responses/401Error"
        403:
          $ref: "#/components/responses/403Error"
        405:
          $ref: "#/components/responses/405Error"
        406:
          $ref: "#/components/responses/406Error"
        429:
          $ref: "#/components/responses/429Error"
        500:
          $ref: "#/components/responses/500Error"
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
components:
  schemas:
    OBDomesticConsent:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBDataDomestic'
        Risk:
          $ref: '#/components/schemas/OBRisk'
    OBVRPConsent:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBDataVRP'
        Risk:
          $ref: '#/components/schemas/OBRisk'
    OBReqConsent:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBDataReq'
        Risk:
          $ref: '#/components/schemas/OBRisk'
    OBListAccountsConsent:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBDataListAccounts'
    OBListPassportsConsent:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBDataListPassports'
    OBPaymentConsentTax:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBDataTaxDomestic'
    OBPaymentConsentTaxReq:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBDataTaxReq'
    OBPaymentConsentListAccounts1:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBDataListAccountsResp'
    OBPaymentConsentListPassports1:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBDataListPassportsResp'
    OBPaymentConsent1:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBDataDomesticResp'
    OBVRPConsent1:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBDataVRPResp'
        Risk:
          $ref: '#/components/schemas/OBRisk'
    OBReqConsent1:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBDataReqResp'
    OBPaymentConsent2:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBDataDomesticResp1'
        Risk:
          $ref: '#/components/schemas/OBRisk'
    OBVRPConsent2:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBDataVRPResp1'
        Risk:
          $ref: '#/components/schemas/OBRisk'
    OBReqConsent2:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBDataReqResp1'
        Risk:
          $ref: '#/components/schemas/OBRisk'
    OBPaymentConsentListAccounts2:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBDataListAccountsResp1'
    OBPaymentConsentListPassports2:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBDataListPassportsResp1'
    OBPaymentConsentTax1:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBDataTax'
    OBPaymentConsentTaxReq1:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBDataTaxReq1'
    OBPaymentConsentTax2:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBDataTax1'
    OBPaymentConsentTaxReq2:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBDataTaxReq2'
    OBDomesticPayment:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBDataDomesticPayment'
        Risk:
          $ref: '#/components/schemas/OBRisk'
    OBVRPPayment:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBDataVRPPayment'
        Risk:
          $ref: '#/components/schemas/OBRisk'
    OBReqPayment:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBDataReqPayment'
        Risk:
          $ref: '#/components/schemas/OBRisk'
    OBListAccountsPayment:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBDataListAccountsPayment'
    OBListPassportsPayment:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBDataListPassportsPayment'
    OBDomesticTaxPayment:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBDataDomesticTaxPayment'
    OBReqTaxPayment:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBDataReqTaxPayment'
    OBPayment1:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBDataPayment1'
        Risk:
          $ref: '#/components/schemas/OBRisk'
    OBVRP1:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBDataVRP1'
        Risk:
          $ref: '#/components/schemas/OBRisk'
    OBPaymentReq1:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBDataPaymentReq1'
        Risk:
          $ref: '#/components/schemas/OBRisk'
    OBPaymentListAccounts1:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBDataPaymentListAccounts1'
    OBPaymentListPassports1:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBDataPaymentListPassports1'
    OBTaxPayment1:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBDataTaxPayment1'
    OBTaxPaymentReq1:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBDataTaxPaymentReq1'
    OBPayment2:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBDataPayment2'
        Risk:
          $ref: '#/components/schemas/OBRisk'
    OBVRP2:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBDataVRP2'
        Risk:
          $ref: '#/components/schemas/OBRisk'
    OBPaymentReq2:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBDataPaymentReq2'
        Risk:
          $ref: '#/components/schemas/OBRisk'
    OBPaymentListAccounts2:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBDataPaymentListAccounts2'
    OBPaymentListPassports2:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBDataPaymentListPassports2'
    OBTaxPayment2:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBDataTaxPayment2'
    OBTaxPaymentReq2:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBDataTaxPaymentReq2'
    OBPaymentStatus:
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBDataPaymentStatus'
    OBDataDomesticPayment:
      type: object
      required:
        - domesticConsentId
        - Initiation
      properties:
        domesticConsentId:
          $ref: '#/components/schemas/DomesticConsentId'
        Initiation:
          $ref: '#/components/schemas/OBInitiationDomestic'
    OBDataVRPPayment:
      type: object
      required:
        - VRPConsentId
        - Initiation
        - Instruction
      properties:
        VRPConsentId:
          $ref: '#/components/schemas/VRPConsentId'
        Initiation:
          $ref: '#/components/schemas/OBInitiationVRP'
        Instruction:
          $ref: '#/components/schemas/OBInstruction'
    OBDataReqPayment:
      type: object
      required:
        - requirementConsentId
        - Initiation
      properties:
        requirementConsentId:
          $ref: '#/components/schemas/RequirementConsentId'
        Initiation:
          $ref: '#/components/schemas/OBInitiationReq'
    OBDataListAccountsPayment:
      type: object
      required:
        - listAccountsConsentId
        - Initiation
      properties:
        listAccountsConsentId:
          $ref: '#/components/schemas/ListAccountsConsentId'
        Initiation:
          $ref: '#/components/schemas/OBInitiationListAccounts'
    OBDataListPassportsPayment:
      type: object
      required:
        - listPassportsConsentId
        - Initiation
      properties:
        listPassportsConsentId:
          $ref: '#/components/schemas/ListPassportsConsentId'
        Initiation:
          $ref: '#/components/schemas/OBInitiationListPassports'
    OBDataDomesticTaxPayment:
      type: object
      required:
        - domesticTaxConsentId
        - Initiation
      properties:
        domesticTaxConsentId:
          $ref: '#/components/schemas/DomesticTaxConsentId'
        Initiation:
          $ref: '#/components/schemas/OBInitiationTaxDomestic'
    OBDataReqTaxPayment:
      type: object
      required:
        - taxRequirementConsentId
        - Initiation
      properties:
        taxRequirementConsentId:
          $ref: '#/components/schemas/TaxRequirementConsentId'
        Initiation:
          $ref: '#/components/schemas/OBInitiationTaxReq'
    OBDataPayment1:
      type: object
      required:
        - Initiation
        - domesticConsentId
        - domesticId
        - creationDateTime
        - PaymentStatus
      properties:
        domesticId:
          $ref: '#/components/schemas/DomesticId'
        domesticConsentId:
          $ref: '#/components/schemas/DomesticConsentId'
        creationDateTime:
          $ref: '#/components/schemas/CreationDateTime'
        expectedExecutionDate:
          $ref: '#/components/schemas/ExpectedExecutionDate'
        expectedSettlementDate:
          $ref: '#/components/schemas/ExpectedSettlementDate'
        Initiation:
          $ref: '#/components/schemas/OBInitiationDomestic'
        Multiauthorisation:
          $ref: '#/components/schemas/OBMultiAuthorisation'
        Charge:
          $ref: '#/components/schemas/OBCharge'
        PaymentStatus:
          $ref: '#/components/schemas/OBDataPaymentStatus'
    OBDataVRP1:
      type: object
      required:
        - Initiation
        - Instruction
        - VRPConsentId
        - VRPId
        - creationDateTime
        - PaymentStatus
      properties:
        VRPId:
          $ref: '#/components/schemas/VRPId'
        VRPConsentId:
          $ref: '#/components/schemas/VRPConsentId'
        creationDateTime:
          $ref: '#/components/schemas/CreationDateTime'
        expectedExecutionDate:
          $ref: '#/components/schemas/ExpectedExecutionDate'
        expectedSettlementDate:
          $ref: '#/components/schemas/ExpectedSettlementDate'
        Initiation:
          $ref: '#/components/schemas/OBInitiationVRP'
        Instruction:
          $ref: '#/components/schemas/OBInstruction'
        Charge:
          $ref: '#/components/schemas/OBCharge'
        PaymentStatus:
          $ref: '#/components/schemas/OBDataPaymentStatus'
    OBDataPaymentReq1:
      type: object
      required:
        - Initiation
        - requirementConsentId
        - requirementId
        - creationDateTime
        - PaymentStatus
      properties:
        requirementId:
          $ref: '#/components/schemas/RequirementId'
        requirementConsentId:
          $ref: '#/components/schemas/RequirementConsentId'
        creationDateTime:
          $ref: '#/components/schemas/CreationDateTime'
        expectedExecutionDate:
          $ref: '#/components/schemas/ExpectedExecutionDate'
        expectedSettlementDate:
          $ref: '#/components/schemas/ExpectedSettlementDate'
        Initiation:
          $ref: '#/components/schemas/OBInitiationDomestic'
        Multiauthorisation:
          $ref: '#/components/schemas/OBMultiAuthorisation'
        Charge:
          $ref: '#/components/schemas/OBCharge'
        PaymentStatus:
          $ref: '#/components/schemas/OBDataPaymentStatus'
    OBDataPaymentListAccounts1:
      type: object
      required:
        - Initiation
        - listAccountsConsentId
        - listAccountsId
        - creationDateTime
        - PaymentStatus
      properties:
        listAccountsId:
          $ref: '#/components/schemas/ListAccountsId'
        listAccountsConsentId:
          $ref: '#/components/schemas/ListAccountsConsentId'
        creationDateTime:
          $ref: '#/components/schemas/CreationDateTime'
        expectedExecutionDate:
          $ref: '#/components/schemas/ExpectedExecutionDate'
        expectedSettlementDate:
          $ref: '#/components/schemas/ExpectedSettlementDate'
        Initiation:
          $ref: '#/components/schemas/OBInitiationListAccounts'
        Multiauthorisation:
          $ref: '#/components/schemas/OBMultiAuthorisation'
        Charge:
          $ref: '#/components/schemas/OBCharge'
        PaymentStatus:
          $ref: '#/components/schemas/OBDataPaymentStatus'
    OBDataPaymentListPassports1:
      type: object
      required:
        - Initiation
        - listPassportsConsentId
        - listPassportsId
        - creationDateTime
        - PaymentStatus
      properties:
        listPassportsId:
          $ref: '#/components/schemas/ListPassportsId'
        listPassportsConsentId:
          $ref: '#/components/schemas/ListPassportsConsentId'
        creationDateTime:
          $ref: '#/components/schemas/CreationDateTime'
        expectedExecutionDate:
          $ref: '#/components/schemas/ExpectedExecutionDate'
        expectedSettlementDate:
          $ref: '#/components/schemas/ExpectedSettlementDate'
        Initiation:
          $ref: '#/components/schemas/OBInitiationListPassports'
        Multiauthorisation:
          $ref: '#/components/schemas/OBMultiAuthorisation'
        Charge:
          $ref: '#/components/schemas/OBCharge'
        PaymentStatus:
          $ref: '#/components/schemas/OBDataPaymentStatus'
    OBDataTaxPayment1:
      type: object
      required:
        - Initiation
        - domesticTaxConsentId
        - domesticTaxId
        - creationDateTime
        - PaymentStatus
      properties:
        domesticTaxId:
          $ref: '#/components/schemas/DomesticTaxId'
        domesticTaxConsentId:
          $ref: '#/components/schemas/DomesticTaxConsentId'
        creationDateTime:
          $ref: '#/components/schemas/CreationDateTime'
        expectedExecutionDate:
          $ref: '#/components/schemas/ExpectedExecutionDate'
        expectedSettlementDate:
          $ref: '#/components/schemas/ExpectedSettlementDate'
        Initiation:
          $ref: '#/components/schemas/OBInitiationTaxDomestic'
        Multiauthorisation:
          $ref: '#/components/schemas/OBMultiAuthorisation'
        PaymentStatus:
          $ref: '#/components/schemas/OBDataPaymentStatus'
    OBDataTaxPaymentReq1:
      type: object
      required:
        - Initiation
        - taxRequirementConsentId
        - taxRequirementId
        - creationDateTime
        - PaymentStatus
      properties:
        taxRequirementConsentId:
          $ref: '#/components/schemas/TaxRequirementConsentId'
        taxRequirementId:
          $ref: '#/components/schemas/TaxRequirementId'
        creationDateTime:
          $ref: '#/components/schemas/CreationDateTime'
        expectedExecutionDate:
          $ref: '#/components/schemas/ExpectedExecutionDate'
        expectedSettlementDate:
          $ref: '#/components/schemas/ExpectedSettlementDate'
        Initiation:
          $ref: '#/components/schemas/OBInitiationTaxReq'
        Multiauthorisation:
          $ref: '#/components/schemas/OBMultiAuthorisation'
        PaymentStatus:
          $ref: '#/components/schemas/OBDataPaymentStatus'
    OBDataPayment2:
      type: object
      required:
        - Initiation
        - domesticConsentId
        - domesticId
        - creationDateTime
        - PaymentStatus
      properties:
        domesticId:
          $ref: '#/components/schemas/DomesticId'
        domesticConsentId:
          $ref: '#/components/schemas/DomesticConsentId'
        creationDateTime:
          $ref: '#/components/schemas/CreationDateTime'
        expectedExecutionDate:
          $ref: '#/components/schemas/ExpectedExecutionDate'
        expectedSettlementDate:
          $ref: '#/components/schemas/ExpectedSettlementDate'
        Initiation:
          $ref: '#/components/schemas/OBInitiationDomestic'
        Multiauthorisation:
          $ref: '#/components/schemas/OBMultiAuthorisation'
        Charge:
          $ref: '#/components/schemas/OBCharge'
        PaymentStatus:
          $ref: '#/components/schemas/OBDataPaymentStatusGet'
    OBDataVRP2:
      type: object
      required:
        - Initiation
        - Instruction
        - VRPConsentId
        - VRPId
        - creationDateTime
        - PaymentStatus
      properties:
        VRPId:
          $ref: '#/components/schemas/VRPId'
        VRPConsentId:
          $ref: '#/components/schemas/VRPConsentId'
        creationDateTime:
          $ref: '#/components/schemas/CreationDateTime'
        expectedExecutionDate:
          $ref: '#/components/schemas/ExpectedExecutionDate'
        expectedSettlementDate:
          $ref: '#/components/schemas/ExpectedSettlementDate'
        Initiation:
          $ref: '#/components/schemas/OBInitiationVRP'
        Instruction:
          $ref: '#/components/schemas/OBInstruction'
        Charge:
          $ref: '#/components/schemas/OBCharge'
        PaymentStatus:
          $ref: '#/components/schemas/OBDataPaymentStatusGet'
    OBDataPaymentReq2:
      type: object
      required:
        - Initiation
        - requirementConsentId
        - requirementId
        - creationDateTime
        - PaymentStatus
      properties:
        requirementId:
          $ref: '#/components/schemas/RequirementId'
        requirementConsentId:
          $ref: '#/components/schemas/RequirementConsentId'
        creationDateTime:
          $ref: '#/components/schemas/CreationDateTime'
        expectedExecutionDate:
          $ref: '#/components/schemas/ExpectedExecutionDate'
        expectedSettlementDate:
          $ref: '#/components/schemas/ExpectedSettlementDate'
        Initiation:
          $ref: '#/components/schemas/OBInitiationReq'
        Multiauthorisation:
          $ref: '#/components/schemas/OBMultiAuthorisation'
        Charge:
          $ref: '#/components/schemas/OBCharge'
        PaymentStatus:
          $ref: '#/components/schemas/OBDataPaymentStatusGet'
    OBDataPaymentListAccounts2:
      type: object
      required:
        - Initiation
        - listAccountsConsentId
        - listAccountsId
        - creationDateTime
        - PaymentStatus
      properties:
        listAccountsId:
          $ref: '#/components/schemas/ListAccountsId'
        listAccountsConsentId:
          $ref: '#/components/schemas/ListAccountsConsentId'
        creationDateTime:
          $ref: '#/components/schemas/CreationDateTime'
        expectedExecutionDate:
          $ref: '#/components/schemas/ExpectedExecutionDate'
        expectedSettlementDate:
          $ref: '#/components/schemas/ExpectedSettlementDate'
        Initiation:
          $ref: '#/components/schemas/OBInitiationListAccounts'
        Multiauthorisation:
          $ref: '#/components/schemas/OBMultiAuthorisation'
        Charge:
          $ref: '#/components/schemas/OBCharge'
        PaymentStatus:
          $ref: '#/components/schemas/OBDataPaymentStatusGet'
    OBDataPaymentListPassports2:
      type: object
      required:
        - Initiation
        - listPassportsConsentId
        - listPassportsId
        - creationDateTime
        - PaymentStatus
      properties:
        listPassportsId:
          $ref: '#/components/schemas/ListPassportsId'
        listPassportsConsentId:
          $ref: '#/components/schemas/ListPassportsConsentId'
        creationDateTime:
          $ref: '#/components/schemas/CreationDateTime'
        expectedExecutionDate:
          $ref: '#/components/schemas/ExpectedExecutionDate'
        expectedSettlementDate:
          $ref: '#/components/schemas/ExpectedSettlementDate'
        Initiation:
          $ref: '#/components/schemas/OBInitiationListPassports'
        Multiauthorisation:
          $ref: '#/components/schemas/OBMultiAuthorisation'
        Charge:
          $ref: '#/components/schemas/OBCharge'
        PaymentStatus:
          $ref: '#/components/schemas/OBDataPaymentStatusGet'
    OBDataTaxPayment2:
      type: object
      required:
        - Initiation
        - domesticTaxConsentId
        - domesticTaxId
        - creationDateTime
        - PaymentStatus
      properties:
        domesticTaxId:
          $ref: '#/components/schemas/DomesticTaxId'
        domesticTaxConsentId:
          $ref: '#/components/schemas/DomesticTaxConsentId'
        creationDateTime:
          $ref: '#/components/schemas/CreationDateTime'
        expectedExecutionDate:
          $ref: '#/components/schemas/ExpectedExecutionDate'
        expectedSettlementDate:
          $ref: '#/components/schemas/ExpectedSettlementDate'
        Initiation:
          $ref: '#/components/schemas/OBInitiationTaxDomestic'
        Multiauthorisation:
          $ref: '#/components/schemas/OBMultiAuthorisation'
        PaymentStatus:
          $ref: '#/components/schemas/OBDataPaymentStatusGet'
    OBDataTaxPaymentReq2:
      type: object
      required:
        - Initiation
        - taxRequirementConsentId
        - taxRequirementId
        - creationDateTime
        - PaymentStatus
      properties:
        taxRequirementId:
          $ref: '#/components/schemas/TaxRequirementId'
        taxRequirementConsentId:
          $ref: '#/components/schemas/TaxRequirementConsentId'
        creationDateTime:
          $ref: '#/components/schemas/CreationDateTime'
        expectedExecutionDate:
          $ref: '#/components/schemas/ExpectedExecutionDate'
        expectedSettlementDate:
          $ref: '#/components/schemas/ExpectedSettlementDate'
        Initiation:
          $ref: '#/components/schemas/OBInitiationTaxReq'
        Multiauthorisation:
          $ref: '#/components/schemas/OBMultiAuthorisation'
        PaymentStatus:
          $ref: '#/components/schemas/OBDataPaymentStatusGet'
    OBDataPaymentStatus:
      type: object
      required:
        - paymentStatus
        - statusUpdateDateTime
      properties:
        paymentStatus:
          $ref: '#/components/schemas/PaymentStatus'
        statusUpdateDateTime:
          $ref: '#/components/schemas/StatusUpdateDateTime1'
        statusReasonInformation:
          $ref: '#/components/schemas/StatusReasonInformation'
    OBDataPaymentStatusGet:
      type: object
      required:
        - paymentStatus
        - statusUpdateDateTime
      properties:
        paymentStatus:
          $ref: '#/components/schemas/PaymentStatusGet'
        statusUpdateDateTime:
          $ref: '#/components/schemas/StatusUpdateDateTime1Get'
        statusReasonInformation:
          $ref: '#/components/schemas/StatusReasonInformation'
    PaymentStatus:
      type: string
      maxLength: 4
      minLength: 1
      description: 'Код статуса платежа согласно справочника ISO E065'
      example: 'PDNG'
    PaymentStatusGet:
      type: string
      maxLength: 4
      minLength: 1
      description: 'Код статуса платежа согласно справочника ISO E065'
      example: 'ACCC'
    StatusReasonInformation:
      type: object
      required:
        - statusReasonCode
      properties:
        statusReasonCode:
          $ref: '#/components/schemas/StatusReasonCode'
        additionalInformation:
          $ref: '#/components/schemas/AdditionalInformation'
    StatusReasonCode:
      type: string
      maxLength: 4
      minLength: 1
      description: 'Код причины отмены транзакции'
    OBDataTaxDomestic:
      type: object
      required:
        - Initiation
      properties:
        Initiation:
          $ref: '#/components/schemas/OBInitiationTaxDomestic'
        Authorisation:
          $ref: '#/components/schemas/OBAuthorisation'
    OBDataTaxReq:
      type: object
      required:
        - Initiation
      properties:
        Initiation:
          $ref: '#/components/schemas/OBInitiationTaxReq'
        Authorisation:
          $ref: '#/components/schemas/OBAuthorisation'
    OBInitiationTaxDomestic:
      required:
        - instructionIdentification
        - endToEndIdentification
        - localInstrument
        - amount
        - currency
        - requestedExecutionDate
        - creditor
        - taxRemmitance
      type: object
      properties:
        instructionIdentification:
          $ref: '#/components/schemas/InstructionIdentification'
        endToEndIdentification:
          $ref: '#/components/schemas/EndToEndIdentification'
        localInstrument:
          $ref: '#/components/schemas/LocalInstrument'
        amount:
          $ref: '#/components/schemas/Amount'
        currency:
          $ref: '#/components/schemas/Currency'
        requestedExecutionDate:
          $ref: '#/components/schemas/RequestedExecutionDate'
        debtor:
          $ref: '#/components/schemas/OBDebtor'
        creditor:
          $ref: '#/components/schemas/OBCreditorTax'
        remmitanceInformation:
          $ref: '#/components/schemas/OBRemmitanceInformationTax'
        taxRemmitance:
          $ref: '#/components/schemas/OBTaxRemmitance'
        supplementaryData:
          $ref: '#/components/schemas/OBSupplementaryData'
    OBInitiationTaxReq:
      required:
        - instructionIdentification
        - endToEndIdentification
        - localInstrument
        - amount
        - currency
        - requestedExecutionDate
        - creditor
        - debtor
        - taxRemmitance
      type: object
      properties:
        instructionIdentification:
          $ref: '#/components/schemas/InstructionIdentification'
        endToEndIdentification:
          $ref: '#/components/schemas/EndToEndIdentification'
        localInstrument:
          $ref: '#/components/schemas/LocalInstrument'
        amount:
          $ref: '#/components/schemas/Amount'
        currency:
          $ref: '#/components/schemas/Currency'
        requestedExecutionDate:
          $ref: '#/components/schemas/RequestedExecutionDate'
        debtor:
          $ref: '#/components/schemas/OBDebtor'
        creditor:
          $ref: '#/components/schemas/OBCreditorTax'
        remmitanceInformation:
          $ref: '#/components/schemas/OBRemmitanceInformationTax'
        taxRemmitance:
          $ref: '#/components/schemas/OBTaxRemmitance'
        enclosedFile:
          $ref: '#/components/schemas/OBEnclosedFileTax'
        supplementaryData:
          $ref: '#/components/schemas/OBSupplementaryData'
    OBDataDomestic:
      type: object
      required:
        - Initiation
      properties:
        Initiation:
          $ref: '#/components/schemas/OBInitiationDomestic'
        Authorisation:
          $ref: '#/components/schemas/OBAuthorisation'
    OBDataVRP:
      type: object
      required:
        - Initiation
        - ControlParameters
      properties:
        ControlParameters:
          $ref: '#/components/schemas/OBControlParameters'
        Initiation:
          $ref: '#/components/schemas/OBInitiationVRP'
    OBDataReq:
      type: object
      required:
        - Initiation
      properties:
        Initiation:
          $ref: '#/components/schemas/OBInitiationReq'
        Authorisation:
          $ref: '#/components/schemas/OBAuthorisation'
    OBDataListAccounts:
      type: object
      required:
        - Initiation
      properties:
        Initiation:
          $ref: '#/components/schemas/OBInitiationListAccounts'
        Authorisation:
          $ref: '#/components/schemas/OBAuthorisation'
    OBDataListPassports:
      type: object
      required:
        - Initiation
      properties:
        Initiation:
          $ref: '#/components/schemas/OBInitiationListPassports'
        Authorisation:
          $ref: '#/components/schemas/OBAuthorisation'
    OBInitiationDomestic:
      required:
        - instructionIdentification
        - endToEndIdentification
        - localInstrument
        - amount
        - currency
        - requestedExecutionDate
        - creditor
      type: object
      properties:
        instructionIdentification:
          $ref: '#/components/schemas/InstructionIdentification'
        endToEndIdentification:
          $ref: '#/components/schemas/EndToEndIdentification'
        localInstrument:
          $ref: '#/components/schemas/LocalInstrument'
        amount:
          $ref: '#/components/schemas/Amount'
        currency:
          $ref: '#/components/schemas/Currency'
        requestedExecutionDate:
          $ref: '#/components/schemas/RequestedExecutionDate'
        debtor:
          $ref: '#/components/schemas/OBDebtor'
        creditor:
          $ref: '#/components/schemas/OBCreditor'
        remmitanceInformation:
          $ref: '#/components/schemas/OBRemmitanceInformation'
        supplementaryData:
          $ref: '#/components/schemas/OBSupplementaryData'
    OBInstruction:
      required:
        - instructionIdentification
        - endToEndIdentification
        - localInstrument
        - amount
        - currency
        - creditor
      type: object
      properties:
        instructionIdentification:
          $ref: '#/components/schemas/InstructionIdentification'
        endToEndIdentification:
          $ref: '#/components/schemas/EndToEndIdentification'
        localInstrument:
          $ref: '#/components/schemas/LocalInstrument'
        amount:
          $ref: '#/components/schemas/Amount'
        currency:
          $ref: '#/components/schemas/Currency'
        creditor:
          $ref: '#/components/schemas/OBCreditor'
        remmitanceInformation:
          $ref: '#/components/schemas/OBRemmitanceInformation'
        supplementaryData:
          $ref: '#/components/schemas/OBSupplementaryData'
    OBInitiationVRP:
      required:
        - creditor
      type: object
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        currency:
          $ref: '#/components/schemas/Currency'
        debtor:
          $ref: '#/components/schemas/OBDebtor'
        creditor:
          $ref: '#/components/schemas/OBCreditor'
        remmitanceInformation:
          $ref: '#/components/schemas/OBRemmitanceInformation'
    OBControlParameters:
      required:
        - creditor
      type: object
      properties:
        fromPaymentDate:
          $ref: '#/components/schemas/FromPaymentDate'
        toPaymentDate:
          $ref: '#/components/schemas/ToPaymentDate'
        maximumIndividualAmount:
          $ref: '#/components/schemas/MaximumIndividualAmount'
        currency:
          $ref: '#/components/schemas/Currency'
        periodicLimits:
          $ref: '#/components/schemas/OBPeriodicLimits'
        supplementaryData:
          $ref: '#/components/schemas/OBSupplementaryData'
    MaximumIndividualAmount:
      type: string
      pattern: '^[0-9]{1,13}$|^[0-9]{1,13}.[0-9]{1,5}$|^[0-9]{1,13}.[0-9]{1,2}$'
      description: 'Максимальная единовременная сумма, которая может быть указана в платежной инструкции в соответствии с платежным указанием'
      example: '2800.00'
    FromPaymentDate:
      type: string
      format: date
      description: 'Дата начала действия платежного указания включительно'
      example: '2021-04-20'
    ToPaymentDate:
      type: string
      format: date
      description: 'Дата, в которую денежные средства должны быть списаны со счета(-ов) плательщика'
      example: '2021-05-20'
    OBPeriodicLimits:
      type: array
      items:
        required:
          - amount
          - currency
          - periodType
        type: object
        properties:
          amount:
            $ref: '#/components/schemas/AmountPeriodicLimits'
          currency:
            $ref: '#/components/schemas/Currency'
          periodType:
            $ref: '#/components/schemas/PeriodType'
    AmountPeriodicLimits:
      type: string
      pattern: '^[0-9]{1,13}$|^[0-9]{1,13}.[0-9]{1,5}$'
      description: 'Лимит суммы рекуррентного платежа за определенный период'
      example: '28000.00'
    PeriodType:
      type: string
      maxLength: 10
      minLength: 1
      description: 'Тип периода'
      enum:
        - Day
        - Week
        - Month
        - Quarter
        - Half-year
        - Year
      example: 'Month'
    OBInitiationReq:
      required:
        - instructionIdentification
        - endToEndIdentification
        - localInstrument
        - amount
        - currency
        - requestedExecutionDate
        - creditor
        - debtor
      type: object
      properties:
        instructionIdentification:
          $ref: '#/components/schemas/InstructionIdentification'
        endToEndIdentification:
          $ref: '#/components/schemas/EndToEndIdentification'
        localInstrument:
          $ref: '#/components/schemas/LocalInstrument'
        amount:
          $ref: '#/components/schemas/Amount'
        currency:
          $ref: '#/components/schemas/Currency'
        requestedExecutionDate:
          $ref: '#/components/schemas/RequestedExecutionDate'
        debtor:
          $ref: '#/components/schemas/OBDebtor'
        creditor:
          $ref: '#/components/schemas/OBCreditor'
        remmitanceInformation:
          $ref: '#/components/schemas/OBRemmitanceInformation'
        enclosedFile:
          $ref: '#/components/schemas/OBEnclosedFile'
        supplementaryData:
          $ref: '#/components/schemas/OBSupplementaryData'
    OBInitiationListAccounts:
      required:
        - instructionIdentification
        - endToEndIdentification
        - localInstrument
        - amount
        - currency
        - requestedExecutionDate
        - creditor
        - listAccounts
      type: object
      properties:
        instructionIdentification:
          $ref: '#/components/schemas/InstructionIdentification'
        endToEndIdentification:
          $ref: '#/components/schemas/EndToEndIdentification'
        localInstrument:
          $ref: '#/components/schemas/LocalInstrument'
        amount:
          $ref: '#/components/schemas/Amount'
        currency:
          $ref: '#/components/schemas/Currency'
        requestedExecutionDate:
          $ref: '#/components/schemas/RequestedExecutionDate'
        debtor:
          $ref: '#/components/schemas/OBDebtor'
        creditor:
          $ref: '#/components/schemas/OBCreditorList'
        listAccounts:
          $ref: '#/components/schemas/OBListAccounts'
        remmitanceInformation:
          $ref: '#/components/schemas/OBRemmitanceInformationList'
        supplementaryData:
          $ref: '#/components/schemas/OBSupplementaryData'
    OBInitiationListPassports:
      required:
        - instructionIdentification
        - endToEndIdentification
        - localInstrument
        - amount
        - currency
        - requestedExecutionDate
        - creditor
        - listPassportData
      type: object
      properties:
        instructionIdentification:
          $ref: '#/components/schemas/InstructionIdentification'
        endToEndIdentification:
          $ref: '#/components/schemas/EndToEndIdentification'
        localInstrument:
          $ref: '#/components/schemas/LocalInstrument'
        amount:
          $ref: '#/components/schemas/Amount'
        currency:
          $ref: '#/components/schemas/Currency'
        requestedExecutionDate:
          $ref: '#/components/schemas/RequestedExecutionDate'
        debtor:
          $ref: '#/components/schemas/OBDebtor'
        creditor:
          $ref: '#/components/schemas/OBCreditorList'
        listPassportData:
          $ref: '#/components/schemas/OBListPassportData'
        remmitanceInformation:
          $ref: '#/components/schemas/OBRemmitanceInformationListPassport'
        supplementaryData:
          $ref: '#/components/schemas/OBSupplementaryData'
    OBRisk:
      type: object
      properties:
        paymentContextCode:
          $ref: '#/components/schemas/PaymentContextCode'
        merchantCategoryCode:
          $ref: '#/components/schemas/MerchantCategoryCode'
        merchantCustomerIdentification:
          $ref: '#/components/schemas/MerchantCustomerIdentification'
        postalAddress:
          $ref: '#/components/schemas/OBPostalAddress'
    PaymentContextCode:
      type: string
      maxLength: 35
      minLength: 1
      description: 'Код платежа из справочника PaymentContextStaticType. Коды инициирования платежа'
      example: 'PartyToParty'
    MerchantCategoryCode:
      type: string
      maxLength: 4
      minLength: 3
      description: 'Код категории, связанный с типом услуг или товаров, которые продавец предоставляет для транзакции. Используется согласно ISO 18245. Рекомендуется заполнять в платежах с кодом платежа EcommerceGoods и EcommerceServices'
    MerchantCustomerIdentification:
      type: string
      maxLength: 35
      minLength: 1
      description: 'Уникальный идентификатор покупателя, который продавец присвоил Клиенту. Рекомендуется заполнять в платежах с кодом платежа EcommerceGoods и EcommerceServices'
    OBPostalAddress:
      type: object
      required:
        - country
        - townName
      description: 'Информация, которая позволяет найти и идентифицирует конкретный адрес в формате, устанавливаемом почтовыми службами . Рекомендуется заполнять в платежах с кодом платежа EcommerceGoods'
      properties:
        country:
          $ref: '#/components/schemas/Country'
        countrySubDivision:
          $ref: '#/components/schemas/CountrySubDivision'
        townName:
          $ref: '#/components/schemas/TownName'
        townLocationName:
          $ref: '#/components/schemas/TownLocationName'
        postCode:
          $ref: '#/components/schemas/PostCode'
        streetName:
          $ref: '#/components/schemas/StreetName'
        buildingNumber:
          $ref: '#/components/schemas/BuildingNumber'
        addressLine:
          $ref: '#/components/schemas/AddressLine'
    Country:
      type: string
      pattern: '^[A-Z]{2}$'
      description: 'Страна'
    CountrySubDivision:
      type: string
      maxLength: 35
      minLength: 1
      description: 'Регион/область страны'
    TownName:
      type: string
      maxLength: 35
      minLength: 1
      description: 'Название населенного пункта, согласно Единому реестру административно-территориальных и территориальных единиц Республики Беларусь с указанием типа населенного пункта (согласно справочнику N091) ) перед его названием через пробел'
    TownLocationName:
      type: string
      maxLength: 35
      minLength: 1
      description: 'Конкретное наименование места в населенном пункте. Используется при необходимости для указания кода СОАТО в соответствии с ОКРБ 003-2017 ”Система обозначений объектов административно-территориального деления и населенных пунктов“ и согласно справочнику N058'
    PostCode:
      type: string
      maxLength: 16
      minLength: 1
      description: 'Почтовый индекс'
    StreetName:
      type: string
      maxLength: 70
      minLength: 1
      description: 'Наименование улицы, согласно Реестру наименований улиц и дорог Национального кадастрового агентства с указанием типа элемента улично-дорожной сети (согласно справочнику N098) перед его названием через пробел'
    BuildingNumber:
      type: string
      maxLength: 16
      minLength: 1
      description: 'Номер дома'
    AddressLine:
      type: string
      maxLength: 70
      minLength: 1
      description: 'Информация, которая позволяет найти и идентифицирует конкретный адрес в соответствии с данными почтовых служб, в произвольном текстовом формате'
    OBDataDomesticResp:
      type: object
      required:
        - Initiation
        - domesticConsentId
        - link
        - creationDateTime
        - status
        - statusUpdateDateTime
      properties:
        domesticConsentId:
          $ref: '#/components/schemas/DomesticConsentId'
        link:
          $ref: '#/components/schemas/Link'
        creationDateTime:
          $ref: '#/components/schemas/CreationDateTime'
        status:
          $ref: '#/components/schemas/PaymentConsentStatus'
        statusUpdateDateTime:
          $ref: '#/components/schemas/StatusUpdateDateTime'
        cutOffDateTime:
          $ref: '#/components/schemas/CutOffDateTime'
        expectedExecutionDate:
          $ref: '#/components/schemas/ExpectedExecutionDate'
        expectedSettlementDate:
          $ref: '#/components/schemas/ExpectedSettlementDate'
        Initiation:
          $ref: '#/components/schemas/OBInitiationDomestic'
        Authorisation:
          $ref: '#/components/schemas/OBAuthorisation'
        Charge:
          $ref: '#/components/schemas/OBCharge'
    OBDataVRPResp:
      type: object
      required:
        - ControlParameters
        - Initiation
        - VRPConsentId
        - link
        - creationDateTime
        - status
        - statusUpdateDateTime
      properties:
        VRPConsentId:
          $ref: '#/components/schemas/VRPConsentId'
        link:
          $ref: '#/components/schemas/Link'
        creationDateTime:
          $ref: '#/components/schemas/CreationDateTime'
        status:
          $ref: '#/components/schemas/PaymentConsentStatus'
        statusUpdateDateTime:
          $ref: '#/components/schemas/StatusUpdateDateTime'
        ControlParameters:
          $ref: '#/components/schemas/OBControlParameters'
        Initiation:
          $ref: '#/components/schemas/OBInitiationVRP'
    OBDataReqResp:
      type: object
      required:
        - Initiation
        - requirementConsentId
        - link
        - creationDateTime
        - status
        - statusUpdateDateTime
      properties:
        requirementConsentId:
          $ref: '#/components/schemas/RequirementConsentId'
        link:
          $ref: '#/components/schemas/Link'
        creationDateTime:
          $ref: '#/components/schemas/CreationDateTime'
        status:
          $ref: '#/components/schemas/PaymentConsentStatus'
        statusUpdateDateTime:
          $ref: '#/components/schemas/StatusUpdateDateTime'
        cutOffDateTime:
          $ref: '#/components/schemas/CutOffDateTime'
        expectedExecutionDate:
          $ref: '#/components/schemas/ExpectedExecutionDate'
        expectedSettlementDate:
          $ref: '#/components/schemas/ExpectedSettlementDate'
        Initiation:
          $ref: '#/components/schemas/OBInitiationReq'
        Authorisation:
          $ref: '#/components/schemas/OBAuthorisation'
        Charge:
          $ref: '#/components/schemas/OBCharge'
    OBDataListAccountsResp:
      type: object
      required:
        - Initiation
        - listAccountsConsentId
        - link
        - creationDateTime
        - status
        - statusUpdateDateTime
      properties:
        listAccountsConsentId:
          $ref: '#/components/schemas/ListAccountsConsentId'
        link:
          $ref: '#/components/schemas/Link'
        creationDateTime:
          $ref: '#/components/schemas/CreationDateTime'
        status:
          $ref: '#/components/schemas/PaymentConsentStatus'
        statusUpdateDateTime:
          $ref: '#/components/schemas/StatusUpdateDateTime'
        cutOffDateTime:
          $ref: '#/components/schemas/CutOffDateTime'
        expectedExecutionDate:
          $ref: '#/components/schemas/ExpectedExecutionDate'
        expectedSettlementDate:
          $ref: '#/components/schemas/ExpectedSettlementDate'
        Initiation:
          $ref: '#/components/schemas/OBInitiationListAccounts'
        Authorisation:
          $ref: '#/components/schemas/OBAuthorisation'
        Charge:
          $ref: '#/components/schemas/OBCharge'
    OBDataListPassportsResp:
      type: object
      required:
        - Initiation
        - listPassportsConsentId
        - link
        - creationDateTime
        - status
        - statusUpdateDateTime
      properties:
        listPassportsConsentId:
          $ref: '#/components/schemas/ListPassportsConsentId'
        link:
          $ref: '#/components/schemas/Link'
        creationDateTime:
          $ref: '#/components/schemas/CreationDateTime'
        status:
          $ref: '#/components/schemas/PaymentConsentStatus'
        statusUpdateDateTime:
          $ref: '#/components/schemas/StatusUpdateDateTime'
        cutOffDateTime:
          $ref: '#/components/schemas/CutOffDateTime'
        expectedExecutionDate:
          $ref: '#/components/schemas/ExpectedExecutionDate'
        expectedSettlementDate:
          $ref: '#/components/schemas/ExpectedSettlementDate'
        Initiation:
          $ref: '#/components/schemas/OBInitiationListPassports'
        Authorisation:
          $ref: '#/components/schemas/OBAuthorisation'
        Charge:
          $ref: '#/components/schemas/OBCharge'
    OBDataDomesticResp1:
      type: object
      required:
        - Initiation
        - domesticConsentId
        - link
        - creationDateTime
        - status
        - statusUpdateDateTime
      properties:
        domesticConsentId:
          $ref: '#/components/schemas/DomesticConsentId'
        link:
          $ref: '#/components/schemas/Link'
        creationDateTime:
          $ref: '#/components/schemas/CreationDateTime'
        status:
          $ref: '#/components/schemas/PaymentConsentStatus'
        statusUpdateDateTime:
          $ref: '#/components/schemas/StatusUpdateDateTime'
        cutOffDateTime:
          $ref: '#/components/schemas/CutOffDateTime'
        expectedExecutionDate:
          $ref: '#/components/schemas/ExpectedExecutionDate'
        expectedSettlementDate:
          $ref: '#/components/schemas/ExpectedSettlementDate'
        Initiation:
          $ref: '#/components/schemas/OBInitiationDomestic'
        Authorisation:
          $ref: '#/components/schemas/OBAuthorisation'
        Charge:
          $ref: '#/components/schemas/OBCharge'
    OBDataVRPResp1:
      type: object
      required:
        - ControlParameters
        - Initiation
        - VRPConsentId
        - link
        - creationDateTime
        - status
        - statusUpdateDateTime
      properties:
        VRPConsentId:
          $ref: '#/components/schemas/VRPConsentId'
        link:
          $ref: '#/components/schemas/Link'
        creationDateTime:
          $ref: '#/components/schemas/CreationDateTime'
        status:
          $ref: '#/components/schemas/PaymentConsentStatus'
        statusUpdateDateTime:
          $ref: '#/components/schemas/StatusUpdateDateTime'
        ControlParameters:
          $ref: '#/components/schemas/OBControlParameters'
        Initiation:
          $ref: '#/components/schemas/OBInitiationDomestic'
    OBDataReqResp1:
      type: object
      required:
        - Initiation
        - requirementConsentId
        - link
        - creationDateTime
        - status
        - statusUpdateDateTime
      properties:
        requirementConsentId:
          $ref: '#/components/schemas/RequirementConsentId'
        link:
          $ref: '#/components/schemas/Link'
        creationDateTime:
          $ref: '#/components/schemas/CreationDateTime'
        status:
          $ref: '#/components/schemas/PaymentConsentStatus'
        statusUpdateDateTime:
          $ref: '#/components/schemas/StatusUpdateDateTime'
        cutOffDateTime:
          $ref: '#/components/schemas/CutOffDateTime'
        expectedExecutionDate:
          $ref: '#/components/schemas/ExpectedExecutionDate'
        expectedSettlementDate:
          $ref: '#/components/schemas/ExpectedSettlementDate'
        Initiation:
          $ref: '#/components/schemas/OBInitiationReq'
        Authorisation:
          $ref: '#/components/schemas/OBAuthorisation'
        Charge:
          $ref: '#/components/schemas/OBCharge'
    OBDataListAccountsResp1:
      type: object
      required:
        - Initiation
        - listAccountsConsentId
        - link
        - creationDateTime
        - status
        - statusUpdateDateTime
      properties:
        listAccountsConsentId:
          $ref: '#/components/schemas/ListAccountsConsentId'
        link:
          $ref: '#/components/schemas/Link'
        creationDateTime:
          $ref: '#/components/schemas/CreationDateTime'
        status:
          $ref: '#/components/schemas/PaymentConsentStatus'
        statusUpdateDateTime:
          $ref: '#/components/schemas/StatusUpdateDateTime'
        cutOffDateTime:
          $ref: '#/components/schemas/CutOffDateTime'
        expectedExecutionDate:
          $ref: '#/components/schemas/ExpectedExecutionDate'
        expectedSettlementDate:
          $ref: '#/components/schemas/ExpectedSettlementDate'
        Initiation:
          $ref: '#/components/schemas/OBInitiationListAccounts'
        Authorisation:
          $ref: '#/components/schemas/OBAuthorisation'
        Charge:
          $ref: '#/components/schemas/OBCharge'
    OBDataListPassportsResp1:
      type: object
      required:
        - Initiation
        - listPassportsConsentId
        - link
        - creationDateTime
        - status
        - statusUpdateDateTime
      properties:
        listAccountsConsentId:
          $ref: '#/components/schemas/ListAccountsConsentId'
        link:
          $ref: '#/components/schemas/Link'
        creationDateTime:
          $ref: '#/components/schemas/CreationDateTime'
        status:
          $ref: '#/components/schemas/PaymentConsentStatus'
        statusUpdateDateTime:
          $ref: '#/components/schemas/StatusUpdateDateTime'
        cutOffDateTime:
          $ref: '#/components/schemas/CutOffDateTime'
        expectedExecutionDate:
          $ref: '#/components/schemas/ExpectedExecutionDate'
        expectedSettlementDate:
          $ref: '#/components/schemas/ExpectedSettlementDate'
        Initiation:
          $ref: '#/components/schemas/OBInitiationListPassports'
        Authorisation:
          $ref: '#/components/schemas/OBAuthorisation'
        Charge:
          $ref: '#/components/schemas/OBCharge'
    OBDataTax:
      type: object
      required:
        - Initiation
        - domesticTaxConsentId
        - link
        - creationDateTime
        - status
        - statusUpdateDateTime
      properties:
        domesticTaxConsentId:
          $ref: '#/components/schemas/DomesticTaxConsentId'
        link:
          $ref: '#/components/schemas/Link'
        creationDateTime:
          $ref: '#/components/schemas/CreationDateTime'
        status:
          $ref: '#/components/schemas/PaymentConsentStatus'
        statusUpdateDateTime:
          $ref: '#/components/schemas/StatusUpdateDateTime'
        cutOffDateTime:
          $ref: '#/components/schemas/CutOffDateTime'
        expectedExecutionDate:
          $ref: '#/components/schemas/ExpectedExecutionDate'
        expectedSettlementDate:
          $ref: '#/components/schemas/ExpectedSettlementDate'
        Initiation:
          $ref: '#/components/schemas/OBInitiationTaxDomestic'
        Authorisation:
          $ref: '#/components/schemas/OBAuthorisation'
    OBDataTaxReq1:
      type: object
      required:
        - Initiation
        - taxRequirementConsentId
        - link
        - creationDateTime
        - status
        - statusUpdateDateTime
      properties:
        taxRequirementConsentId:
          $ref: '#/components/schemas/TaxRequirementConsentId'
        link:
          $ref: '#/components/schemas/Link'
        creationDateTime:
          $ref: '#/components/schemas/CreationDateTime'
        status:
          $ref: '#/components/schemas/PaymentConsentStatus'
        statusUpdateDateTime:
          $ref: '#/components/schemas/StatusUpdateDateTime'
        cutOffDateTime:
          $ref: '#/components/schemas/CutOffDateTime'
        expectedExecutionDate:
          $ref: '#/components/schemas/ExpectedExecutionDate'
        expectedSettlementDate:
          $ref: '#/components/schemas/ExpectedSettlementDate'
        Initiation:
          $ref: '#/components/schemas/OBInitiationTaxReq'
        Authorisation:
          $ref: '#/components/schemas/OBAuthorisation'
    OBDataTax1:
      type: object
      required:
        - Initiation
        - domesticTaxConsentId
        - link
        - creationDateTime
        - status
        - statusUpdateDateTime
      properties:
        domesticTaxConsentId:
          $ref: '#/components/schemas/DomesticTaxConsentId'
        link:
          $ref: '#/components/schemas/Link'
        creationDateTime:
          $ref: '#/components/schemas/CreationDateTime'
        status:
          $ref: '#/components/schemas/PaymentConsentStatus'
        statusUpdateDateTime:
          $ref: '#/components/schemas/StatusUpdateDateTime'
        cutOffDateTime:
          $ref: '#/components/schemas/CutOffDateTime'
        expectedExecutionDate:
          $ref: '#/components/schemas/ExpectedExecutionDate'
        expectedSettlementDate:
          $ref: '#/components/schemas/ExpectedSettlementDate'
        Initiation:
          $ref: '#/components/schemas/OBInitiationTaxDomestic'
        Authorisation:
          $ref: '#/components/schemas/OBAuthorisation'
    OBDataTaxReq2:
      type: object
      required:
        - Initiation
        - taxRequirementConsentId
        - link
        - creationDateTime
        - status
        - statusUpdateDateTime
      properties:
        taxRequirementConsentId:
          $ref: '#/components/schemas/TaxRequirementConsentId'
        link:
          $ref: '#/components/schemas/Link'
        creationDateTime:
          $ref: '#/components/schemas/CreationDateTime'
        status:
          $ref: '#/components/schemas/PaymentConsentStatus'
        statusUpdateDateTime:
          $ref: '#/components/schemas/StatusUpdateDateTime'
        cutOffDateTime:
          $ref: '#/components/schemas/CutOffDateTime'
        expectedExecutionDate:
          $ref: '#/components/schemas/ExpectedExecutionDate'
        expectedSettlementDate:
          $ref: '#/components/schemas/ExpectedSettlementDate'
        Initiation:
          $ref: '#/components/schemas/OBInitiationTaxReq'
        Authorisation:
          $ref: '#/components/schemas/OBAuthorisation'
    OBAuthorisation:
      type: object
      required:
        - authorizationType
      properties:
        authorizationType:
          $ref: '#/components/schemas/AuthorizationType'
        competitionDateTime:
          $ref: '#/components/schemas/CompetitionDateTime'
    AuthorizationType:
      type: string
      maxLength: 16
      minLength: 1
      description: 'Тип запроса авторизации платежного указания от Пользователя API'
      example: 'Single'
    CompetitionDateTime:
      type: string
      format: date-time
      description: 'Дата и время, до которого авторизация должна завершится'
      example: '2021-04-19T19:55:37+03:00'
    OBMultiAuthorisation:
      type: object
      required:
        - status
      properties:
        status:
          $ref: '#/components/schemas/Status1'
        numberRequired:
          $ref: '#/components/schemas/NumberRequired'
        numberReceived:
          $ref: '#/components/schemas/NumberReceived'
        lastUpdateDateTime:
          $ref: '#/components/schemas/LastUpdateDateTime'
        expirationDateTime:
          $ref: '#/components/schemas/ExpirationDateTime'
    Status1:
      type: string
      maxLength: 35
      minLength: 1
      enum:
        - Authorised
        - AwaitingFurtherAuthorisation
        - Rejected
      description: 'Статус авторизации'
      example: 'Authorised'
    Link:
      type: string
      format: url
      maxLength: 140
      minLength: 1
      description: 'Ссылка на платежное указание'
      example: 'https://sdbo.bank.by/domesticConsentId/3cgfc598-r5gh-9758-b358-587a5479610s/'
    NumberRequired:
      type: number
      minimum: 1
      maximum: 5
      description: 'Количество авторизаций, необходимых для инициирования проведения платежа'
      example: '1'
    NumberReceived:
      type: number
      minimum: 1
      maximum: 5
      description: 'Количество полученных авторизаций'
      example: '1'
    LastUpdateDateTime:
      type: string
      format: date-time
      description: 'Дата и время последнего обновления авторизационного потока'
      example: '2021-04-19T19:46:37+03:00'
    ExpirationDateTime:
      type: string
      format: date-time
      description: 'Дата и время, до которого авторизация должна быть завершена'
      example: '2021-04-19T19:55:37+03:00'
    OBEnclosedFile:
      maxItems: 2
      type: array
      items:
        required:
          - name
          - identification
          - fileName
        properties:
          name:
            $ref: '#/components/schemas/NameEnclosedFile'
          identification:
            $ref: '#/components/schemas/IdentificationReq'
          format:
            $ref: '#/components/schemas/Format'
          fileName:
            $ref: '#/components/schemas/FileName'
          issueDate:
            $ref: '#/components/schemas/IssueDate'
          digitalSignature:
            $ref: '#/components/schemas/DigitalSignature'
          enclosure:
            $ref: '#/components/schemas/Enclosure'
    NameEnclosedFile:
      type: string
      maxLength: 140
      minLength: 1
      description: 'Наименование документа или операции'
      example: 'Договор на оплату продукции'
    IdentificationReq:
      type: string
      maxLength: 4
      minLength: 1
      description: 'Идентификация приложенного файла. Заполняется согласно справочнику N101'
      example: 'CMCN'
    Format:
      type: string
      maxLength: 35
      minLength: 1
      description: 'Формат приложенного документа или файла, код или в собственной форме'
      example: 'PDF'
    FileName:
      type: string
      maxLength: 35
      minLength: 1
      description: 'Техническое наименование файла'
      example: 'Договор на оплату продукции.pdf'
    IssueDate:
      type: string
      format: date
      description: 'Дата оформления приложенного документа (файла)'
      example: '2021-02-26'
    DigitalSignature:
      type: string
      description: 'Цифровая подпись приложенного бинарного файла'
      example: '16***6584dfs**n644***8'
    Enclosure:
      type: string
      description: 'Бинарный файл, представляющий собой приложенный документ или образец.
Max10MbBinary (двоичный файл, представляющий вложенный документ)'
      example: '*содержимое файла*'
    OBEnclosedFileTax:
      maxItems: 2
      type: array
      items:
        required:
          - name
          - identification
          - fileName
        properties:
          name:
            $ref: '#/components/schemas/NameEnclosedFileTax'
          identification:
            $ref: '#/components/schemas/IdentificationReqTax'
          format:
            $ref: '#/components/schemas/FormatTax'
          fileName:
            $ref: '#/components/schemas/FileNameTax'
          issueDate:
            $ref: '#/components/schemas/IssueDate'
          digitalSignature:
            $ref: '#/components/schemas/DigitalSignature'
          enclosure:
            $ref: '#/components/schemas/EnclosureTax'
    NameEnclosedFileTax:
      type: string
      maxLength: 140
      minLength: 1
      description: 'Наименование документа или операции'
      example: 'Налоговое уведомление'
    IdentificationReqTax:
      type: string
      maxLength: 4
      minLength: 1
      description: 'Идентификация приложенного файла. Заполняется согласно справочнику N101'
      example: 'SBIN'
    FormatTax:
      type: string
      maxLength: 35
      minLength: 1
      description: 'Формат приложенного документа или файла, код или в собственной форме'
      example: 'TXT'
    FileNameTax:
      type: string
      maxLength: 35
      minLength: 1
      description: 'Техническое наименование файла'
      example: 'Уведомление об оплате налога на прибыль.txt'
    EnclosureTax:
      type: string
      description: 'Бинарный файл, представляющий собой приложенный документ или образец.
	Max10MbBinary (двоичный файл, представляющий вложенный документ)'
      example: '*содержимое файла*'
    OBCharge:
      type: array
      items:
        required:
          - chargeBearer
          - type
          - chargeAmount
          - currency
        type: object
        properties:
          chargeBearer:
            $ref: '#/components/schemas/ChargeBearer'
          type:
            $ref: '#/components/schemas/Type'
          chargeAmount:
            $ref: '#/components/schemas/ChargeAmount'
          currency:
            $ref: '#/components/schemas/Currency'
    ChargeBearer:
      type: string
      maxLength: 16
      minLength: 1
      description: 'Cторона, которая будет уплачивать комиссии за обработку платежной транзакции. Справочник ISO N100 (Справочник видов расходов по переводу (репозитарий ISO))'
      example: 'DEBT'
    Type:
      type: string
      maxLength: 16
      minLength: 1
      description: 'Тип комиссии за проведение платежа. Согласно международного ISO 20022 справочника E026'
      example: 'COMM'
    ChargeAmount:
      type: string
      pattern: '^[0-9]{1,13}$|^[0-9]{1,13}.[0-9]{1,5}$|^[0-9]{1,13}.[0-9]{1,2}$'
      description: 'Сумма комиссии за проведение платежа'
      example: '2.00'
    Currency:
      type: string
      pattern: '^[A-Z]{3}$'
      description: 'Валюта суммы денежных средств'
      example: 'BYN'
    DomesticConsentId:
      type: string
      maxLength: 35
      minLength: 1
      description: 'Идентификатор платежного укзаания на инициирование платежного поручения'
      example: '3cgfc598-r5gh-9758-b358-587a5479610s'
    VRPConsentId:
      type: string
      maxLength: 35
      minLength: 1
      description: 'Идентификатор платежного укзаания на инициирование рекуррентного платежа'
      example: '3cgfc598-r5gh-9758-b358-587a5479610s'
    RequirementConsentId:
      type: string
      maxLength: 35
      minLength: 1
      description: 'Идентификатор платежного указания на выставление платежного требования'
      example: '3cgfc598-r5gh-9758-b358-587a5479610s'
    ListAccountsConsentId:
      type: string
      maxLength: 35
      minLength: 1
      description: 'Идентификатор платежного укзаания на инициирование платежного поручения со списком счетов физических лиц'
      example: '3cgfc598-r5gh-9758-b358-587a5479610s'
    ListPassportsConsentId:
      type: string
      maxLength: 35
      minLength: 1
      description: 'Идентификатор платежного укзаания на инициирование платежного поручения со списком без открытия счетов'
      example: '3cgfc598-r5gh-9758-b358-587a5479610s'
    DomesticTaxConsentId:
      type: string
      maxLength: 35
      minLength: 1
      description: 'Идентификатор платежного указания на инициирование налогового платежа'
      example: '3cgfc598-r5gh-9758-b358-587a5678914s'
    DomesticId:
      type: string
      maxLength: 35
      minLength: 1
      description: 'Идентификатор платежного поручения'
      example: '9856278'
    VRPId:
      type: string
      maxLength: 35
      minLength: 1
      description: 'Идентификатор платежного поручения'
      example: '9856278'
    TaxRequirementConsentId:
      type: string
      maxLength: 35
      minLength: 1
      description: 'Идентификатор платежного указания на выставление платежного требования на уплату налогов (других платежей в бюджет)'
      example: '3cgfc598-r5gh-9758-b358-587a5678914s'
    TaxRequirementId:
      type: string
      maxLength: 35
      minLength: 1
      description: 'Идентификатор платежного требования на уплату налогов (других платежей в бюджет)'
      example: '9856278'
    RequirementId:
      type: string
      maxLength: 35
      minLength: 1
      description: 'Идентификатор платежного требования'
      example: '9856278'
    ListAccountsId:
      type: string
      maxLength: 35
      minLength: 1
      description: 'Идентификатор платежного поручения со списком счетов'
      example: '123456789'
    ListPassportsId:
      type: string
      maxLength: 35
      minLength: 1
      description: 'Идентификатор платежного поручения со списком без открытия счетов'
      example: '123456789'
    DomesticTaxId:
      type: string
      maxLength: 35
      minLength: 1
      description: 'Идентификатор налогового поручения'
      example: '5798542'
    CreationDateTime:
      type: string
      format: date-time
      description: 'Дата и время создания платежного указания'
      example: '2021-04-19T19:43:31+03:00'
    PaymentConsentStatus:
      type: string
      maxLength: 35
      minLength: 1
      description: 'Текущий статус платежного указания на проведение платежа'
      enum:
        - Authorised
        - AwaitingAuthorisation
        - Consumed
        - Rejected
      example: 'AwaitingAuthorisation'
    StatusUpdateDateTime:
      type: string
      format: date-time
      description: 'Дата и время обновления статуса платежного указания на проведение платежа'
      example: '2021-04-19T19:43:31+03:00'
    StatusUpdateDateTime1:
      type: string
      format: date-time
      description: 'Дата и время обновления статуса платежа'
      example: '2021-04-19T19:55:37+03:00'
    StatusUpdateDateTime1Get:
      type: string
      format: date-time
      description: 'Дата и время обновления статуса платежа'
      example: '2021-04-20T10:46:37+03:00'
    CutOffDateTime:
      type: string
      format: date-time
      description: 'Дата и время, до которого работает платежная система'
      example: '2021-04-19T16:30:00+03:00'
    ExpectedExecutionDate:
      type: string
      format: date
      description: 'Ожидаемая дата исполнения платежа, списания средств со счета плательщика'
      example: '2021-04-20'
    ExpectedSettlementDate:
      type: string
      format: date
      description: 'Ожидаемая дата расчета платежа, зачисления средств на счет получателя'
      example: '2021-04-20'
    OBSupplementaryData:
      type: object
    OBListPassportData:
      minItems: 1
      type: array
      required:
        - name
        - identification
        - issuer
        - amount
      items:
        properties:
          name:
            $ref: '#/components/schemas/NameList'
          identification:
            $ref: '#/components/schemas/Identification'
          issuer:
            $ref: '#/components/schemas/Issuer'
          amount:
            $ref: '#/components/schemas/AmountList'
        example:
          - name: 'МИХАЛЮК ЛЮДМИЛА БОРИСОВНА'
            identification: '06.20150901.HI0073786'
            issuer: 'УВД БОБРУЙСКОГО ГОРИСПОЛКОМА'
            amount: '1450.00'
          - name: 'ХАЙДАРОВ АЗИС'
            identification: '06.20150831.HI0073714'
            issuer: 'ЛЕНИНСКИЙ РОВД Г. МОГИЛЕВА'
            amount: '1348.00'
    Identification:
      type: string
      maxLength: 35
      minLength: 1
      pattern: '^[0-9]{2}.[0-9]{8}.[A-Z0-9]{1,23}$'
      description: 'Уникальная и однозначная идентификация физического лица, где [0-9]{2} – код вида документа, удостоверяющего личность, согласно справочнику N023 ISO 20022 [0-9]{8} – дата выдачи документа, удостоверяющего личность, в формате YYYYММDD (год, месяц, день) [A-Z0-9]{1,23} – серия и номер документа, удостоверяющего личность'
    Issuer:
      type: string
      maxLength: 35
      minLength: 1
      description: 'Наименование или код органа, выдавшего документ'
    OBListAccounts:
      minItems: 1
      type: array
      required:
        - name
        - iban
        - amount
      items:
        properties:
          name:
            $ref: '#/components/schemas/NameList'
          iban:
            $ref: '#/components/schemas/Iban'
          amount:
            $ref: '#/components/schemas/AmountList'
      example:
        - name: 'СУРГАНОВ МИХАИЛ ГРИГОРЬЕВИЧ'
          iban: 'BY21BELB30141044310010226000'
          amount: '1450.00'
        - name: 'ГАВРОВ ДМИТРИЙ ИВАНОВИЧ'
          iban: 'BY59BELB30141044210010226000'
          amount: '1348.00'
    Iban:
      type: string
      pattern: '^[A-Z]{2}[0-9]{2}[A-Z0-9]{4}[0-9]{4}[A-Z0-9]{16}$'
      description: 'Международный номер банковского счета физического лица'
    NameList:
      type: string
      maxLength: 140
      minLength: 1
      description: 'Полное наименование физического лица (ФИО)'
    AmountList:
      type: string
      pattern: '^[0-9]{1,13}$|^[0-9]{1,13}.[0-9]{1,5}$|^[0-9]{1,13}.[0-9]{1,2}$'
      description: 'Сумма денежных средств, которая должна быть переведена от плательщика конечному получателю, выраженная в валюте, определенной инициирующей стороной. '
    InstructionIdentification:
      type: string
      maxLength: 35
      minLength: 1
      description: 'Уникальный идентификатор платежной инструкции, присвоенный инструктирующей стороной для однозначной идентификации инструкции инструктируемой стороной. Присваивается первым банком в цепочке и передается без изменений'
      example: '795ABSB201906250257520000926100'
    EndToEndIdentification:
      type: string
      maxLength: 35
      minLength: 1
      pattern: '^[0-9]{2}.[0-9]{8}.[A-Za-z0-9]{1,16}(.[0-9]{1,6})?$'
      description: 'Сквозной идентификатор, присвоенный инициирующей стороной для однозначной идентификации транзакции. Эта идентификация передается без изменения по всей сквозной цепочке. Присваивается инициатором перевода или первым банком в цепочке и передается без изменений. [0-9]{2} – код вида платежного документа согласно справочнику N016'
      example: '01.20210418.693.1'
    LocalInstrument:
      type: string
      maxLength: 35
      minLength: 1
      description: 'Элемент используется для указания местного инструмента, варианта локального клиринга и (или) для дополнительного описания сервиса или уровня обслуживания'
      example: 'BY.NBRB.BISS.NORMAL'
    CategoryPurposeCode:
      type: string
      pattern: '^[A-Z0-9]{4}$'
      description: 'Код категории назначения платежа. Согласно справочнику E004 бел ISO 20022'
      example: 'SUPP'
    CategoryPurposeCodeList:
      type: string
      pattern: '^[A-Z0-9]{4}$'
      description: 'Код категории назначения платежа. Согласно справочнику E004 бел ISO 20022'
      example: 'SALA'
    CategoryPurposeCodeListPassport:
      type: string
      pattern: '^[A-Z0-9]{4}$'
      description: 'Код категории назначения платежа. Согласно справочнику E004 бел ISO 20022'
      example: 'OTHR'
    CategoryPurposeCodeTax:
      type: string
      pattern: '^[A-Z0-9]{4}$'
      description: 'Код категории назначения платежа. Согласно справочнику E004 бел ISO 20022'
      example: 'TAXS'
    Amount:
      type: string
      pattern: '^[0-9]{1,13}$|^[0-9]{1,13}.[0-9]{1,2}$|^[0-9]{1,13}.[0-9]{1,2}$'
      description: 'Сумма денежных средств, которая должна быть переведена от плательщика бенефициару до вычета комиссий, выраженная в валюте, определенной инициирующей стороной. '
      example: '2800.00'
    RequestedExecutionDate:
      type: string
      format: date
      description: 'Дата, в которую денежные средства должны быть списаны со счета(-ов) плательщика'
      example: '2021-04-20'
    ProprietaryPurpose:
      type: string
      maxLength: 35
      minLength: 1
      pattern: '^[0-1]{1}[A-Z0-9]{5}(.[0-9]{2})$'
      description: 'Код назначения платежа и очередность. [0-1]{1} – признак платежа, принимающий значения: 1 – прямой платеж или 0 – возврат платежа; [A-Z0-9]{5} – код назначения платежа согласно справочнику N099; [0-9]{2} – код очередности исполнения платежа согласно справочнику N034'
      example: '130110.22'
    ProprietaryPurposeList:
      type: string
      maxLength: 35
      minLength: 1
      pattern: '^[0-1]{1}[A-Z0-9]{5}(.[0-9]{2})$'
      description: 'Код назначения платежа и очередность. [0-1]{1} – признак платежа, принимающий значения: 1 – прямой платеж или 0 – возврат платежа; [A-Z0-9]{5} – код назначения платежа согласно справочнику N099; [0-9]{2} – код очередности исполнения платежа согласно справочнику N034'
      example: '130110.22'
    ProprietaryPurposeListPassport:
      type: string
      maxLength: 35
      minLength: 1
      pattern: '^[0-1]{1}[A-Z0-9]{5}(.[0-9]{2})$'
      description: 'Код назначения платежа и очередность. [0-1]{1} – признак платежа, принимающий значения: 1 – прямой платеж или 0 – возврат платежа; [A-Z0-9]{5} – код назначения платежа согласно справочнику N099; [0-9]{2} – код очередности исполнения платежа согласно справочнику N034'
      example: '141610.22'
    ProprietaryPurposeTax:
      type: string
      maxLength: 35
      minLength: 1
      pattern: '^[0-1]{1}[A-Z0-9]{5}(.[0-9]{2})$'
      description: 'Код назначения платежа и очередность. [0-1]{1} – признак платежа, принимающий значения: 1 – прямой платеж или 0 – возврат платежа; [A-Z0-9]{5} – код назначения платежа согласно справочнику N099; [0-9]{2} – код очередности исполнения платежа согласно справочнику N034'
      example: '190110.22'
    OBRemmitanceInformation:
      type: object
      required:
        - categoryPurposeCode
      properties:
        categoryPurposeCode:
          $ref: '#/components/schemas/CategoryPurposeCode'
        proprietaryPurpose:
          $ref: '#/components/schemas/ProprietaryPurpose'
        unstructured:
          $ref: '#/components/schemas/Unstructured'
        structured:
          $ref: '#/components/schemas/OBStructured'
    OBRemmitanceInformationList:
      type: object
      required:
        - categoryPurposeCode
      properties:
        categoryPurposeCode:
          $ref: '#/components/schemas/CategoryPurposeCodeList'
        proprietaryPurpose:
          $ref: '#/components/schemas/ProprietaryPurposeList'
        unstructured:
          $ref: '#/components/schemas/UnstructuredList'
        structured:
          $ref: '#/components/schemas/OBStructuredList'
    OBRemmitanceInformationListPassport:
      type: object
      required:
        - categoryPurposeCode
      properties:
        categoryPurposeCode:
          $ref: '#/components/schemas/CategoryPurposeCodeListPassport'
        proprietaryPurpose:
          $ref: '#/components/schemas/ProprietaryPurposeListPassport'
        unstructured:
          $ref: '#/components/schemas/UnstructuredListPassport'
        structured:
          $ref: '#/components/schemas/OBStructuredList'
    OBRemmitanceInformationTax:
      type: object
      required:
        - categoryPurposeCode
      properties:
        categoryPurposeCode:
          $ref: '#/components/schemas/CategoryPurposeCodeTax'
        proprietaryPurpose:
          $ref: '#/components/schemas/ProprietaryPurposeTax'
        unstructured:
          $ref: '#/components/schemas/UnstructuredTax'
        structured:
          $ref: '#/components/schemas/OBStructuredTax'
    OBTaxRemmitance:
      type: object
      required:
        - category
        - period
        - fromDate
        - toDate
        - relatedDate
      properties:
        referenceNumber:
          $ref: '#/components/schemas/ReferenceNumber'
        date:
          $ref: '#/components/schemas/Date'
        category:
          $ref: '#/components/schemas/Category'
        year:
          $ref: '#/components/schemas/Year'
        type:
          $ref: '#/components/schemas/TypeTax'
        period:
          $ref: '#/components/schemas/Period'
        relatedDate:
          $ref: '#/components/schemas/RelatedDate'
        fromDate:
          $ref: '#/components/schemas/FromDate'
        toDate:
          $ref: '#/components/schemas/ToDate'
        rate:
          $ref: '#/components/schemas/Rate'
        taxableBaseAmount:
          $ref: '#/components/schemas/TaxableBaseAmount'
        additionalInformation:
          $ref: '#/components/schemas/AdditionalInformation'
        ultimateDebtor:
          $ref: '#/components/schemas/OBUltimateDebtor'
    ReferenceNumber:
      type: string
      maxLength: 35
      minLength: 1
      description: 'Информация о референсе налога, специфичная для налогового органа'
      example: '9876545'
    Date:
      type: string
      format: date
      description: 'Дата, на которую налог должен быть уплачен'
      example: '2021-04-21'
    Category:
      type: string
      maxLength: 35
      minLength: 1
      pattern: '^[0-9]{5}$'
      description: 'Определяет код налога, опубликованный налоговым органом. В первой позиции элемента данных указывается код вида платежа из справочника N085, во второй-пятой позициях – коды платежей в бюджет согласно справочнику N011'
      example: '10202'
    Year:
      type: string
      format: date
      description: 'Год уплаты налога'
      example: '2021'
    TypeTax:
      type: string
      maxLength: 35
      minLength: 1
      pattern: '^[A-Z0-9]{4}$'
      description: 'Период уплаты налогов, согласно справочника N102'
      example: 'MM03'
    Period:
      type: string
      maxLength: 35
      minLength: 1
      pattern: '^[A-Z0-9]{4}$'
      description: 'Период уплаты налогов, согласно справочника N102'
      example: 'MM03'
    FromDate:
      type: string
      format: date
      description: 'Начальная дата временного интервала, за который представляется налоговый отчет'
      example: '2021-03-01'
    ToDate:
      type: string
      format: date
      description: 'Конечная дата временного интервала, за который представляется налоговый отчет'
      example: '2021-03-31'
    Rate:
      type: string
      pattern: '^[0-9]{1,11}$|^[0-9]{1,11}.[0-9]{1,10}$'
      description: 'Ставка, используемая для исчисления налога'
      example: '0.1800000000'
    TaxableBaseAmount:
      type: string
      pattern: '^[0-9]{1,16}$|^[0-9]{1,16}.[0-9]{1,2}$'
      description: 'Сумма денежных средств, исходя из которой рассчитывается сумма налога'
      example: '15556.00'
    AdditionalInformation:
      type: string
      maxLength: 140
      minLength: 1
      description: 'Дополнительная информация'
    OBUltimateDebtor:
      type: object
      required:
        - taxIdentification
        - name
      properties:
        taxIdentification:
          $ref: '#/components/schemas/TaxIdentification'
        name:
          $ref: '#/components/schemas/Name'
      description: 'Фактическая сторона, которая должна денежную сумму кредитору, в данном случае - налоговому органу'
    Name:
      type: string
      maxLength: 140
      minLength: 1
      description: 'Дополнительная информацияНаименование плательщика или уполномоченного представителя плательщика'
    TaxIdentification:
      type: string
      maxLength: 35
      minLength: 1
      pattern: '^[A-Z]{3}[A-Z0-9]{9}$'
      description: 'Идентификационный налоговый номер фактического плательщика '
    Unstructured:
      type: string
      maxLength: 140
      minLength: 1
      description: 'Информация, позволяющая сопоставлять/сверять записи с позициями, для которых предназначен платеж, такими, как коммерческие счета в системе дебиторской задолженности, в неструктурированной форме'
      example: 'Перечисление денежных средств за продукцию'
    UnstructuredList:
      type: string
      maxLength: 140
      minLength: 1
      description: 'Информация, позволяющая сопоставлять/сверять записи с позициями, для которых предназначен платеж, такими, как коммерческие счета в системе дебиторской задолженности, в неструктурированной форме'
      example: 'Перечисление заработной платы на счета физических лиц'
    UnstructuredListPassport:
      type: string
      maxLength: 140
      minLength: 1
      description: 'Информация, позволяющая сопоставлять/сверять записи с позициями, для которых предназначен платеж, такими, как коммерческие счета в системе дебиторской задолженности, в неструктурированной форме'
      example: 'Перечисление страховых выплат физическим лицам'
    UnstructuredTax:
      type: string
      maxLength: 140
      minLength: 1
      description: 'Информация, позволяющая сопоставлять/сверять записи с позициями, для которых предназначен платеж, такими, как коммерческие счета в системе дебиторской задолженности, в неструктурированной форме'
      example: 'Перечисление налога на прибыль за март 2021'
    OBStructured:
      maxItems: 5
      type: array
      items:
        required:
          - number
          - relatedDate1
        type: object
        properties:
          referenceProprietary:
            $ref: '#/components/schemas/ReferenceProprietary'
          type:
            $ref: '#/components/schemas/TypeRef'
          number:
            $ref: '#/components/schemas/Number'
          relatedDate:
            $ref: '#/components/schemas/RelatedDate1'
    OBStructuredList:
      maxItems: 5
      type: array
      items:
        required:
          - number
          - relatedDate1
        type: object
        properties:
          referenceProprietary:
            $ref: '#/components/schemas/ReferenceProprietaryList'
          type:
            $ref: '#/components/schemas/TypeRefList'
          number:
            $ref: '#/components/schemas/Number'
          relatedDate:
            $ref: '#/components/schemas/RelatedDate1'
    OBStructuredTax:
      maxItems: 5
      type: array
      items:
        required:
          - number
          - relatedDate1
        type: object
        properties:
          referenceProprietary:
            $ref: '#/components/schemas/ReferenceProprietaryTax'
          type:
            $ref: '#/components/schemas/TypeRef'
          number:
            $ref: '#/components/schemas/Number'
          relatedDate:
            $ref: '#/components/schemas/RelatedDate1'
    ReferenceProprietary:
      type: string
      maxLength: 35
      minLength: 1
      pattern: '^[A-Z]{4}$'
      description: 'Уникальная ссылка, присвоенная получателем, для однозначной ссылки на платежную транзакцию. Собственная идентификация типа ссылочного документа. Согласно справочнику N080 (для указания информации о законодательном акте), справочнику N101 (для иных ссылочных документов)'
      example: 'CMCN'
    ReferenceProprietaryList:
      type: string
      maxLength: 35
      minLength: 1
      pattern: '^[A-Z]{4}$'
      description: 'Уникальная ссылка, присвоенная получателем, для однозначной ссылки на платежную транзакцию. Собственная идентификация типа ссылочного документа. Согласно справочнику N080 (для указания информации о законодательном акте), справочнику N101 (для иных ссылочных документов)'
      example: 'LIST'
    ReferenceProprietaryTax:
      type: string
      maxLength: 35
      minLength: 1
      pattern: '^[A-Z]{4}$'
      description: 'Уникальная ссылка, присвоенная получателем, для однозначной ссылки на платежную транзакцию. Собственная идентификация типа ссылочного документа. Согласно справочнику N080 (для указания информации о законодательном акте), справочнику N101 (для иных ссылочных документов)'
      example: 'SBIN'
    TypeRef:
      type: string
      maxLength: 35
      minLength: 1
      pattern: '^[A-Z]{4}$'
      description: 'тип ссылочного документа согласно справочнику справочнику N101'
      example: 'SBIN'
    TypeRefList:
      type: string
      maxLength: 35
      minLength: 1
      pattern: '^[A-Z]{4}$'
      description: 'тип ссылочного документа согласно справочнику справочнику N101'
      example: 'LIST'
    Number:
      type: string
      maxLength: 35
      minLength: 1
      description: 'Номер ссылочного документа'
      example: '1234567'
    RelatedDate:
      type: string
      format: date
      description: 'Дата ссылочного документа'
      example: '2021-04-15'
    RelatedDate1:
      type: string
      format: date
      description: 'Дата ссылочного документа'
      example: '2021-04-15'
    OBDebtor:
      required:
        - name
        - taxIdentification
      type: object
      properties:
        taxIdentification:
          $ref: '#/components/schemas/OBDebtorTaxIdentification'
        name:
          $ref: '#/components/schemas/OBDebtorName'
        debtorAccount:
          $ref: '#/components/schemas/OBDebtorAccount'
        debtorAgent:
          $ref: '#/components/schemas/OBDebtorAgent'
    OBDebtorTaxIdentification:
      maxLength: 35
      minLength: 1
      pattern: '^[A-Z]{3}[A-Z0-9]{9}$'
      required:
        - taxIdentification
      type: string
      description: 'Налоговый идентификационный номер плательщика'
      example: 'INN191767195'
    OBDebtorName:
      maxLength: 140
      minLength: 1
      type: string
      description: 'Наименование плательщика'
      example: 'ООО "ИМИДЖ МЕДИА"'
    OBDebtorAccount:
      type: object
      properties:
        schemeName:
          $ref: '#/components/schemas/OBDebtorAccountSchemeName'
        identification:
          $ref: '#/components/schemas/OBdebtorAccountIdentification'
    OBDebtorAgent:
      type: object
      properties:
        identification:
          $ref: '#/components/schemas/OBdebtorAgentIdentification'
        name:
          $ref: '#/components/schemas/OBDebtorAgentName'
    OBdebtorAgentIdentification:
      pattern: '^[A-Z0-9]{4}[A-Z]{2}[A-Z0-9]{2}([A-Z0-9]{3}){0,1}$'
      required:
        - identification
      type: string
      description: >-
        Код, присвоенный финансовому учреждению органом, присваивающим коды в
        соответствии со стандартом ISO 9362 (SWIFT) ”Банковское дело. Банковские
        телекоммуникационные сообщения. Идентификационные коды банков (BIC)“
      example: 'REDJBY22'
    OBDebtorAgentName:
      maxLength: 140
      minLength: 1
      type: string
      description: 'Наименование финансового учреждения, обслуживающего плательщика'
      example: 'ЗАО "РРБ-БАНК"'
    OBDebtorAccountSchemeName:
      required:
        - schemeName
      type: string
      example: 'BY.NBRB.IBAN'
    OBdebtorAccountIdentification:
      pattern: '^[A-Z]{2}[0-9]{2}[A-Z]{4}[0-9]{4}[A-Z0-9]{16}$'
      required:
        - identification
      type: string
      description: 'Уникальная идентификация счета, присвоенная организацией, обслуживающей счет с использованием схемы идентификации'
      example: 'BY20REDJ30121006131010000933'
    OBCreditor:
      required:
        - name
        - taxIdentification
      type: object
      properties:
        taxIdentification:
          $ref: '#/components/schemas/OBCreditorTaxIdentification'
        name:
          $ref: '#/components/schemas/OBCreditorName'
        creditorAccount:
          $ref: '#/components/schemas/OBCreditorAccount'
        creditorAgent:
          $ref: '#/components/schemas/OBCreditorAgent'
    OBCreditorTaxIdentification:
      maxLength: 35
      minLength: 1
      pattern: '^[A-Z]{3}[A-Z0-9]{9}$'
      required:
        - taxIdentification
      type: string
      description: 'Налоговый идентификационный номера получателя'
      example: 'INN200025739'
    OBCreditorName:
      maxLength: 140
      minLength: 1
      type: string
      description: 'Наименование получателя'
      example: 'ОАО "Березовский мясокомбинат"'
    OBCreditorAccount:
      type: object
      properties:
        schemeName:
          $ref: '#/components/schemas/OBCreditorAccountSchemeName'
        identification:
          $ref: '#/components/schemas/OBCreditorAccountIdentification'
    OBCreditorAgent:
      type: object
      properties:
        identification:
          $ref: '#/components/schemas/OBCreditorAgentIdentification'
        name:
          $ref: '#/components/schemas/OBCreditorAgentName'
    OBCreditorAgentIdentification:
      pattern: '^[A-Z0-9]{4}[A-Z]{2}[A-Z0-9]{2}([A-Z0-9]{3}){0,1}$'
      required:
        - identification
      type: string
      description: >-
        Код, присвоенный финансовому учреждению органом, присваивающим коды в
        соответствии со стандартом ISO 9362 (SWIFT) ”Банковское дело. Банковские
        телекоммуникационные сообщения. Идентификационные коды банков (BIC)“
      example: 'BAPBBY2X'
    OBCreditorAgentName:
      maxLength: 140
      minLength: 1
      type: string
      description: 'Наименование финансового учреждения, обслуживающего плательщика'
      example: 'ОАО "Белагропромбанк'
    OBCreditorAccountSchemeName:
      required:
        - schemeName
      type: string
      example: 'BY.NBRB.IBAN'
    OBCreditorAccountIdentification:
      pattern: '^[A-Z]{2}[0-9]{2}[A-Z]{4}[0-9]{4}[A-Z0-9]{16}$'
      required:
        - identification
      type: string
      example: 'BY28BAPB30124232900110000000'
    OBCreditorTax:
      required:
        - name
        - taxIdentification
      type: object
      properties:
        taxIdentification:
          $ref: '#/components/schemas/OBCreditorTaxIdentificationTax'
        name:
          $ref: '#/components/schemas/OBCreditorNameTax'
        creditorAccount:
          $ref: '#/components/schemas/OBCreditorAccountTax'
        creditorAgent:
          $ref: '#/components/schemas/OBCreditorAgentTax'
    OBCreditorTaxIdentificationTax:
      maxLength: 35
      minLength: 1
      pattern: '^[A-Z]{3}[A-Z0-9]{9}$'
      required:
        - taxIdentification
      type: string
      description: 'Налоговый идентификационный номера получателя'
      example: 'INN200045679'
    OBCreditorNameTax:
      maxLength: 140
      minLength: 1
      type: string
      description: 'Наименование получателя'
      example: 'ГЛАВНОЕ УПРАВЛЕНИЕ МИНИСТЕРСТВА ФИНАНСОВ РБ"'
    OBCreditorAccountTax:
      type: object
      properties:
        schemeName:
          $ref: '#/components/schemas/OBCreditorAccountSchemeNameTax'
        identification:
          $ref: '#/components/schemas/OBCreditorAccountIdentificationTax'
    OBCreditorAgentTax:
      type: object
      properties:
        identification:
          $ref: '#/components/schemas/OBCreditorAgentIdentificationTax'
        name:
          $ref: '#/components/schemas/OBCreditorAgentNameTax'
    OBCreditorAgentIdentificationTax:
      pattern: '^[A-Z0-9]{4}[A-Z]{2}[A-Z0-9]{2}([A-Z0-9]{3}){0,1}$'
      required:
        - identification
      type: string
      description: >-
        Код, присвоенный финансовому учреждению органом, присваивающим коды в
        соответствии со стандартом ISO 9362 (SWIFT) ”Банковское дело. Банковские
        телекоммуникационные сообщения. Идентификационные коды банков (BIC)“
      example: 'AKBBBY2X'
    OBCreditorAgentNameTax:
      maxLength: 140
      minLength: 1
      type: string
      description: 'Наименование финансового учреждения, обслуживающего плательщика'
      example: 'ОАО "АСБ БЕЛАРУСБАНК"'
    OBCreditorAccountSchemeNameTax:
      required:
        - schemeName
      type: string
      example: 'BY.NBRB.IBAN'
    OBCreditorAccountIdentificationTax:
      pattern: '^[A-Z]{2}[0-9]{2}[A-Z]{4}[0-9]{4}[A-Z0-9]{16}$'
      required:
        - identification
      type: string
      example: 'BY02AKBB36029120100030000000'
    OBCreditorList:
      required:
        - name
        - taxIdentification
      type: object
      properties:
        taxIdentification:
          $ref: '#/components/schemas/OBCreditorTaxIdentificationList'
        name:
          $ref: '#/components/schemas/OBCreditorNameList'
        creditorAccount:
          $ref: '#/components/schemas/OBCreditorAccountList'
        creditorAgent:
          $ref: '#/components/schemas/OBCreditorAgentList'
    OBCreditorTaxIdentificationList:
      maxLength: 35
      minLength: 1
      pattern: '^[A-Z]{3}[A-Z0-9]{9}$'
      required:
        - taxIdentification
      type: string
      description: 'Налоговый идентификационный номера получателя'
      example: 'INB100010078'
    OBCreditorNameList:
      maxLength: 140
      minLength: 1
      type: string
      description: 'Наименование получателя'
      example: 'ОАО "БАНК БЕЛВЭБ"'
    OBCreditorAccountList:
      type: object
      properties:
        schemeName:
          $ref: '#/components/schemas/OBCreditorAccountSchemeNameList'
        identification:
          $ref: '#/components/schemas/OBCreditorAccountIdentificationList'
    OBCreditorAgentList:
      type: object
      properties:
        identification:
          $ref: '#/components/schemas/OBCreditorAgentIdentificationList'
        name:
          $ref: '#/components/schemas/OBCreditorAgentNameList'
    OBCreditorAgentIdentificationList:
      pattern: '^[A-Z0-9]{4}[A-Z]{2}[A-Z0-9]{2}([A-Z0-9]{3}){0,1}$'
      required:
        - identification
      type: string
      description: >-
        Код, присвоенный финансовому учреждению органом, присваивающим коды в
        соответствии со стандартом ISO 9362 (SWIFT) ”Банковское дело. Банковские
        телекоммуникационные сообщения. Идентификационные коды банков (BIC)“
      example: 'BELBBY2X'
    OBCreditorAgentNameList:
      maxLength: 140
      minLength: 1
      type: string
      description: 'Наименование финансового учреждения, обслуживающего бенефициара'
      example: 'ОАО "БАНК БЕЛВЭБ"'
    OBCreditorAccountSchemeNameList:
      required:
        - schemeName
      type: string
      example: 'BY.NBRB.IBAN'
    OBCreditorAccountIdentificationList:
      pattern: '^[A-Z]{2}[0-9]{2}[A-Z]{4}[0-9]{4}[A-Z0-9]{16}$'
      required:
        - identification
      type: string
      example: 'BY97BELB38198184210010226000'
    OBErrorResponse1:
      required:
        - Code
        - Errors
        - Message
      type: object
      properties:
        Code:
          maxLength: 35
          minLength: 1
          type: string
          description: >-
            Высокоуровневый текстовый код ошибки, который помогает ее
            классифицировать.
        Id:
          maxLength: 35
          minLength: 1
          type: string
          description: >-
            Уникальная ссылка на ошибку для целей аудита в случае
            неизвестной/несекретной ошибки.
        Message:
          maxLength: 500
          minLength: 1
          type: string
          description: 'Краткое сообщение об ошибке'
        Errors:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/OBError1'
      additionalProperties: false
      description: >-
        Массив подробных кодов ошибок, сообщений и URL-адресов для
        документирования.
    OBError1:
      minProperties: 1
      required:
        - ErrorCode
        - Message
      type: object
      properties:
        ErrorCode:
          type: string
          description: 'Низкоуровневый код ошибки'
        Message:
          maxLength: 500
          minLength: 1
          type: string
          description: 'Описание ошибки'
        Path:
          maxLength: 500
          minLength: 1
          type: string
          description: >-
            Рекомендуемая, но не обязательная ссылка на на JSON-путь поля с
            ошибкой.
        Url:
          type: string
          description: >-
            URL-адрес, предоставляющий дополнительную информацию для решения
            проблемы.
      additionalProperties: false
  parameters:
    domesticConsentIdHeader:
      name: domesticConsentId
      in: header
      description: 'Идентификатор платежного указания на инициирование платежа, присвоенный на стороне Поставщика API'
      required: true
      style: simple
      explode: false
      schema:
        type: string
    VRPConsentIdHeader:
      name: VRPConsentId
      in: header
      description: 'Идентификатор платежного указания на инициирование рекуррентного платежа, присвоенный на стороне Поставщика API'
      required: true
      style: simple
      explode: false
      schema:
        type: string
    listAccountsConsentIdHeader:
      name: listAccountsConsentId
      in: header
      description: 'Идентификатор платежного указания на инициирование платежа, присвоенный на стороне Поставщика API'
      required: true
      style: simple
      explode: false
      schema:
        type: string
    listPassportsConsentIdHeader:
      name: listPassportsConsentId
      in: header
      description: 'Идентификатор платежного указания на инициирование платежа, присвоенный на стороне Поставщика API'
      required: true
      style: simple
      explode: false
      schema:
        type: string
    requirementConsentIdHeader:
      name: requirementConsentId
      in: header
      description: 'Идентификатор платежного указания на выставление платежного требования, присвоенный на стороне Поставщика API'
      required: true
      style: simple
      explode: false
      schema:
        type: string
    domesticIdHeader:
      name: domesticId
      in: header
      description: 'Идентификатор платежа'
      required: true
      style: simple
      explode: false
      schema:
        type: string
    domesticTaxConsentIdHeader:
      name: domesticTaxConsentId
      in: header
      description: 'Идентификатор платежного указания на инициирование налогового платежа, присвоенный на стороне Поставщика API'
      required: true
      style: simple
      explode: false
      schema:
        type: string
    taxRequirementConsentIdHeader:
      name: taxRequirementConsentId
      in: header
      description: 'Идентификатор платежного указания на выставление платежного требования на уплату налогов (других платежей в бюджет)'
      required: true
      style: simple
      explode: false
      schema:
        type: string
    domesticTaxId:
      name: domesticTaxId
      in: path
      description: 'Идентификатор налогового платежа'
      required: true
      style: simple
      explode: false
      schema:
        type: string
    domesticPaymentConsentId:
      name: domesticPaymentConsentId
      in: path
      description: 'Идентификатор платежного указания на проведение платежа, присвоенный на стороне Поставщика API'
      required: true
      style: simple
      explode: false
      schema:
        type: string
    domesticId:
      name: domesticId
      in: path
      description: 'Идентификатор платежа'
      required: true
      style: simple
      explode: false
      schema:
        type: string
    VRPId:
      name: VRPId
      in: path
      description: 'Идентификатор платежа'
      required: true
      style: simple
      explode: false
      schema:
        type: string
    listAccountsId:
      name: listAccountsId
      in: path
      description: 'Идентификатор платежного поручения со списком счетов'
      required: true
      style: simple
      explode: false
      schema:
        type: string
    listPassportsId:
      name: listPassportsId
      in: path
      description: 'Идентификатор платежного поручения со списком счетов'
      required: true
      style: simple
      explode: false
      schema:
        type: string
    requirementId:
      name: requirementId
      in: path
      description: 'Идентификатор платежного требования'
      required: true
      style: simple
      explode: false
      schema:
        type: string
    taxRequirementId:
      name: taxRequirementId
      in: path
      description: 'Идентификатор платежного требования на уплату налогов (других патежей в бюджет)'
      required: true
      style: simple
      explode: false
      schema:
        type: string
    x-fapi-customer-ip-address:
      name: x-fapi-customer-ip-address
      in: header
      description: 'IP-адрес Клиента, если Клиент вошел в систему с помощью TPP'
      required: false
      style: simple
      explode: false
      schema:
        type: string
    x-fapi-auth-date:
      name: x-fapi-auth-date
      in: header
      description: >-
        Время, когда Клиент последний раз входил в систему через TPP. Значение
        времени предоставляется в формате RFC7231. пример: Sun, 10 Sep 2017
        19:43:31 UTC
      required: false
      style: simple
      explode: false
      schema:
        pattern: >-
          ^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2}
          (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4}
          \d{2}:\d{2}:\d{2} (GMT|UTC)$
        type: string
    x-fapi-interaction-id:
      name: x-fapi-interaction-id
      in: header
      description: 'RFC4122 UID, используемый в качестве идентификатора корреляции'
      required: false
      style: simple
      explode: false
      schema:
        type: string
    x-idempotency-key:
      name: x-idempotency-key
      in: header
      description: >
        Уникальный идентификатор запроса для поддержки
        идемпотентности.Используется для решения проблем потери связи и отправки
        повторного запроса.
      required: true
      style: simple
      explode: false
      schema:
        maxLength: 40
        pattern: ^(?!\s)(.*)(\S)$
        type: string
    DomesticConsentId:
      name: domesticConsentId
      in: path
      description: 'Идентификатор платежного указания'
      required: true
      style: simple
      explode: false
      schema:
        type: string
    VRPConsentId:
      name: VRPConsentId
      in: path
      description: 'Идентификатор платежного указания'
      required: true
      style: simple
      explode: false
      schema:
        type: string
    requirementConsentId:
      name: requirementConsentId
      in: path
      description: 'Идентификатор платежного указания'
      required: true
      style: simple
      explode: false
      schema:
        type: string
    taxRequirementConsentId:
      name: taxRequirementConsentId
      in: path
      description: 'Идентификатор платежного указания'
      required: true
      style: simple
      explode: false
      schema:
        type: string
    listAccountsConsentId:
      name: listAccountsConsentId
      in: path
      description: 'Идентификатор платежного указания'
      required: true
      style: simple
      explode: false
      schema:
        type: string
    listPassportsConsentId:
      name: listPassportsConsentId
      in: path
      description: 'Идентификатор платежного указания'
      required: true
      style: simple
      explode: false
      schema:
        type: string
    domesticTaxConsentId:
      name: domesticTaxConsentId
      in: path
      description: 'Идентификатор платежного указания'
      required: true
      style: simple
      explode: false
      schema:
        type: string
    Authorization:
      name: authorization
      in: header
      description: >-
        Стандартный заголовок, который позволяет предоставлять учетные данные
        серверу авторизации и (или) серверу ресурсов в зависимости от типа
        запрашиваемого ресурса
      required: false
      style: simple
      explode: false
      schema:
        type: string
    x-customer-user-agent:
      name: x-customer-user-agent
      in: header
      description: 'Указывается тип устройства (user-agent), который использует Клиент'
      required: false
      style: simple
      explode: false
      schema:
        type: string
    x-jws-signature:
      in: "header"
      name: "x-jws-signature"
      required: true
      description: "A detached JWS signature of the body of the payload."
      schema:
        type: "string"
  responses:
    201PaymentConsentsTax:
      description: Ответ
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OBPaymentConsentTax1'
    201PaymentConsentsTaxReq:
      description: Ответ
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OBPaymentConsentTaxReq1'
    200PaymentConsentsTax:
      description: Ответ
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OBPaymentConsentTax2'
    200PaymentConsentsTaxReq:
      description: Ответ
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OBPaymentConsentTaxReq2'
    201PaymentConsents:
      description: Ответ
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OBPaymentConsent1'
    201VRPConsents:
      description: Ответ
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OBVRPConsent1'
    201ReqConsents:
      description: Ответ
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OBReqConsent1'
    201PaymentConsentsListAccounts:
      description: Ответ
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OBPaymentConsentListAccounts1'
    201PaymentConsentsListPassports:
      description: Ответ
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OBPaymentConsentListPassports1'
    200PaymentConsents:
      description: Ответ
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OBPaymentConsent2'
    200VRPConsents:
      description: Ответ
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OBVRPConsent2'
    200ReqConsents:
      description: Ответ
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OBReqConsent2'
    200PaymentConsentsListAccounts:
      description: Ответ
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OBPaymentConsentListAccounts2'
    200PaymentConsentsListPassports:
      description: Ответ
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OBPaymentConsentListPassports2'
    201OBPayment1:
      description: Ответ
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OBPayment1'
    201OBVRP1:
      description: Ответ
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OBVRP1'
    201OBPaymentReq1:
      description: Ответ
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OBPaymentReq1'
    201OBPaymentListAccounts1:
      description: Ответ
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OBPaymentListAccounts1'
    201OBPaymentListPassports1:
      description: Ответ
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OBPaymentListPassports1'
    201OBTaxPayment1:
      description: Ответ
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OBTaxPayment1'
    201OBTaxPaymentReq1:
      description: Ответ
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OBTaxPaymentReq1'
    200OBPayment2:
      description: Ответ
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OBPayment2'
    200OBVRP2:
      description: Ответ
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OBVRP2'
    200OBPaymentReq2:
      description: Ответ
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OBPaymentReq2'
    200OBPaymentListAccounts2:
      description: Ответ
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OBPaymentListAccounts2'
    200OBPaymentListPassports2:
      description: Ответ
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OBPaymentListPassports2'
    200OBTaxPayment2:
      description: Ответ
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OBTaxPayment2'
    200OBTaxPaymentReq2:
      description: Ответ
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OBTaxPaymentReq2'
    200PaymentStatus:
      description: Ответ
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OBPaymentStatus'
    204PaymentConsentIdDeleted:
      description: Payment Access Consents Deleted
      headers:
        x-fapi-interaction-id:
          description: 'RFC4122 UID, используемый в качестве идентификатора корреляции'
          style: simple
          explode: false
          schema:
            type: string
    400Error:
      description: Bad request
      headers:
        x-fapi-interaction-id:
          description: 'RFC4122 UID, используемый в качестве идентификатора корреляции'
          style: simple
          explode: false
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OBErrorResponse1'
    401Error:
      description: Unauthorized
      headers:
        x-fapi-interaction-id:
          description: 'RFC4122 UID, используемый в качестве идентификатора корреляции'
          style: simple
          explode: false
          schema:
            type: string
    403Error:
      description: Forbidden
      headers:
        x-fapi-interaction-id:
          description: 'RFC4122 UID, используемый в качестве идентификатора корреляции'
          style: simple
          explode: false
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OBErrorResponse1'
    404Error:
      description: Not found
      headers:
        x-fapi-interaction-id:
          description: 'RFC4122 UID, используемый в качестве идентификатора корреляции'
          style: simple
          explode: false
          schema:
            type: string
    405Error:
      description: Method Not Allowed
      headers:
        x-fapi-interaction-id:
          description: 'RFC4122 UID, используемый в качестве идентификатора корреляции'
          style: simple
          explode: false
          schema:
            type: string
    406Error:
      description: Not Acceptable
      headers:
        x-fapi-interaction-id:
          description: 'RFC4122 UID, используемый в качестве идентификатора корреляции'
          style: simple
          explode: false
          schema:
            type: string
    415Error:
      description: Unsupported Media Type
      headers:
        x-fapi-interaction-id:
          description: 'RFC4122 UID, используемый в качестве идентификатора корреляции'
          style: simple
          explode: false
          schema:
            type: string
    429Error:
      description: Too Many Requests
      headers:
        Retry-After:
          description: Время ожидания в секундах
          style: simple
          explode: false
          schema:
            type: integer
        x-fapi-interaction-id:
          description: 'RFC4122 UID, используемый в качестве идентификатора корреляции'
          style: simple
          explode: false
          schema:
            type: string
    500Error:
      description: Internal Server Error
      headers:
        x-fapi-interaction-id:
          description: 'RFC4122 UID, используемый в качестве идентификатора корреляции'
          style: simple
          explode: false
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OBErrorResponse1'
  securitySchemes:
    default:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: ''
          scopes: {}
x-wso2-auth-header: Authorization
x-wso2-cors:
  corsConfigurationEnabled: false
  accessControlAllowOrigins:
    - '*'
  accessControlAllowCredentials: false
  accessControlAllowHeaders:
    - authorization
    - Access-Control-Allow-Origin
    - Content-Type
    - SOAPAction
    - apikey
    - testKey
  accessControlAllowMethods:
    - GET
    - PUT
    - POST
    - DELETE
    - PATCH
    - OPTIONS
x-wso2-production-endpoints:
  urls:
    - 'http://paymentapi.st.by:8089'
  type: http
x-wso2-sandbox-endpoints:
  urls:
    - 'http://paymentapi.st.by:8089'
  type: http
x-wso2-basePath: /payment_initiation/v1.0
x-wso2-transports:
  - http
  - https
x-wso2-response-cache:
  enabled: false
  cacheTimeoutInSeconds: 300